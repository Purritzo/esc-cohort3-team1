{
  "stats": {
    "suites": 11,
    "tests": 107,
    "passes": 99,
    "pending": 0,
    "failures": 8,
    "start": "2023-08-06T08:30:02.770Z",
    "end": "2023-08-06T08:32:01.816Z",
    "duration": 119046,
    "testsRegistered": 107,
    "passPercent": 92.5233644859813,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b865a82a-248d-48e7-8646-212e9ae7061f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "74e8b95b-44ea-4400-94fb-6801804b0f87",
          "title": "Successful/Usual Service Ticket Workflow",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\fast_ticket_workflow.spec.js",
          "file": "\\test\\fast_ticket_workflow.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 1736,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\n//landlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "a70b9c7a-a4bf-42c6-8cac-2e831c6565fc",
              "parentUUID": "74e8b95b-44ea-4400-94fb-6801804b0f87",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 32,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); //await landlord_driver.quit()",
              "err": {},
              "uuid": "8d5e5d1d-ea63-4401-a5aa-7776d2eed490",
              "parentUUID": "74e8b95b-44ea-4400-94fb-6801804b0f87",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Tenant Option",
              "timedOut": false,
              "duration": 1163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n// In first page\nlet tenantOptionButton = await tenant_driver.wait(until.elementIsVisible(tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\"))));\nawait tenantOptionButton.click()\n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "e373ea89-df34-488a-8ddf-60d8aaa1575d",
              "parentUUID": "74e8b95b-44ea-4400-94fb-6801804b0f87",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Login",
              "timedOut": false,
              "duration": 821,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to landing page first\n// Reason is because we need to click the button to set user type\nawait tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n// In first page\nlet tenantOptionButton = await tenant_driver.wait(until.elementIsVisible(tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\"))));\nawait tenantOptionButton.click()\nlet loginField = await tenant_driver.wait(until.elementIsVisible(tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait loginField.sendKeys('tenant1@gmail.com')\nlet passwordField = await tenant_driver.wait(until.elementIsVisible(tenant_driver.findElement(By.xpath('//*[@id=\"password\"]'))));\nawait passwordField.sendKeys('password')\nlet loginButton = await tenant_driver.wait(until.elementIsVisible(tenant_driver.findElement(By.xpath('//*[@id=\"loginButton\"]'))));\nawait loginButton.click()\nawait tenant_driver.manage().setTimeouts({ implicit: 3000 });\n// In Tenant Dashboard\nlet dashboardText = await tenant_driver.wait(until.elementIsVisible(tenant_driver.findElement(By.xpath(\"//*[@id='emailText']\"))));\nlet result = await dashboardText.isDisplayed()\nassert.equal(true, result)",
              "err": {},
              "uuid": "a516d9a1-3a87-4aaa-a8eb-33a2256d3532",
              "parentUUID": "74e8b95b-44ea-4400-94fb-6801804b0f87",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e373ea89-df34-488a-8ddf-60d8aaa1575d",
            "a516d9a1-3a87-4aaa-a8eb-33a2256d3532"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1984,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
          "title": "Successful/Usual Service Ticket Workflow",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\happy_wf_1.spec.js",
          "file": "\\test\\happy_wf_1.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 3433,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "5ed3e970-7f3f-47c2-89d2-16adda62e8dc",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 101,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "6c30470f-57c2-4300-8294-bac269e5a426",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Tenant Option",
              "timedOut": false,
              "duration": 1258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "3215a000-fcc6-42e5-840b-adfb52a39fbd",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant login",
              "timedOut": false,
              "duration": 496,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n\n      let pw_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await tenant_driver.manage().setTimeouts({implicit: 1000});\n\n      // In Tenant Dashboard\n      let next_pg = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "7b153973-51df-4eef-8d7d-a95994b12722",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1710,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon is not cold\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "43542d3b-ae8d-4a4d-8164-293582f95af7",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Landlord Option",
              "timedOut": false,
              "duration": 1197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "0c8c2b04-9dae-4373-9001-e8cf5d22a27c",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord login",
              "timedOut": false,
              "duration": 507,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n  let email_in = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n  await email_in.sendKeys('landlord1@gmail.com');\n    \n  let pw_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n  await pw_in.sendKeys('password');\n\n  let submit_button = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n  await submit_button.click();\n\n  await landlord_driver.manage().setTimeouts({implicit: 1000});\n\n  // In Landlord Dashboard\n  let next_pg = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n  let result = await next_pg.getText();\n  assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "29d63849-cdc1-4970-9215-088b9a67c8d4",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Service Tickets",
              "timedOut": false,
              "duration": 316,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await landlord_driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "8082cddd-98ea-4123-a4d7-8bd39567477f",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Select Service Ticket",
              "timedOut": false,
              "duration": 429,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Find ticket\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\n// Click on \"details\" button\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n// // View drop down box\n// let lastTicket = await landlord_driver.wait(until.elementIsVisible(\n//   landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\n// ));\n// await landlord_driver.executeScript(\"arguments[0].click();\", lastTicket)\n// // await landlord_driver.sleep(2000)\n// // await lastTicket.click()\n// // await landlord_driver.executeScript(\"arguments[0].click();\", lastTicket)\n// // Click \"View Details& Actions\" Button\n// let detailsButton = await landlord_driver.wait(until.elementIsVisible(\n//   landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\n// ));\n// await landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n// Enter new page\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "ebdc01eb-59bd-4539-87d6-57c3011c979c",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\nlet quotationCheckbox = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\n));\nlet approveButton = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\n));\nawait landlord_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait landlord_driver.sleep(100)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "e7d80df3-3008-422c-ac9f-06c1ac29e19e",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Upload Quotation",
              "timedOut": false,
              "duration": 402,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\nconst addQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", addQuotationButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL)\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"))\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"))\nawait uploadButton.click()\nawait landlord_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "da5c4513-5d3b-4691-93af-cb2a3474e8c0",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View Quotation",
              "timedOut": false,
              "duration": 766,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst viewQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", viewQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL)",
              "err": {},
              "uuid": "3840eb14-2a2f-4de2-b433-67fe4fe82e94",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Approve Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Approve Quotation",
              "timedOut": false,
              "duration": 304,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\nconst quotationCheckbox = tenant_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nconst approveButton = tenant_driver.findElement(By.xpath(\"//button[text()='Approve']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait tenant_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "88251d6e-3fa4-47a4-868d-b644829204bf",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Starts Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Starts Work",
              "timedOut": false,
              "duration": 940,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "893f29e6-9eb0-4e64-afb7-53ca1f1ec566",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Ends Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Ends Work",
              "timedOut": false,
              "duration": 881,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "eb62bbe3-a403-4e2b-aec6-4c2edfce43be",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Give Feedback",
              "timedOut": false,
              "duration": 1307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\nawait tenant_driver.sleep(200)\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\nawait tenant_driver.sleep(200);\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', currentURL)",
              "err": {},
              "uuid": "081a11cc-4e59-4da5-aa4c-829017d44994",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Feedback",
              "timedOut": false,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet result = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/div[1]/textarea'))\n  ));\nlet feedback = await result.getText();\nassert.equal(\"Dummy Feedback Comment\", feedback)",
              "err": {},
              "uuid": "309ef73d-332c-4ee5-9a71-cddba95bba43",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Sign Out",
              "timedOut": false,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n    let signout = await landlord_driver.wait(until.elementIsVisible(\n      landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n    ))\n    await signout.click();\n    await landlord_driver.manage().setTimeouts({implicit: 500});\n    // Check if ticket portal is shown\n    const currentURL = await landlord_driver.getCurrentUrl();\n    assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "5025ab66-94b1-45b4-a65f-1dfe587814fe",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Sign Out",
              "timedOut": false,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "c97a5783-a4e0-4834-9ffb-89544a679567",
              "parentUUID": "ae428c84-a639-49a1-a9fe-5c4fa09126a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3215a000-fcc6-42e5-840b-adfb52a39fbd",
            "7b153973-51df-4eef-8d7d-a95994b12722",
            "43542d3b-ae8d-4a4d-8164-293582f95af7",
            "0c8c2b04-9dae-4373-9001-e8cf5d22a27c",
            "29d63849-cdc1-4970-9215-088b9a67c8d4",
            "8082cddd-98ea-4123-a4d7-8bd39567477f",
            "ebdc01eb-59bd-4539-87d6-57c3011c979c",
            "e7d80df3-3008-422c-ac9f-06c1ac29e19e",
            "da5c4513-5d3b-4691-93af-cb2a3474e8c0",
            "3840eb14-2a2f-4de2-b433-67fe4fe82e94",
            "88251d6e-3fa4-47a4-868d-b644829204bf",
            "893f29e6-9eb0-4e64-afb7-53ca1f1ec566",
            "eb62bbe3-a403-4e2b-aec6-4c2edfce43be",
            "081a11cc-4e59-4da5-aa4c-829017d44994",
            "309ef73d-332c-4ee5-9a71-cddba95bba43",
            "5025ab66-94b1-45b4-a65f-1dfe587814fe",
            "c97a5783-a4e0-4834-9ffb-89544a679567"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11153,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "10d8d27c-395a-4e43-af22-6166a45edbb4",
          "title": "Successful/Usual Service Ticket Workflow",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\happy_wf_2.spec.js",
          "file": "\\test\\happy_wf_2.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 3449,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "d0de0995-fc07-4d5e-b392-678a173db126",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 73,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "b47079c1-17c3-4f3f-971d-e0e04dd04957",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Tenant Option",
              "timedOut": false,
              "duration": 1203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "e1e5483a-4eec-4609-99b3-fc3d01c27215",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant login",
              "timedOut": false,
              "duration": 525,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n\n      let pw_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await tenant_driver.manage().setTimeouts({implicit: 1000});\n\n      // In Tenant Dashboard\n      let next_pg = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "9df2032c-d371-4025-9ff7-4299d1ac8f8d",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1766,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon is freezing\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "1fa07388-a221-42ee-80d8-d370c3f0bb5a",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Landlord Option",
              "timedOut": false,
              "duration": 1243,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "af3538c1-105e-40ca-b89a-86c6f2134200",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord login",
              "timedOut": false,
              "duration": 572,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\nlet email_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait email_in.sendKeys('landlord1@gmail.com');\n    \nlet pw_in = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\nawait pw_in.sendKeys('password');\n      \nlet submit_button = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\nawait submit_button.click();\n      \nawait landlord_driver.manage().setTimeouts({implicit: 1000});\n      \n// In Landlord Dashboard\nlet next_pg = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\nlet result = await next_pg.getText();\nassert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "5a08b226-cda8-44ee-afe7-65fffdc9b3b4",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Service Tickets",
              "timedOut": false,
              "duration": 291,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n))\nawait ticket_list.click();\n  \n      // Check if ticket portal is shown\nconst currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "206fe256-9ebb-41b9-bbd0-fc3e5eec68c4",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Select Service Ticket",
              "timedOut": false,
              "duration": 432,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\n      await landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\n      const detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\n      await landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n      // // View drop down box\n      // let lastTicket = await landlord_driver.wait(until.elementIsVisible(\n      //   landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\n      // ));\n      // await landlord_driver.executeScript(\"arguments[0].click();\", lastTicket)\n      // // await landlord_driver.sleep(2000)\n      // // await lastTicket.click()\n      // // await landlord_driver.executeScript(\"arguments[0].click();\", lastTicket)\n      // // Click \"View Details& Actions\" Button\n      // let detailsButton = await landlord_driver.wait(until.elementIsVisible(\n      //   landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\n      // ));\n      // await landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n      // Enter new page\n      let currentURL = await landlord_driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "6d0c7115-3e9a-48d8-987f-1f13b2432bae",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\n  \nlet approveButton = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\n));\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\n  \nawait landlord_driver.sleep(100)\n  \ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "d8d98b0b-6572-46f1-b58f-557aabf5229b",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Starts Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Starts Work",
              "timedOut": false,
              "duration": 936,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\n    \nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "34f4097b-000a-4cc1-b03c-fcbd590b44f6",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Ends Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Ends Work",
              "timedOut": false,
              "duration": 938,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\n    \nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "8492f741-5e7e-4ea6-97c5-965b4bfac9b2",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Give Feedback",
              "timedOut": false,
              "duration": 1377,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\n    \nawait tenant_driver.sleep(200)\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\n    \nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\n    \nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\n    \nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\n    \nawait tenant_driver.sleep(200);\n    \ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', currentURL)",
              "err": {},
              "uuid": "ef446851-551e-4254-95c0-04ae5509dbe4",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Feedback",
              "timedOut": false,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nlet result = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/div[1]/textarea'))\n  ));\nlet feedback = await result.getText();\nassert.equal(\"Dummy Feedback Comment\", feedback)",
              "err": {},
              "uuid": "faf37ec1-1750-4d82-9c7f-d7009f28e30f",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Sign Out",
              "timedOut": false,
              "duration": 59,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n    let signout = await landlord_driver.wait(until.elementIsVisible(\n      landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n    ))\n    await signout.click();\n    await landlord_driver.manage().setTimeouts({implicit: 500});\n\n    // Check if ticket portal is shown\n    const currentURL = await landlord_driver.getCurrentUrl();\n    assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "05373a6a-97f6-4bd8-9da5-26a84e1aa9ec",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Sign Out",
              "timedOut": false,
              "duration": 65,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n    \n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "9dc0bb4e-cc4d-4148-883d-4cb67d80dfc0",
              "parentUUID": "10d8d27c-395a-4e43-af22-6166a45edbb4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1e5483a-4eec-4609-99b3-fc3d01c27215",
            "9df2032c-d371-4025-9ff7-4299d1ac8f8d",
            "1fa07388-a221-42ee-80d8-d370c3f0bb5a",
            "af3538c1-105e-40ca-b89a-86c6f2134200",
            "5a08b226-cda8-44ee-afe7-65fffdc9b3b4",
            "206fe256-9ebb-41b9-bbd0-fc3e5eec68c4",
            "6d0c7115-3e9a-48d8-987f-1f13b2432bae",
            "d8d98b0b-6572-46f1-b58f-557aabf5229b",
            "34f4097b-000a-4cc1-b03c-fcbd590b44f6",
            "8492f741-5e7e-4ea6-97c5-965b4bfac9b2",
            "ef446851-551e-4254-95c0-04ae5509dbe4",
            "faf37ec1-1750-4d82-9c7f-d7009f28e30f",
            "05373a6a-97f6-4bd8-9da5-26a84e1aa9ec",
            "9dc0bb4e-cc4d-4148-883d-4cb67d80dfc0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9863,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f4010c31-c9fb-41a7-b29b-cff2cde64759",
          "title": "Landlord Lease",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\LAN_alt_lease.spec.js",
          "file": "\\test\\LAN_alt_lease.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"before all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 1770,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "2f8ed160-0409-44ad-a1b5-efe7fa6ae5bc",
              "parentUUID": "f4010c31-c9fb-41a7-b29b-cff2cde64759",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"after all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 26,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "dc6b0662-bd40-4a52-8a88-17b134073e19",
              "parentUUID": "f4010c31-c9fb-41a7-b29b-cff2cde64759",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Landlord Lease Select Landlord Option",
              "timedOut": false,
              "duration": 1184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\n  \nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet landlordButton = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n  \n// In Landlord Login Page\nlet loginText = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "a0f486a8-7697-4751-8524-176ca945938a",
              "parentUUID": "f4010c31-c9fb-41a7-b29b-cff2cde64759",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Landlord Lease Landlord login",
              "timedOut": false,
              "duration": 533,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('landlord1@gmail.com');\n\n      let pw_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await driver.manage().setTimeouts({implicit: 1000});\n\n      // In Landlord Dashboard\n      let next_pg = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "61444d47-6ab0-4a1c-979c-d710dafb2ddd",
              "parentUUID": "f4010c31-c9fb-41a7-b29b-cff2cde64759",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord views Account Management",
              "fullTitle": "Landlord Lease Landlord views Account Management",
              "timedOut": false,
              "duration": 413,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"Account MAnagement\"\nlet account_management = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n));\nawait account_management.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement\", currentURL);",
              "err": {},
              "uuid": "e1bb8789-118b-4e3d-b3e1-0ccdf8b3e875",
              "parentUUID": "f4010c31-c9fb-41a7-b29b-cff2cde64759",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter create new tenant page",
              "fullTitle": "Landlord Lease Enter create new tenant page",
              "timedOut": false,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"create tenant\" button\nlet create_tenant_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div[1]/button'))\n));\nawait create_tenant_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "461e34de-591e-42e5-9fdd-ffaae2d234e5",
              "parentUUID": "f4010c31-c9fb-41a7-b29b-cff2cde64759",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create new tenant -- with same email as existing tenant",
              "fullTitle": "Landlord Lease Create new tenant -- with same email as existing tenant",
              "timedOut": false,
              "duration": 508,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// input email and password\nlet email = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"email\"]'))\n));\nawait email.sendKeys(\"newtenant@gmail.com\");\nlet password = await driver.wait(until.elementIsVisible(\ndriver.findElement(By.xpath('//*[@id=\"password\"]'))\n));\nawait password.sendKeys(\"password\");\nlet create_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"loginButton\"]'))\n));\nawait create_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "683273d1-5318-4dde-9272-5868099d1627",
              "parentUUID": "f4010c31-c9fb-41a7-b29b-cff2cde64759",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0f486a8-7697-4751-8524-176ca945938a",
            "61444d47-6ab0-4a1c-979c-d710dafb2ddd",
            "e1bb8789-118b-4e3d-b3e1-0ccdf8b3e875",
            "461e34de-591e-42e5-9fdd-ffaae2d234e5",
            "683273d1-5318-4dde-9272-5868099d1627"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2725,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0733b168-ca16-4233-85bc-f283fe7e7c06",
          "title": "Unusual Login --Landlord",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\LAN_alt_login.spec.js",
          "file": "\\test\\LAN_alt_login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Unusual Login --Landlord\"",
              "fullTitle": "Unusual Login --Landlord \"before all\" hook in \"Unusual Login --Landlord\"",
              "timedOut": false,
              "duration": 1742,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "landlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "0d7fa5ae-ebb6-44de-841f-143618ee3695",
              "parentUUID": "0733b168-ca16-4233-85bc-f283fe7e7c06",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unusual Login --Landlord\"",
              "fullTitle": "Unusual Login --Landlord \"after all\" hook in \"Unusual Login --Landlord\"",
              "timedOut": false,
              "duration": 25,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.quit()",
              "err": {},
              "uuid": "41834b8d-04bb-47a9-b51c-593f30de002f",
              "parentUUID": "0733b168-ca16-4233-85bc-f283fe7e7c06",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Unusual Login --Landlord Select Landlord Option",
              "timedOut": false,
              "duration": 1347,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 500 });\n// In Landlord Login Page\nlet result = await landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "833e30a1-fdef-4176-8e76-e09130741752",
              "parentUUID": "0733b168-ca16-4233-85bc-f283fe7e7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Wrong login input --> Invalid email",
              "fullTitle": "Unusual Login --Landlord Wrong login input --> Invalid email",
              "timedOut": false,
              "duration": 525,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\nawait landlord_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('fake value');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 100 });\n// invalid input warning\nlet result = await landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[1]/div')).getText();\nassert.equal(\"Invalid email\", result);",
              "err": {},
              "uuid": "af634f38-6381-4bbe-b38c-86b13b2d7b2b",
              "parentUUID": "0733b168-ca16-4233-85bc-f283fe7e7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Empty login input --> Password Required",
              "fullTitle": "Unusual Login --Landlord Empty login input --> Password Required",
              "timedOut": false,
              "duration": 307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\nawait landlord_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait landlord_driver.manage().setTimeouts({ implicit: 500 });\n// Required warning\nlet result = await landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[2]/div[2]')).getText();\nassert.equal(\"Required\", result);",
              "err": {},
              "uuid": "cb41b4e0-9944-4506-9b44-23c983417839",
              "parentUUID": "0733b168-ca16-4233-85bc-f283fe7e7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Forget password",
              "fullTitle": "Unusual Login --Landlord Forget password",
              "timedOut": false,
              "duration": 208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n// click forget password\nawait landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[4]/a')).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 100 });\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ForgotPasswordPage', currentURL)",
              "err": {},
              "uuid": "891ed106-761b-4942-905e-9cf306c05d9a",
              "parentUUID": "0733b168-ca16-4233-85bc-f283fe7e7c06",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "833e30a1-fdef-4176-8e76-e09130741752",
            "af634f38-6381-4bbe-b38c-86b13b2d7b2b",
            "cb41b4e0-9944-4506-9b44-23c983417839",
            "891ed106-761b-4942-905e-9cf306c05d9a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2387,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "73ea9f1b-78b7-4dd3-9eba-ba52b2c2ffb3",
          "title": "Landlord Lease",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\LAN_lease.spec.js",
          "file": "\\test\\LAN_lease.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"before all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 1734,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "6b51aa16-0d58-4018-b926-5662047b81bc",
              "parentUUID": "73ea9f1b-78b7-4dd3-9eba-ba52b2c2ffb3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"after all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 33,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "027b2c34-19ad-42f4-8089-3e20723d3b3e",
              "parentUUID": "73ea9f1b-78b7-4dd3-9eba-ba52b2c2ffb3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Landlord Lease Select Landlord Option",
              "timedOut": false,
              "duration": 1190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\n  \nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet landlordButton = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n  \n// In Landlord Login Page\nlet loginText = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "ca1547de-2e6f-4b66-b5df-49e290c92be3",
              "parentUUID": "73ea9f1b-78b7-4dd3-9eba-ba52b2c2ffb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Landlord Lease Landlord login",
              "timedOut": false,
              "duration": 543,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('landlord1@gmail.com');\n\n      let pw_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await driver.manage().setTimeouts({implicit: 1000});\n\n      // In Landlord Dashboard\n      let next_pg = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "0944d473-3618-459e-9792-8217812700d0",
              "parentUUID": "73ea9f1b-78b7-4dd3-9eba-ba52b2c2ffb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord views Account Management",
              "fullTitle": "Landlord Lease Landlord views Account Management",
              "timedOut": false,
              "duration": 483,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"Account MAnagement\"\nlet account_management = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n));\nawait account_management.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement\", currentURL);",
              "err": {},
              "uuid": "2e87fa39-e347-4d0e-a154-15ec573e3de5",
              "parentUUID": "73ea9f1b-78b7-4dd3-9eba-ba52b2c2ffb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter create new tenant page",
              "fullTitle": "Landlord Lease Enter create new tenant page",
              "timedOut": false,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"create tenant\" button\nlet create_tenant_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div[1]/button'))\n));\nawait create_tenant_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "cc755520-f528-4039-8074-5544f04cf3db",
              "parentUUID": "73ea9f1b-78b7-4dd3-9eba-ba52b2c2ffb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create new tenant",
              "fullTitle": "Landlord Lease Create new tenant",
              "timedOut": false,
              "duration": 490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// input email and password\nlet email = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"email\"]'))\n));\nawait email.sendKeys(\"newtenant2@gmail.com\");\nlet password = await driver.wait(until.elementIsVisible(\ndriver.findElement(By.xpath('//*[@id=\"password\"]'))\n));\nawait password.sendKeys(\"password\");\nlet create_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"loginButton\"]'))\n));\nawait create_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "2cc2bb69-0f90-4eaa-89fc-2baa3ae48078",
              "parentUUID": "73ea9f1b-78b7-4dd3-9eba-ba52b2c2ffb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Find new tenant in Tenant Details table",
              "fullTitle": "Landlord Lease Find new tenant in Tenant Details table",
              "timedOut": false,
              "duration": 2112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1000)\nlet new_tenant = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[contains(text(), \"newtenant@gmail.com\")]'))\n));\nawait driver.executeScript(\"arguments[0].click();\", new_tenant);\nawait driver.sleep(1000)\n// let new_lease = await driver.wait(until.elementIsVisible(\n//   driver.findElement(By.xpath('//*[contains(text(), \"New Lease\")]'))\n// ));\nlet new_lease = await driver.findElement(By.xpath('//*[contains(text(), \"New Lease\")]'))\nawait driver.executeScript(\"arguments[0].click();\", new_lease);\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/LeaseUploadPage/\", currentURL);",
              "err": {},
              "uuid": "2e17981d-6a37-4a83-bf2d-c064babedea9",
              "parentUUID": "73ea9f1b-78b7-4dd3-9eba-ba52b2c2ffb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Lease upload",
              "fullTitle": "Landlord Lease Lease upload",
              "timedOut": false,
              "duration": 1406,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Add floor, unit number, file\nlet floor = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"floor\"]'))\n));\nawait floor.sendKeys(\"01\");\nlet unit_number = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"unit_number\"]'))\n));\nawait unit_number.sendKeys(\"123\");\nlet chooseFileButton = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"files\"]'))\n));\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nlet upalod_lease_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"UploadButton\"]'))\n));\nawait upalod_lease_button.click();\nawait driver.manage().setTimeouts({implicit: 500});\nawait driver.sleep(1000)\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/ViewLeasePage/\", currentURL);\n\n// Click next button\nlet next_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div/div/button[2]'))\n));\nawait driver.executeScript(\"arguments[0].click();\", next_button);\nconst nextURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement/\", nextURL);",
              "err": {},
              "uuid": "683b724e-2aca-4fbb-ae4c-49d2647b83a3",
              "parentUUID": "73ea9f1b-78b7-4dd3-9eba-ba52b2c2ffb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "View lease",
              "fullTitle": "Landlord Lease View lease",
              "timedOut": false,
              "duration": 1249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1000)\nlet new_tenant = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[contains(text(), \"newtenant2@gmail.com\")]'))\n));\nlet view_lease = await driver.findElement(By.xpath('//*[contains(text(), \"View Lease\")]'));\n\nawait driver.executeScript(\"arguments[0].click();\", new_tenant);\nawait driver.executeScript(\"arguments[0].click();\", view_lease);\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/ViewLeasePage/\", currentURL);\n// Click next button\nlet next_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div/div/button[2]'))\n));\nawait driver.executeScript(\"arguments[0].click();\", next_button);\nconst nextURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement/\", nextURL);",
              "err": {},
              "uuid": "07905505-02a6-4ccb-9f84-abba7e1555f1",
              "parentUUID": "73ea9f1b-78b7-4dd3-9eba-ba52b2c2ffb3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca1547de-2e6f-4b66-b5df-49e290c92be3",
            "0944d473-3618-459e-9792-8217812700d0",
            "2e87fa39-e347-4d0e-a154-15ec573e3de5",
            "cc755520-f528-4039-8074-5544f04cf3db",
            "2cc2bb69-0f90-4eaa-89fc-2baa3ae48078",
            "2e17981d-6a37-4a83-bf2d-c064babedea9",
            "683b724e-2aca-4fbb-ae4c-49d2647b83a3",
            "07905505-02a6-4ccb-9f84-abba7e1555f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7575,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5b18c647-daaf-4b0e-b7d2-ed88edb10cad",
          "title": "Unusual Login --Tenant",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\TEN_alt_login.spec.js",
          "file": "\\test\\TEN_alt_login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Unusual Login --Tenant\"",
              "fullTitle": "Unusual Login --Tenant \"before all\" hook in \"Unusual Login --Tenant\"",
              "timedOut": false,
              "duration": 3556,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nchrome_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "d506a062-1caa-4955-9c41-d34a67228d62",
              "parentUUID": "5b18c647-daaf-4b0e-b7d2-ed88edb10cad",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unusual Login --Tenant\"",
              "fullTitle": "Unusual Login --Tenant \"after all\" hook in \"Unusual Login --Tenant\"",
              "timedOut": false,
              "duration": 86,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await chrome_driver.quit()",
              "err": {},
              "uuid": "bb390de3-bcea-47e7-9b58-a5b07d946d0a",
              "parentUUID": "5b18c647-daaf-4b0e-b7d2-ed88edb10cad",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Unusual Login --Tenant Select Tenant Option",
              "timedOut": false,
              "duration": 1280,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 500 });\n// In Tenant Login Page\nlet result = await tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "024b2283-3229-436b-84c2-8b3628bdf437",
              "parentUUID": "5b18c647-daaf-4b0e-b7d2-ed88edb10cad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Wrong login input --> Invalid email",
              "fullTitle": "Unusual Login --Tenant Wrong login input --> Invalid email",
              "timedOut": false,
              "duration": 639,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\nawait tenant_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('fake value');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 100 });\n// invalid input warning\nlet result = await tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[1]/div')).getText();\nassert.equal(\"Invalid email\", result);",
              "err": {},
              "uuid": "59592dea-d65b-40dd-9ef0-2aaf42e17c37",
              "parentUUID": "5b18c647-daaf-4b0e-b7d2-ed88edb10cad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Empty login input --> Password Required",
              "fullTitle": "Unusual Login --Tenant Empty login input --> Password Required",
              "timedOut": false,
              "duration": 373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\nawait tenant_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait tenant_driver.manage().setTimeouts({ implicit: 500 });\n// Required warning\nlet result = await tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[2]/div[2]')).getText();\nassert.equal(\"Required\", result);",
              "err": {},
              "uuid": "6f51e543-242c-412f-bb56-229d90dde2c6",
              "parentUUID": "5b18c647-daaf-4b0e-b7d2-ed88edb10cad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Forget password page",
              "fullTitle": "Unusual Login --Tenant Forget password page",
              "timedOut": false,
              "duration": 243,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\n// click forget password\nawait tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[4]/a')).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 100 });\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ForgotPasswordPage', currentURL)",
              "err": {},
              "uuid": "26ca3e13-464e-4ef1-b2c3-c786adf61684",
              "parentUUID": "5b18c647-daaf-4b0e-b7d2-ed88edb10cad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "024b2283-3229-436b-84c2-8b3628bdf437",
            "59592dea-d65b-40dd-9ef0-2aaf42e17c37",
            "6f51e543-242c-412f-bb56-229d90dde2c6",
            "26ca3e13-464e-4ef1-b2c3-c786adf61684"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2535,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "40844dd3-4af5-464e-9f57-947e97852141",
          "title": "Login",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\TEN_create_ticket.spec.js",
          "file": "\\test\\TEN_create_ticket.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login\"",
              "fullTitle": "Login \"before all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 1779,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "ad4bcf6c-92a2-4486-9146-be1e926341ea",
              "parentUUID": "40844dd3-4af5-464e-9f57-947e97852141",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login\"",
              "fullTitle": "Login \"after all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 32,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "b687858f-07b6-423b-880d-02451f3c4669",
              "parentUUID": "40844dd3-4af5-464e-9f57-947e97852141",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Login Select Tenant Option",
              "timedOut": false,
              "duration": 1172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n// In first page\nlet tenantButton = await driver.wait(until.elementIsVisible(driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n// In Tenant Login Page\nlet loginText = await driver.wait(until.elementIsVisible(driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "7e6e9a11-2bbb-4f3e-a41c-bc0c45045969",
              "parentUUID": "40844dd3-4af5-464e-9f57-947e97852141",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Login Tenant login",
              "timedOut": false,
              "duration": 563,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n      let pw_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n      let submit_button = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n       await driver.manage().setTimeouts({implicit: 1000});\n      // In Tenant Dashboard\n      let next_pg = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "6fbe3ba3-31e9-4b77-990b-9a059e24ed97",
              "parentUUID": "40844dd3-4af5-464e-9f57-947e97852141",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Service Tickets",
              "fullTitle": "Login Tenant View Service Tickets",
              "timedOut": false,
              "duration": 655,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n      let ticket_list = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "5d4a416a-34c1-4555-a35f-7c6516e8d853",
              "parentUUID": "40844dd3-4af5-464e-9f57-947e97852141",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Login Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1543,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n      let create_service_ticket = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n      ))\n      await create_service_ticket.click();\n      await driver.manage().setTimeouts({implicit: 1000});\n      // Request Type\n      let req_type = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n      ));\n      await req_type.click();\n      let sel_dropdown= await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n      ));\n      await sel_dropdown.click();\n      // Request Description\n      let description= await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n      ));\n      await description.sendKeys(\"Aircon is leaking\");\n      await driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n      // Submit Button\n      let submit= await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n      ));\n      await submit.click();\n        \n      await driver.sleep(1000)\n      await driver.manage().setTimeouts({implicit: 2000});\n      // Check if it enters dashboard again\n      const currentURL = await driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "217537d4-b2e4-460d-9dab-72c6b351ab8d",
              "parentUUID": "40844dd3-4af5-464e-9f57-947e97852141",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sign Out",
              "fullTitle": "Login Sign Out",
              "timedOut": false,
              "duration": 57,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n      let signout = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n      ))\n      await signout.click();\n      await driver.manage().setTimeouts({implicit: 500});\n  \n      // Check if ticket portal is shown\n      const currentURL = await driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "4185ca96-8bc7-47bb-8afe-618ec44b395f",
              "parentUUID": "40844dd3-4af5-464e-9f57-947e97852141",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e6e9a11-2bbb-4f3e-a41c-bc0c45045969",
            "6fbe3ba3-31e9-4b77-990b-9a059e24ed97",
            "5d4a416a-34c1-4555-a35f-7c6516e8d853",
            "217537d4-b2e4-460d-9dab-72c6b351ab8d",
            "4185ca96-8bc7-47bb-8afe-618ec44b395f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3990,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
          "title": "Successful/Usual Service Ticket Workflow",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\ticket_workflow.spec.js",
          "file": "\\test\\ticket_workflow.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 3503,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "9110fb18-f02c-4b0c-a51d-5c1e75f5ffe1",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 152,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "6c5cb758-8f83-4c56-b7e4-232cd3a98f4e",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Tenant Option",
              "timedOut": false,
              "duration": 1202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n// In first page\nawait tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n// In Tenant Login Page\nlet result = await tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "d4997e78-e1be-485c-a809-2604a1fabf95",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Login",
              "timedOut": false,
              "duration": 702,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to landing page first\n// Reason is because we need to click the button to set user type\nawait tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n// In first page\nawait tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nawait tenant_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('tenant1@gmail.com');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('password');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"loginButton\"]')).click();\n\nawait tenant_driver.manage().setTimeouts({implicit: 800});\n// In Tenant Dashboard\nlet result =  await tenant_driver.findElement(By.xpath(\"//*[@id='emailText']\")).isDisplayed();\nassert.equal(true, result)",
              "err": {},
              "uuid": "4ee4de42-dbef-4464-b067-21ae589c5bb7",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Landlord Option",
              "timedOut": false,
              "duration": 1111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to landing page\nawait landlord_driver.get('http://localhost:3000/');\n// Initial check\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 500 });\n// In Landlord Login Page\nlet result = await landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "b8e07fc0-a140-4e92-b826-a4068584f794",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Login",
              "timedOut": false,
              "duration": 607,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to landing page first\n// Reason is because we need to click the button to set user type\nawait landlord_driver.get('http://localhost:3000/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n    \nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n    \n// In first page\nawait landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\nawait landlord_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('landlord1@gmail.com');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('password');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 800 });\n// In Landlord Dashboard\nlet result = await landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "a5398200-8500-4d8e-b3d4-d76401d32747",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Service Tickets",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View Service Tickets",
              "timedOut": false,
              "duration": 615,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst result = await tenant_driver.findElement(By.css('#ticketTable')).isDisplayed();\nassert.equal(true, result);",
              "err": {},
              "uuid": "82e25427-7b65-4288-8ff6-564bc8fff492",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1503,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/CreateTicketPage/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n// Find the dropdown element by its CSS selector\nconst dropdownElement = await tenant_driver.findElement(By.css('select[name=\"requestType\"]'));\n// Click on the dropdown element to open the options list\nawait dropdownElement.click();\n// Find the desired option by its text and click on it\nconst optionLocator = By.xpath(`//select[@name=\"requestType\"]/option[text()=\"Aircon\"]`);\nawait tenant_driver.findElement(optionLocator).click();\nawait tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]')).sendKeys('Dummy Request Description');\n// Find the \"Submit\" button by its CSS selector\nconst submitButton = await tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'));\n// Click on the \"Submit\" button\nawait submitButton.click();\nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n// Check that we get redirected to dashboard\nawait tenant_driver.sleep(1000)\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "be7157fa-ca7d-4690-b830-f33a30a914e2",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Created Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View Created Service Ticket",
              "timedOut": false,
              "duration": 3587,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nawait tenant_driver.sleep(3000);\n    \n// Can find element but not visible\nconst result = await tenant_driver.findElement(By.xpath(\"//div[text()='Dummy Request Description']\")).isDisplayed();\nassert.equal(false, result);",
              "err": {},
              "uuid": "7569242e-8c00-4706-be6e-b94459366e8f",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Service Tickets",
              "timedOut": false,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n\nawait landlord_driver.manage().setTimeouts({implicit: 300});\n//TODO - tenant can view tickets\nconst result = await landlord_driver.findElement(By.css('#ticketTable')).isDisplayed();\nassert.equal(true, result);",
              "err": {},
              "uuid": "b470ec61-9510-4df3-8aa3-274c57bef990",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Created Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Created Service Ticket",
              "timedOut": false,
              "duration": 566,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\n    \n// Can find element but not visible\nconst result = await landlord_driver.findElement(By.xpath(\"//div[text()='Dummy Request Description']\")).isDisplayed();\nassert.equal(false, result);",
              "err": {},
              "uuid": "1c7e0362-1423-4ae4-878f-ced729f23ea2",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 3328,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)\nawait landlord_driver.sleep(2000)\nconst quotationCheckbox = landlord_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nconst approveButton = landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait landlord_driver.sleep(100)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)\nawait landlord_driver.sleep(300)",
              "err": {},
              "uuid": "510009aa-1559-4202-b667-25bfecfeae1e",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Upload Quotation",
              "timedOut": false,
              "duration": 3396,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.sleep(3000)\nawait landlord_driver.manage().setTimeouts({implicit: 300});\nconst goToQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", goToQuotationButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL)\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"))\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"))\nawait uploadButton.click()\nawait landlord_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "2976fb3a-2b4e-4a3a-8149-a817e91c8a7d",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View & Approve Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View & Approve Quotation",
              "timedOut": false,
              "duration": 997,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst goToQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", goToQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL)\nconst quotationCheckbox = tenant_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nconst approveButton = tenant_driver.findElement(By.xpath(\"//button[text()='Approve']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait tenant_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "994d3e69-8e95-46f1-b971-d75397f00dc0",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Start Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Start Work",
              "timedOut": false,
              "duration": 959,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "74385710-8e50-4bb8-a977-0f8663d67004",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord End Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord End Work",
              "timedOut": false,
              "duration": 1129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "adf7d831-4503-4a46-8418-b317861630e8",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Give Feedback",
              "timedOut": false,
              "duration": 1355,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\nawait tenant_driver.sleep(200)\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\nawait tenant_driver.sleep(200);\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', currentURL)",
              "err": {},
              "uuid": "a7582991-c89d-4f0e-b202-37b3cb1ad319",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Feedback",
              "timedOut": false,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n\nconst result = await landlord_driver.findElement(By.xpath(\"//*[text()='Dummy Feedback Comment']\")).isDisplayed()\nassert.equal(true, result)",
              "err": {},
              "uuid": "2a01ef89-26f5-4e78-b128-9645972e2917",
              "parentUUID": "a7f9b58c-4fa0-40e4-bf40-696725922dce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4997e78-e1be-485c-a809-2604a1fabf95",
            "4ee4de42-dbef-4464-b067-21ae589c5bb7",
            "b8e07fc0-a140-4e92-b826-a4068584f794",
            "a5398200-8500-4d8e-b3d4-d76401d32747",
            "82e25427-7b65-4288-8ff6-564bc8fff492",
            "be7157fa-ca7d-4690-b830-f33a30a914e2",
            "7569242e-8c00-4706-be6e-b94459366e8f",
            "b470ec61-9510-4df3-8aa3-274c57bef990",
            "1c7e0362-1423-4ae4-878f-ced729f23ea2",
            "510009aa-1559-4202-b667-25bfecfeae1e",
            "2976fb3a-2b4e-4a3a-8149-a817e91c8a7d",
            "994d3e69-8e95-46f1-b971-d75397f00dc0",
            "74385710-8e50-4bb8-a977-0f8663d67004",
            "adf7d831-4503-4a46-8418-b317861630e8",
            "a7582991-c89d-4f0e-b202-37b3cb1ad319",
            "2a01ef89-26f5-4e78-b128-9645972e2917"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21388,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "14cde97b-723b-44d1-b1ea-085d1b751cea",
          "title": "Service Ticket Workflow -- Landlord Rejects Ticket",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\wf_1.spec.js",
          "file": "\\test\\wf_1.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket \"before all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "timedOut": false,
              "duration": 3438,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "fbee8e9f-b09a-457f-9aa0-47352c97e0e2",
              "parentUUID": "14cde97b-723b-44d1-b1ea-085d1b751cea",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket \"after all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "timedOut": false,
              "duration": 75,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "951f213c-42b1-4e41-bfde-a31bc159325b",
              "parentUUID": "14cde97b-723b-44d1-b1ea-085d1b751cea",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Select Tenant Option",
              "timedOut": false,
              "duration": 1159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "1e7e8cd3-6dba-44bf-81f3-83e642b7297c",
              "parentUUID": "14cde97b-723b-44d1-b1ea-085d1b751cea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant login",
              "timedOut": false,
              "duration": 655,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\nlet email_in = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait email_in.sendKeys('tenant1@gmail.com');\n  \nlet pw_in = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\nawait pw_in.sendKeys('password');\n  \nlet submit_button = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\nawait submit_button.click();\n  \n await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n// In Tenant Dashboard\nlet next_pg = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\nlet result = await next_pg.getText();\nassert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "f63f14bf-9f4a-4a24-acf8-1b73245e4d3d",
              "parentUUID": "14cde97b-723b-44d1-b1ea-085d1b751cea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1751,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon not clean, I demand a cleaning robot\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "2797ad52-49fa-4533-a84d-d66c5058e58e",
              "parentUUID": "14cde97b-723b-44d1-b1ea-085d1b751cea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Select Landlord Option",
              "timedOut": false,
              "duration": 1170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "645c01e2-a4be-4e58-b195-36d90f99fb68",
              "parentUUID": "14cde97b-723b-44d1-b1ea-085d1b751cea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord login",
              "timedOut": false,
              "duration": 543,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n  let email_in = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n  await email_in.sendKeys('landlord1@gmail.com');\n    \n  let pw_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n  await pw_in.sendKeys('password');\n\n  let submit_button = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n  await submit_button.click();\n\n  await landlord_driver.manage().setTimeouts({implicit: 1000});\n\n  // In Landlord Dashboard\n  let next_pg = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n  let result = await next_pg.getText();\n  assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "ee3f0d5e-543e-4557-9776-76cba2ab1d4a",
              "parentUUID": "14cde97b-723b-44d1-b1ea-085d1b751cea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord View Service Tickets",
              "timedOut": false,
              "duration": 329,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await landlord_driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "db8b59c1-1818-42a8-8906-bc19520ef685",
              "parentUUID": "14cde97b-723b-44d1-b1ea-085d1b751cea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord Select Service Ticket",
              "timedOut": false,
              "duration": 4098,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.manage().setTimeouts({implicit: 400});\nawait landlord_driver.sleep(2000)\n// await landlord_driver.executeScript(`window.scrollBy(0, ${3003});`)\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\n\nawait landlord_driver.sleep(2000)\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n\n      // // View drop down box\n      // let lastTicket = await landlord_driver.wait(until.elementIsVisible(\n      //   landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\n      // ));\n      // await landlord_driver.executeScript(\"arguments[0].click();\", lastTicket)\n      // // await landlord_driver.sleep(2000)\n      // // await lastTicket.click()\n      // // await landlord_driver.executeScript(\"arguments[0].click();\", lastTicket)\n\n      // // Click \"View Details& Actions\" Button\n      // let detailsButton = await landlord_driver.wait(until.elementIsVisible(\n      //   landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\n      // ));\n      // await landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n\n      // Enter new page\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "30cbcb1d-8460-469c-a148-127d628b2f6e",
              "parentUUID": "14cde97b-723b-44d1-b1ea-085d1b751cea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Reject Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord Reject Service Ticket",
              "timedOut": false,
              "duration": 57,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const rejectButton = landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div[3]/button[2]\"));\nawait landlord_driver.executeScript(\"arguments[0].click();\", rejectButton);\n  \ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "a302f6b9-bb49-4696-9372-5c5164917789",
              "parentUUID": "14cde97b-723b-44d1-b1ea-085d1b751cea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant View Ticket",
              "timedOut": false,
              "duration": 729,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "ece9c36c-ce2b-4210-a4f6-a7ae895dd76a",
              "parentUUID": "14cde97b-723b-44d1-b1ea-085d1b751cea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord Sign Out",
              "timedOut": false,
              "duration": 69,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n        let signout = await landlord_driver.wait(until.elementIsVisible(\n          landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n        ));\n        await signout.click();\n        await landlord_driver.manage().setTimeouts({implicit: 500});\n    \n        // Check if ticket portal is shown\n        const currentURL = await landlord_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "e5728848-9b80-4c0b-9162-07f761d1f4e1",
              "parentUUID": "14cde97b-723b-44d1-b1ea-085d1b751cea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant Sign Out",
              "timedOut": false,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n));\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n    \n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "856a0bf0-46ff-4d5d-b58e-a3e15221cb8a",
              "parentUUID": "14cde97b-723b-44d1-b1ea-085d1b751cea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e7e8cd3-6dba-44bf-81f3-83e642b7297c",
            "f63f14bf-9f4a-4a24-acf8-1b73245e4d3d",
            "2797ad52-49fa-4533-a84d-d66c5058e58e",
            "645c01e2-a4be-4e58-b195-36d90f99fb68",
            "ee3f0d5e-543e-4557-9776-76cba2ab1d4a",
            "db8b59c1-1818-42a8-8906-bc19520ef685",
            "30cbcb1d-8460-469c-a148-127d628b2f6e",
            "a302f6b9-bb49-4696-9372-5c5164917789",
            "ece9c36c-ce2b-4210-a4f6-a7ae895dd76a",
            "e5728848-9b80-4c0b-9162-07f761d1f4e1",
            "856a0bf0-46ff-4d5d-b58e-a3e15221cb8a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10616,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4428d8af-bf83-411b-9a62-4412c521c01a",
          "title": "Successful/Usual Service Ticket Workflow",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\wf_2.spec.js",
          "file": "\\test\\wf_2.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 3368,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "14d9e707-b13b-4aff-802a-03720cc1af89",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 149,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "f516ade4-e3f0-4509-8b67-94849dc72666",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Tenant Option",
              "timedOut": false,
              "duration": 1203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "12efe835-783c-44f6-967c-98e1bc512ff5",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant login",
              "timedOut": false,
              "duration": 486,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n\n      let pw_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await tenant_driver.manage().setTimeouts({implicit: 1000});\n\n      // In Tenant Dashboard\n      let next_pg = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "bde221c1-a405-4bfe-b1d6-9e86d2382cf4",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1928,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon is making unsettling noises\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "f53cc0c7-2c6b-4cff-b9ae-9c786d7bc18c",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Landlord Option",
              "timedOut": false,
              "duration": 1190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "e959a4d3-055b-417d-865c-ecca1a1b3a14",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord login",
              "timedOut": false,
              "duration": 518,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n  let email_in = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n  await email_in.sendKeys('landlord1@gmail.com');\n    \n  let pw_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n  await pw_in.sendKeys('password');\n\n  let submit_button = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n  await submit_button.click();\n\n  await landlord_driver.manage().setTimeouts({implicit: 1000});\n\n  // In Landlord Dashboard\n  let next_pg = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n  let result = await next_pg.getText();\n  assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "9cd408f8-b8a1-4d00-9505-2d1f43fcc46d",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Service Tickets",
              "timedOut": false,
              "duration": 307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await landlord_driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "41cf3f8f-6456-44fc-b05e-0f3b121e847c",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Select Service Ticket",
              "timedOut": false,
              "duration": 447,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Find ticket\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\n// Click on \"details\" button\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n// Enter new page\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "d3739fa8-0916-4a2a-9ad7-4446570c40ff",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 513,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\nlet quotationCheckbox = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\n));\nlet approveButton = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\n));\nawait landlord_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait landlord_driver.sleep(100)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "dc39751c-f1d6-4731-8642-9d4e49f58cbf",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Upload Quotation",
              "timedOut": false,
              "duration": 408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\nconst addQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", addQuotationButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL)\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"))\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"))\nawait uploadButton.click()\nawait landlord_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "c3bc02d1-f824-4f06-9801-0240302aeac4",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View Quotation",
              "timedOut": false,
              "duration": 838,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst viewQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", viewQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL)",
              "err": {},
              "uuid": "5df96024-eaba-4674-8d52-62b8e22279a6",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Reject Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Reject Quotation",
              "timedOut": false,
              "duration": 263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});     \nconst rejectButton = tenant_driver.findElement(By.xpath(\"//button[text()='Reject']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", rejectButton); \nawait tenant_driver.sleep(200)     \ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL)",
              "err": {},
              "uuid": "d27bb15b-56bb-44d0-a481-8e373f5e4da7",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Service Tickets",
              "timedOut": false,
              "duration": 1105,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n));\nawait ticket_list.click();\n  \n// Check if ticket portal is shown\nconst currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {
                "message": "ElementClickInterceptedError: element click intercepted: Element <a class=\"chakra-link css-1p1ylbe\" href=\"/pages/TicketList\">...</a> is not clickable at point (642, 37). Other element would receive the click: <div data-status=\"success\" id=\"toast-2-title\" class=\"chakra-alert__title css-tidvy5\">...</div>\n  (Session info: chrome=115.0.5790.111)",
                "estack": "ElementClickInterceptedError: element click intercepted: Element <a class=\"chakra-link css-1p1ylbe\" href=\"/pages/TicketList\">...</a> is not clickable at point (642, 37). Other element would receive the click: <div data-status=\"success\" id=\"toast-2-title\" class=\"chakra-alert__title css-tidvy5\">...</div>\n  (Session info: chrome=115.0.5790.111)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async Context.<anonymous> (test\\wf_2.spec.js:255:7)",
                "diff": null
              },
              "uuid": "4017dc88-436f-4686-9d3d-2b4b5cee6e8c",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Upload Quotation",
              "timedOut": false,
              "duration": 532,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList');\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\nconst addQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", addQuotationButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL)\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"))\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"))\nawait uploadButton.click()\nawait landlord_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='chakra-accordion css-0']/div[last()]\"}\n  (Session info: chrome=115.0.5790.111)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='chakra-accordion css-0']/div[last()]\"}\n  (Session info: chrome=115.0.5790.111)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\wf_2.spec.js:268:7)",
                "diff": null
              },
              "uuid": "d6367472-688f-43cc-8aed-d7575cd6393b",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View Quotation",
              "timedOut": false,
              "duration": 1196,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst viewQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", viewQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='View/Add Quotation']\"}\n  (Session info: chrome=115.0.5790.111)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='View/Add Quotation']\"}\n  (Session info: chrome=115.0.5790.111)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\wf_2.spec.js:304:5)",
                "diff": null
              },
              "uuid": "6048a8bf-b3b9-406b-95ec-d2aea35c1d0a",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Approve Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Approve Quotation",
              "timedOut": false,
              "duration": 325,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\nconst quotationCheckbox = tenant_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nconst approveButton = tenant_driver.findElement(By.xpath(\"//button[text()='Approve']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait tenant_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id='quotationCheckbox']\"}\n  (Session info: chrome=115.0.5790.111)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id='quotationCheckbox']\"}\n  (Session info: chrome=115.0.5790.111)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\wf_2.spec.js:314:5)",
                "diff": null
              },
              "uuid": "aef8567e-75b2-4085-a698-d9131c9cd7df",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Starts Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Starts Work",
              "timedOut": false,
              "duration": 909,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='Start Work']\"}\n  (Session info: chrome=115.0.5790.111)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='Start Work']\"}\n  (Session info: chrome=115.0.5790.111)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\wf_2.spec.js:336:5)",
                "diff": null
              },
              "uuid": "df67344a-66cb-4c95-82dc-065eacb0d0c7",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Ends Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Ends Work",
              "timedOut": false,
              "duration": 903,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='End Work']\"}\n  (Session info: chrome=115.0.5790.111)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='End Work']\"}\n  (Session info: chrome=115.0.5790.111)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\wf_2.spec.js:354:5)",
                "diff": null
              },
              "uuid": "2f0b40e9-9386-4640-8e22-06c37a4e92f2",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Give Feedback",
              "timedOut": false,
              "duration": 972,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\nawait tenant_driver.sleep(200)\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\nawait tenant_driver.sleep(200);\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', currentURL)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='Close Ticket & Give Feedback']\"}\n  (Session info: chrome=115.0.5790.111)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='Close Ticket & Give Feedback']\"}\n  (Session info: chrome=115.0.5790.111)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\wf_2.spec.js:372:5)",
                "diff": null
              },
              "uuid": "eb841285-32ea-46df-8485-c449b4699eb6",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Feedback",
              "timedOut": false,
              "duration": 309,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet result = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/div[1]/textarea'))\n  ));\nlet feedback = await result.getText();\nassert.equal(\"Dummy Feedback Comment\", feedback)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='chakra-accordion css-0']/div[last()]\"}\n  (Session info: chrome=115.0.5790.111)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='chakra-accordion css-0']/div[last()]\"}\n  (Session info: chrome=115.0.5790.111)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\wf_2.spec.js:396:5)",
                "diff": null
              },
              "uuid": "21e9b13f-3f01-4d60-a9b3-89cce8c8b309",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Sign Out",
              "timedOut": false,
              "duration": 57,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n    let signout = await landlord_driver.wait(until.elementIsVisible(\n      landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n    ))\n    await signout.click();\n    await landlord_driver.manage().setTimeouts({implicit: 500});\n    // Check if ticket portal is shown\n    const currentURL = await landlord_driver.getCurrentUrl();\n    assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "2b4b1168-c35b-49a0-97f7-809f25d01c86",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Sign Out",
              "timedOut": false,
              "duration": 57,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "6790cfc5-7d6f-402a-9cb4-acec02b0104b",
              "parentUUID": "4428d8af-bf83-411b-9a62-4412c521c01a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "12efe835-783c-44f6-967c-98e1bc512ff5",
            "bde221c1-a405-4bfe-b1d6-9e86d2382cf4",
            "f53cc0c7-2c6b-4cff-b9ae-9c786d7bc18c",
            "e959a4d3-055b-417d-865c-ecca1a1b3a14",
            "9cd408f8-b8a1-4d00-9505-2d1f43fcc46d",
            "41cf3f8f-6456-44fc-b05e-0f3b121e847c",
            "d3739fa8-0916-4a2a-9ad7-4446570c40ff",
            "dc39751c-f1d6-4731-8642-9d4e49f58cbf",
            "c3bc02d1-f824-4f06-9801-0240302aeac4",
            "5df96024-eaba-4674-8d52-62b8e22279a6",
            "d27bb15b-56bb-44d0-a481-8e373f5e4da7",
            "2b4b1168-c35b-49a0-97f7-809f25d01c86",
            "6790cfc5-7d6f-402a-9cb4-acec02b0104b"
          ],
          "failures": [
            "4017dc88-436f-4686-9d3d-2b4b5cee6e8c",
            "d6367472-688f-43cc-8aed-d7575cd6393b",
            "6048a8bf-b3b9-406b-95ec-d2aea35c1d0a",
            "aef8567e-75b2-4085-a698-d9131c9cd7df",
            "df67344a-66cb-4c95-82dc-065eacb0d0c7",
            "2f0b40e9-9386-4640-8e22-06c37a4e92f2",
            "eb841285-32ea-46df-8485-c449b4699eb6",
            "21e9b13f-3f01-4d60-a9b3-89cce8c8b309"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14466,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}