{
  "stats": {
    "suites": 11,
    "tests": 106,
    "passes": 106,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-10T09:50:14.827Z",
    "end": "2023-08-10T09:53:00.972Z",
    "duration": 166145,
    "testsRegistered": 106,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e0c7a93d-2d3d-4877-a1b9-4bae89779635",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
          "title": "Successful Service Ticket Workflow (with quotation)",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\happy_wf_1.spec.js",
          "file": "\\test\\happy_wf_1.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful Service Ticket Workflow (with quotation)\"",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) \"before all\" hook in \"Successful Service Ticket Workflow (with quotation)\"",
              "timedOut": false,
              "duration": 5005,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "bfe29fda-2006-4632-8f2a-9cc37b259375",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful Service Ticket Workflow (with quotation)\"",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) \"after all\" hook in \"Successful Service Ticket Workflow (with quotation)\"",
              "timedOut": false,
              "duration": 58,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "1d577661-4cab-4956-bcb7-d26a512d4d13",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Select Tenant Option",
              "timedOut": false,
              "duration": 1134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "4d600dbd-a438-4366-88bd-039474fc1be6",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Tenant login",
              "timedOut": false,
              "duration": 450,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n\n      let pw_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await tenant_driver.manage().setTimeouts({implicit: 1000});\n\n      // In Tenant Dashboard\n      let next_pg = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "14536b38-b4a1-42c8-bb30-a7d646d61f9e",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1576,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon is not cold\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "c03870d9-8132-4989-9fbd-8183012f615d",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Select Landlord Option",
              "timedOut": false,
              "duration": 1243,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "e79d211c-d39e-4776-b872-96368f87e011",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord login",
              "timedOut": false,
              "duration": 606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n  let email_in = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n  await email_in.sendKeys('landlord1@gmail.com');\n    \n  let pw_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n  await pw_in.sendKeys('password');\n\n  let submit_button = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n  await submit_button.click();\n\n  await landlord_driver.manage().setTimeouts({implicit: 1000});\n\n  // In Landlord Dashboard\n  let next_pg = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n  let result = await next_pg.getText();\n  assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "dbede9b1-b017-4025-9c4b-47637aeff2a8",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord View Service Tickets",
              "timedOut": false,
              "duration": 324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await landlord_driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "3d5cd9c8-6057-4d83-9b21-fca82bb47f53",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket (Dropdown)",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord Select Service Ticket (Dropdown)",
              "timedOut": false,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Find ticket\nawait landlord_driver.manage().setTimeouts({implicit: 3000});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]/div/button\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);",
              "err": {},
              "uuid": "f804c771-51dc-4665-b8f5-2f8dba8ffa0f",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Self Assign Service Ticket",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord Self Assign Service Ticket",
              "timedOut": false,
              "duration": 6181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.manage().setTimeouts({implicit: 1000});\n//await landlord_driver.sleep(2000)\n// Click self assign button\nconst self_assign_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]/div/div/div/div/button'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", self_assign_button);\nawait landlord_driver.manage().setTimeouts({implicit: 2000});\n\n// Click landlord\nconst landlord_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"landlord1@gmail.com\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", landlord_button);\nawait landlord_driver.sleep(2000)\n// Click confirm assignment\nconst cfm_assignment = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"Confirm Assignment\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", cfm_assignment);\nawait landlord_driver.manage().setTimeouts({implicit: 1000});\nawait landlord_driver.sleep(2000)\n// Click view details and action\nconst view_details = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"View Details & Actions\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", view_details);\nawait landlord_driver.sleep(2000)\n// Enter new page\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "da11a95e-d4bc-48c4-8de2-4b99783469df",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\nlet quotationCheckbox = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\n));\nlet approveButton = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\n));\nawait landlord_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait landlord_driver.sleep(100)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "73b5e675-fc22-4e2b-b7c0-81578b3c2c76",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord Upload Quotation",
              "timedOut": false,
              "duration": 360,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\nconst addQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", addQuotationButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL)\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"))\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"))\nawait uploadButton.click()\nawait landlord_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "fa20fabc-fc6e-49d4-bad1-732c235b8221",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Quotation",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Tenant View Quotation",
              "timedOut": false,
              "duration": 325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst viewQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", viewQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL)",
              "err": {},
              "uuid": "1e69cbed-1df5-46b9-a23a-f9caf9ad6fa7",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Approve Quotation",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Tenant Approve Quotation",
              "timedOut": false,
              "duration": 319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\nconst quotationCheckbox = tenant_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nconst approveButton = tenant_driver.findElement(By.xpath(\"//button[text()='Approve']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait tenant_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "6b903df2-027d-4934-94fe-f137759b8d1a",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Starts Work",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord Starts Work",
              "timedOut": false,
              "duration": 709,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait landlord_driver.manage().setTimeouts({implicit: 600});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "097aa935-fa65-4791-b25a-2025b62c992d",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Ends Work",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord Ends Work",
              "timedOut": false,
              "duration": 705,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait landlord_driver.manage().setTimeouts({implicit: 600});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "f1dd4139-3556-4ac9-9a06-f02260bc04cb",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Tenant Give Feedback",
              "timedOut": false,
              "duration": 3660,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 600});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\nawait tenant_driver.manage().setTimeouts({implicit: 2000});\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\nawait tenant_driver.manage().setTimeouts({implicit: 1000});\nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\nawait tenant_driver.manage().setTimeouts({implicit: 2000});\nawait tenant_driver.sleep(3000)\nnextURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', nextURL)\nawait tenant_driver.manage().setTimeouts({implicit: 2000});",
              "err": {},
              "uuid": "0667a893-2d8a-49bb-8001-05c2335d4cac",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord View Feedback",
              "timedOut": false,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]/div/button\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet result = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/div/div[1]/textarea'))\n  ));\nlet feedback = await result.getText();\nassert.equal(\"Dummy Feedback Comment\", feedback)",
              "err": {},
              "uuid": "245dbb8c-0a76-4707-81f7-158dcf962965",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord Sign Out",
              "timedOut": false,
              "duration": 45,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n    let signout = await landlord_driver.wait(until.elementIsVisible(\n      landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n    ))\n    await signout.click();\n    await landlord_driver.manage().setTimeouts({implicit: 500});\n    // Check if ticket portal is shown\n    const currentURL = await landlord_driver.getCurrentUrl();\n    assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "5847b702-8a2d-44e2-95a2-4a365d9a52ee",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Tenant Sign Out",
              "timedOut": false,
              "duration": 50,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "84a3b1fc-c6ef-4454-8305-585f2817ec40",
              "parentUUID": "f3b15842-7a6c-4b4e-918b-2900a354beb8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4d600dbd-a438-4366-88bd-039474fc1be6",
            "14536b38-b4a1-42c8-bb30-a7d646d61f9e",
            "c03870d9-8132-4989-9fbd-8183012f615d",
            "e79d211c-d39e-4776-b872-96368f87e011",
            "dbede9b1-b017-4025-9c4b-47637aeff2a8",
            "3d5cd9c8-6057-4d83-9b21-fca82bb47f53",
            "f804c771-51dc-4665-b8f5-2f8dba8ffa0f",
            "da11a95e-d4bc-48c4-8de2-4b99783469df",
            "73b5e675-fc22-4e2b-b7c0-81578b3c2c76",
            "fa20fabc-fc6e-49d4-bad1-732c235b8221",
            "1e69cbed-1df5-46b9-a23a-f9caf9ad6fa7",
            "6b903df2-027d-4934-94fe-f137759b8d1a",
            "097aa935-fa65-4791-b25a-2025b62c992d",
            "f1dd4139-3556-4ac9-9a06-f02260bc04cb",
            "0667a893-2d8a-49bb-8001-05c2335d4cac",
            "245dbb8c-0a76-4707-81f7-158dcf962965",
            "5847b702-8a2d-44e2-95a2-4a365d9a52ee",
            "84a3b1fc-c6ef-4454-8305-585f2817ec40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18106,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "43957796-9b85-4f25-9f18-83a4ddb8e809",
          "title": "Successful Service Ticket Workflow (without quotation)",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\happy_wf_2.spec.js",
          "file": "\\test\\happy_wf_2.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful Service Ticket Workflow (without quotation)\"",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) \"before all\" hook in \"Successful Service Ticket Workflow (without quotation)\"",
              "timedOut": false,
              "duration": 5684,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "03cd1139-34b1-4a1b-ad55-12e6f35224f9",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful Service Ticket Workflow (without quotation)\"",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) \"after all\" hook in \"Successful Service Ticket Workflow (without quotation)\"",
              "timedOut": false,
              "duration": 64,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "ff7fd4d7-199a-4913-aea1-052906955b11",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Select Tenant Option",
              "timedOut": false,
              "duration": 1447,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "8472154f-850b-401a-bf40-5463f20ae89d",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Tenant login",
              "timedOut": false,
              "duration": 698,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n\n      let pw_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await tenant_driver.manage().setTimeouts({implicit: 1000});\n\n      // In Tenant Dashboard\n      let next_pg = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "c29e099f-f427-44f8-88d9-315392156f80",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1922,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon is freezing\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "fac6df02-0ba5-419c-988e-5bd16f1b3241",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Select Landlord Option",
              "timedOut": false,
              "duration": 1531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "167ebd5c-2104-40ac-81ea-9e4d199cd480",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord login",
              "timedOut": false,
              "duration": 667,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\nlet email_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait email_in.sendKeys('landlord1@gmail.com');\n    \nlet pw_in = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\nawait pw_in.sendKeys('password');\n      \nlet submit_button = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\nawait submit_button.click();\n      \nawait landlord_driver.manage().setTimeouts({implicit: 1000});\n      \n// In Landlord Dashboard\nlet next_pg = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\nlet result = await next_pg.getText();\nassert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "b2c5f256-5edc-41d8-b2d6-f9d60ade4766",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord View Service Tickets",
              "timedOut": false,
              "duration": 350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n))\nawait ticket_list.click();\n  \n      // Check if ticket portal is shown\nconst currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "038290f4-1ba9-425d-9f3c-aee5394db6d6",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket (Dropdown)",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord Select Service Ticket (Dropdown)",
              "timedOut": false,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Find ticket\nawait landlord_driver.manage().setTimeouts({implicit: 3000});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]/div/button\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);",
              "err": {},
              "uuid": "582f46c4-42cf-46f1-bac6-7aa1efb71ddb",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Self Assign Service Ticket",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord Self Assign Service Ticket",
              "timedOut": false,
              "duration": 6196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.manage().setTimeouts({implicit: 1000});\n//await landlord_driver.sleep(2000)\n// Click self assign button\nconst self_assign_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]/div/div/div/div/button'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", self_assign_button);\nawait landlord_driver.manage().setTimeouts({implicit: 2000});\n\n// Click landlord\nconst landlord_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"landlord1@gmail.com\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", landlord_button);\nawait landlord_driver.sleep(2000)\n// Click confirm assignment\nconst cfm_assignment = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"Confirm Assignment\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", cfm_assignment);\nawait landlord_driver.manage().setTimeouts({implicit: 1000});\nawait landlord_driver.sleep(2000)\n// Click view details and action\nconst view_details = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"View Details & Actions\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", view_details);\nawait landlord_driver.sleep(2000)\n// Enter new page\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "270754df-e914-43f5-9f66-8af0cfcfc798",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\n  \nlet approveButton = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\n));\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\n  \nawait landlord_driver.sleep(100)\n  \ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "9d118930-86c6-459d-a8a5-69363f7c7a7d",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Starts Work",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord Starts Work",
              "timedOut": false,
              "duration": 700,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\n    \nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "0f6361e7-9340-4615-b740-e731cf4045cb",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Ends Work",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord Ends Work",
              "timedOut": false,
              "duration": 764,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\n    \nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "b7716080-bdb3-44f1-8875-44b6976d4808",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Tenant Give Feedback",
              "timedOut": false,
              "duration": 1126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\n    \nawait tenant_driver.sleep(200)\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\n    \nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\n    \nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\n    \nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\n    \nawait tenant_driver.sleep(200);\n    \ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', currentURL)",
              "err": {},
              "uuid": "3bab8e02-5a2d-4301-a5a3-559e44770133",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord View Feedback",
              "timedOut": false,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nlet result = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/div/div[1]/textarea'))\n  ));\nlet feedback = await result.getText();\nassert.equal(\"Dummy Feedback Comment\", feedback)",
              "err": {},
              "uuid": "bab5bc3a-871c-497c-8d2b-8d55748f91d4",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord Sign Out",
              "timedOut": false,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n    let signout = await landlord_driver.wait(until.elementIsVisible(\n      landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n    ))\n    await signout.click();\n    await landlord_driver.manage().setTimeouts({implicit: 500});\n\n    // Check if ticket portal is shown\n    const currentURL = await landlord_driver.getCurrentUrl();\n    assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "47b1cbe3-ca40-48af-b4ee-f8137190ec09",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Tenant Sign Out",
              "timedOut": false,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n    \n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "260a543b-05b9-4aab-8161-350606e4b75a",
              "parentUUID": "43957796-9b85-4f25-9f18-83a4ddb8e809",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8472154f-850b-401a-bf40-5463f20ae89d",
            "c29e099f-f427-44f8-88d9-315392156f80",
            "fac6df02-0ba5-419c-988e-5bd16f1b3241",
            "167ebd5c-2104-40ac-81ea-9e4d199cd480",
            "b2c5f256-5edc-41d8-b2d6-f9d60ade4766",
            "038290f4-1ba9-425d-9f3c-aee5394db6d6",
            "582f46c4-42cf-46f1-bac6-7aa1efb71ddb",
            "270754df-e914-43f5-9f66-8af0cfcfc798",
            "9d118930-86c6-459d-a8a5-69363f7c7a7d",
            "0f6361e7-9340-4615-b740-e731cf4045cb",
            "b7716080-bdb3-44f1-8875-44b6976d4808",
            "3bab8e02-5a2d-4301-a5a3-559e44770133",
            "bab5bc3a-871c-497c-8d2b-8d55748f91d4",
            "47b1cbe3-ca40-48af-b4ee-f8137190ec09",
            "260a543b-05b9-4aab-8161-350606e4b75a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15959,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "02eacae4-8130-4340-b6f5-d89a11892b4b",
          "title": "Landlord Lease",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\LAN_alt_lease.spec.js",
          "file": "\\test\\LAN_alt_lease.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"before all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 3101,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "718992ab-c188-48fd-8540-97d7e6302e66",
              "parentUUID": "02eacae4-8130-4340-b6f5-d89a11892b4b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"after all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 28,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "a0a37b79-d391-4ef6-ab2a-ecc2ba2bbbff",
              "parentUUID": "02eacae4-8130-4340-b6f5-d89a11892b4b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Landlord Lease Select Landlord Option",
              "timedOut": false,
              "duration": 1286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\n  \nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet landlordButton = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n  \n// In Landlord Login Page\nlet loginText = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "b79f0d74-45ba-4cc2-beba-b98d68460381",
              "parentUUID": "02eacae4-8130-4340-b6f5-d89a11892b4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Landlord Lease Landlord login",
              "timedOut": false,
              "duration": 615,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('landlord1@gmail.com');\n\n      let pw_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await driver.manage().setTimeouts({implicit: 1000});\n\n      // In Landlord Dashboard\n      let next_pg = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "9220c697-3737-475c-9cea-0772ee502150",
              "parentUUID": "02eacae4-8130-4340-b6f5-d89a11892b4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord views Account Management",
              "fullTitle": "Landlord Lease Landlord views Account Management",
              "timedOut": false,
              "duration": 451,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"Account MAnagement\"\nlet account_management = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n));\nawait account_management.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement\", currentURL);",
              "err": {},
              "uuid": "b983c1c8-dfda-4c68-b5ad-0f528a4b8d01",
              "parentUUID": "02eacae4-8130-4340-b6f5-d89a11892b4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter create new tenant page",
              "fullTitle": "Landlord Lease Enter create new tenant page",
              "timedOut": false,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"create tenant\" button\nlet create_tenant_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div[1]/button'))\n));\nawait create_tenant_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "1edbb049-5484-485a-9f51-94ca1a2f6035",
              "parentUUID": "02eacae4-8130-4340-b6f5-d89a11892b4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create new tenant -- with same email as existing tenant",
              "fullTitle": "Landlord Lease Create new tenant -- with same email as existing tenant",
              "timedOut": false,
              "duration": 448,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// input email and password\nlet email = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"email\"]'))\n));\nawait email.sendKeys(\"tenant1@gmail.com\");\nlet password = await driver.wait(until.elementIsVisible(\ndriver.findElement(By.xpath('//*[@id=\"password\"]'))\n));\nawait password.sendKeys(\"password\");\nlet create_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"loginButton\"]'))\n));\nawait create_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "a4992ba6-2d95-47c1-9c61-edbc1a1b3d99",
              "parentUUID": "02eacae4-8130-4340-b6f5-d89a11892b4b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b79f0d74-45ba-4cc2-beba-b98d68460381",
            "9220c697-3737-475c-9cea-0772ee502150",
            "b983c1c8-dfda-4c68-b5ad-0f528a4b8d01",
            "1edbb049-5484-485a-9f51-94ca1a2f6035",
            "a4992ba6-2d95-47c1-9c61-edbc1a1b3d99"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2895,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3fdadb6f-981d-429a-948b-b706dbdcf6b4",
          "title": "Unusual Login --Landlord",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\LAN_alt_login.spec.js",
          "file": "\\test\\LAN_alt_login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Unusual Login --Landlord\"",
              "fullTitle": "Unusual Login --Landlord \"before all\" hook in \"Unusual Login --Landlord\"",
              "timedOut": false,
              "duration": 2877,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "landlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "9d7ef130-0941-4787-9083-f456741b3f4c",
              "parentUUID": "3fdadb6f-981d-429a-948b-b706dbdcf6b4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unusual Login --Landlord\"",
              "fullTitle": "Unusual Login --Landlord \"after all\" hook in \"Unusual Login --Landlord\"",
              "timedOut": false,
              "duration": 28,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.quit()",
              "err": {},
              "uuid": "145d012a-cf76-4459-b33b-1ca9c3737158",
              "parentUUID": "3fdadb6f-981d-429a-948b-b706dbdcf6b4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Unusual Login --Landlord Select Landlord Option",
              "timedOut": false,
              "duration": 1219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 500 });\n// In Landlord Login Page\nlet result = await landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "a55ae25d-d29e-4013-a7c3-acc025bc004c",
              "parentUUID": "3fdadb6f-981d-429a-948b-b706dbdcf6b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Wrong login input --> Invalid email",
              "fullTitle": "Unusual Login --Landlord Wrong login input --> Invalid email",
              "timedOut": false,
              "duration": 611,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\nawait landlord_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('fake value');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 100 });\n// invalid input warning\nlet result = await landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[1]/div')).getText();\nassert.equal(\"Invalid email\", result);",
              "err": {},
              "uuid": "efff8756-9463-4a42-af02-4b54ee9f78e6",
              "parentUUID": "3fdadb6f-981d-429a-948b-b706dbdcf6b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Empty login input --> Password Required",
              "fullTitle": "Unusual Login --Landlord Empty login input --> Password Required",
              "timedOut": false,
              "duration": 400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\nawait landlord_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait landlord_driver.manage().setTimeouts({ implicit: 500 });\n// Required warning\nlet result = await landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[2]/div[2]')).getText();\nassert.equal(\"Required\", result);",
              "err": {},
              "uuid": "83254439-913f-472a-aa45-8a2bcad6031d",
              "parentUUID": "3fdadb6f-981d-429a-948b-b706dbdcf6b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Forget password",
              "fullTitle": "Unusual Login --Landlord Forget password",
              "timedOut": false,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n// click forget password\nawait landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[4]/a')).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 100 });\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ForgotPasswordPage', currentURL)",
              "err": {},
              "uuid": "2e3ac971-f245-481d-a95d-8bec119e53ad",
              "parentUUID": "3fdadb6f-981d-429a-948b-b706dbdcf6b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a55ae25d-d29e-4013-a7c3-acc025bc004c",
            "efff8756-9463-4a42-af02-4b54ee9f78e6",
            "83254439-913f-472a-aa45-8a2bcad6031d",
            "2e3ac971-f245-481d-a95d-8bec119e53ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2488,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "144a33be-8415-4960-a5e0-a92a4367bf98",
          "title": "Landlord filter ticket",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\LAN_filter_tickets.spec.js",
          "file": "\\test\\LAN_filter_tickets.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Landlord filter ticket\"",
              "fullTitle": "Landlord filter ticket \"before all\" hook in \"Landlord filter ticket\"",
              "timedOut": false,
              "duration": 5918,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();\ntenant_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "5a94bcba-7f4a-4599-87fb-f46d243bf4bd",
              "parentUUID": "144a33be-8415-4960-a5e0-a92a4367bf98",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Landlord filter ticket\"",
              "fullTitle": "Landlord filter ticket \"after all\" hook in \"Landlord filter ticket\"",
              "timedOut": false,
              "duration": 197,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await driver.quit()",
              "err": {},
              "uuid": "2d74fea8-9b7a-4c19-8048-bcad0a98bfc4",
              "parentUUID": "144a33be-8415-4960-a5e0-a92a4367bf98",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Set up for testing -- tenant1@gmail.com",
              "fullTitle": "Landlord filter ticket Set up for testing -- tenant1@gmail.com",
              "timedOut": false,
              "duration": 3745,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\n// Sign in details: email, password, button\nlet email_in = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait email_in.sendKeys('tenant1@gmail.com');\n    \nlet pw_in = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\nawait pw_in.sendKeys('password');\n    \nlet submit_button = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\nawait submit_button.click();\n    \nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n\n// Click on \"Create Service Ticket\"\nlet create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n));\nawait create_service_ticket.click();\n    \n    \nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n    \n// Request Type\nlet req_type = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n));\nawait req_type.click();\nlet sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n));\nawait sel_dropdown.click();\n    \n// Request Description\nlet description= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n));\nawait description.sendKeys(\"Aircon is leaking\");\nawait tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n    \n// Submit Button\nlet submit= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n));\nawait submit.click();\n    \nawait tenant_driver.sleep(1000)\nawait tenant_driver.manage().setTimeouts({implicit: 2000});\n    \n// Check if it enters dashboard again\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/Dashboard', currentURL);\n// Sign out\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});",
              "err": {},
              "uuid": "b50e34c7-59bc-4ec7-ab4c-d1c9ad56afb0",
              "parentUUID": "144a33be-8415-4960-a5e0-a92a4367bf98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Set up for testing -- tenant2@gmail.com",
              "fullTitle": "Landlord filter ticket Set up for testing -- tenant2@gmail.com",
              "timedOut": false,
              "duration": 2429,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\n// Sign in details: email, password, button\nlet email_in = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait email_in.sendKeys('tenant2@gmail.com');\n    \nlet pw_in = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\nawait pw_in.sendKeys('password');\n    \nlet submit_button = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\nawait submit_button.click();\n    \nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n\n// Click on \"Create Service Ticket\"\nlet create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n));\nawait create_service_ticket.click();\n    \n    \nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n    \n// Request Type\nlet req_type = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n));\nawait req_type.click();\nlet sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n));\nawait sel_dropdown.click();\n    \n// Request Description\nlet description= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n));\nawait description.sendKeys(\"Aircon is not cold\");\nawait tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n    \n// Submit Button\nlet submit= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n));\nawait submit.click();\n    \nawait tenant_driver.sleep(1000)\nawait tenant_driver.manage().setTimeouts({implicit: 2000});\n    \n// Check if it enters dashboard again\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/Dashboard', currentURL);\n// Sign out\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});",
              "err": {},
              "uuid": "bed8bb8b-cb09-4004-a5b3-bf718e5bf32e",
              "parentUUID": "144a33be-8415-4960-a5e0-a92a4367bf98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Landlord filter ticket Select Landlord Option",
              "timedOut": false,
              "duration": 1122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\n  \nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet landlordButton = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n  \n// In Landlord Login Page\nlet loginText = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "115a319f-8eff-4f9e-ab6a-4fae5bbdc959",
              "parentUUID": "144a33be-8415-4960-a5e0-a92a4367bf98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Landlord filter ticket Landlord login",
              "timedOut": false,
              "duration": 577,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('landlord1@gmail.com');\n\n      let pw_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await driver.manage().setTimeouts({implicit: 1000});\n\n      // In Landlord Dashboard\n      let next_pg = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "c0c4eb4e-c54f-470f-9c21-3d29a7f15497",
              "parentUUID": "144a33be-8415-4960-a5e0-a92a4367bf98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Landlord filter ticket Landlord View Service Tickets",
              "timedOut": false,
              "duration": 333,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n))\nawait ticket_list.click();\n  \n// Check if ticket portal is shown\nconst currentURL = await driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "1ee055f8-3f7e-47d2-9aae-07310e197748",
              "parentUUID": "144a33be-8415-4960-a5e0-a92a4367bf98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter by Requester",
              "fullTitle": "Landlord filter ticket Filter by Requester",
              "timedOut": false,
              "duration": 4462,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let search_requester = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div/input'))\n));\nawait driver.sleep(1000)\nawait search_requester.sendKeys(\"tenant1@gmail.com\")\nawait driver.sleep(1000)\nawait driver.manage().setTimeouts({ implicit: 500 });\n// Find ticket\nconst lastTicket = driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"));\nawait driver.executeScript(\"arguments[0].click();\", lastTicket);\nawait driver.manage().setTimeouts({ implicit: 500 });\nconst last_requester = driver.findElement(By.xpath('//*[@id=\"accordion-button-:r0:\"]/div/div[2]'))\nawait driver.sleep(2000)\nawait driver.wait(until.elementIsVisible(last_requester))\nconst text = await last_requester.getText();\nassert.equal('tenant1@gmail.com', text);\n// Return back to normal\nlet clear_button =  await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div/div/button'))));\nawait clear_button.click();",
              "err": {},
              "uuid": "b6af8648-42cc-45b0-9882-8c6da883ed6b",
              "parentUUID": "144a33be-8415-4960-a5e0-a92a4367bf98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter by Status (Created)",
              "fullTitle": "Landlord filter ticket Filter by Status (Created)",
              "timedOut": false,
              "duration": 6297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let search_requester = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[4]/div/select'))\n));\nawait driver.sleep(1000)\nawait search_requester.click();\nawait driver.sleep(1000)\nlet click_status = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[4]/div/select/option[2]'))\n));\nawait click_status.click();\nawait driver.sleep(2000)\nconst last_requester = driver.findElement(By.xpath('//*[@id=\"accordion-button-:r0:\"]/div/div[4]'))\n\nawait driver.wait(until.elementIsVisible(last_requester))\nconst text = await last_requester.getText();\nassert.equal('Created', text);\n// Return back to normal\nlet search_requester_return = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[4]/div/select'))\n));\nawait driver.sleep(1000)\nawait search_requester_return.click();\nawait driver.sleep(1000)\nlet click_status_return = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[4]/div/select/option[1]'))\n));\nawait click_status_return.click();",
              "err": {},
              "uuid": "087a56a4-072d-43e9-9242-51f52c5ebbfc",
              "parentUUID": "144a33be-8415-4960-a5e0-a92a4367bf98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Landlord filter ticket Landlord Sign Out",
              "timedOut": false,
              "duration": 65,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n      let signout = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n      ))\n      await signout.click();\n      await driver.manage().setTimeouts({implicit: 500});\n      // Check if ticket portal is shown\n      const currentURL = await driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "56a5de83-1a3b-4dde-8129-52b3ffc959b3",
              "parentUUID": "144a33be-8415-4960-a5e0-a92a4367bf98",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b50e34c7-59bc-4ec7-ab4c-d1c9ad56afb0",
            "bed8bb8b-cb09-4004-a5b3-bf718e5bf32e",
            "115a319f-8eff-4f9e-ab6a-4fae5bbdc959",
            "c0c4eb4e-c54f-470f-9c21-3d29a7f15497",
            "1ee055f8-3f7e-47d2-9aae-07310e197748",
            "b6af8648-42cc-45b0-9882-8c6da883ed6b",
            "087a56a4-072d-43e9-9242-51f52c5ebbfc",
            "56a5de83-1a3b-4dde-8129-52b3ffc959b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19030,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "43ae857e-9107-4032-869b-5b734ea0d7f9",
          "title": "Landlord Lease",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\LAN_lease.spec.js",
          "file": "\\test\\LAN_lease.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"before all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 2446,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "b6e4bada-b332-4e8f-a57e-18a929ff0dbe",
              "parentUUID": "43ae857e-9107-4032-869b-5b734ea0d7f9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"after all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 36,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "5bf6ca8c-7942-4633-bbc9-1ee34b8afd97",
              "parentUUID": "43ae857e-9107-4032-869b-5b734ea0d7f9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Landlord Lease Select Landlord Option",
              "timedOut": false,
              "duration": 1974,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\n  \nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet landlordButton = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n  \n// In Landlord Login Page\nlet loginText = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "e130aa9c-e233-47c8-9ad9-693637714a94",
              "parentUUID": "43ae857e-9107-4032-869b-5b734ea0d7f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Landlord Lease Landlord login",
              "timedOut": false,
              "duration": 587,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('landlord1@gmail.com');\n\n      let pw_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await driver.manage().setTimeouts({implicit: 1000});\n\n      // In Landlord Dashboard\n      let next_pg = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "6a41d59f-4a85-4a1f-a5d8-08219b1e34da",
              "parentUUID": "43ae857e-9107-4032-869b-5b734ea0d7f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord views Account Management",
              "fullTitle": "Landlord Lease Landlord views Account Management",
              "timedOut": false,
              "duration": 489,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"Account MAnagement\"\nlet account_management = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n));\nawait account_management.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement\", currentURL);",
              "err": {},
              "uuid": "7a742048-03fa-40c8-9747-21b63e5c33c4",
              "parentUUID": "43ae857e-9107-4032-869b-5b734ea0d7f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter create new tenant page",
              "fullTitle": "Landlord Lease Enter create new tenant page",
              "timedOut": false,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"create tenant\" button\nlet create_tenant_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div[1]/button'))\n));\nawait create_tenant_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "fbb9abd3-d416-4f04-a3ec-074e3b3a0ac0",
              "parentUUID": "43ae857e-9107-4032-869b-5b734ea0d7f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create new tenant",
              "fullTitle": "Landlord Lease Create new tenant",
              "timedOut": false,
              "duration": 480,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// input email and password\nlet email = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"email\"]'))\n));\nawait email.sendKeys(\"newtenant2@gmail.com\");\nlet password = await driver.wait(until.elementIsVisible(\ndriver.findElement(By.xpath('//*[@id=\"password\"]'))\n));\nawait password.sendKeys(\"password\");\nlet create_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"loginButton\"]'))\n));\nawait create_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "7822886c-a7c7-4057-a50c-3fd838680f45",
              "parentUUID": "43ae857e-9107-4032-869b-5b734ea0d7f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Find new tenant in Tenant Details table",
              "fullTitle": "Landlord Lease Find new tenant in Tenant Details table",
              "timedOut": false,
              "duration": 2102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1000)\nlet new_tenant = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[contains(text(), \"newtenant2@gmail.com\")]'))\n));\nawait driver.executeScript(\"arguments[0].click();\", new_tenant);\nawait driver.sleep(1000)\nlet new_lease = await driver.findElement(By.xpath('//*[contains(text(), \"New Lease\")]'))\nawait driver.executeScript(\"arguments[0].click();\", new_lease);\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/LeaseUploadPage/\", currentURL);",
              "err": {},
              "uuid": "664b7856-fafe-4fa2-a91b-cd334a501331",
              "parentUUID": "43ae857e-9107-4032-869b-5b734ea0d7f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Lease upload",
              "fullTitle": "Landlord Lease Lease upload",
              "timedOut": false,
              "duration": 1387,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Add floor, unit number, file\nlet floor = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"floor\"]'))\n));\nawait floor.sendKeys(\"01\");\nlet unit_number = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"unit_number\"]'))\n));\nawait unit_number.sendKeys(\"123\");\nlet chooseFileButton = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"files\"]'))\n));\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nlet upalod_lease_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"UploadButton\"]'))\n));\nawait upalod_lease_button.click();\nawait driver.manage().setTimeouts({implicit: 500});\nawait driver.sleep(1000)\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/ViewLeasePage/\", currentURL);\n\n// Click next button\nlet next_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div/div/button[2]'))\n));\nawait driver.executeScript(\"arguments[0].click();\", next_button);\nconst nextURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement/\", nextURL);",
              "err": {},
              "uuid": "3a4dd0aa-da44-44ea-a0ef-bfe7f49aa79f",
              "parentUUID": "43ae857e-9107-4032-869b-5b734ea0d7f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "View lease",
              "fullTitle": "Landlord Lease View lease",
              "timedOut": false,
              "duration": 1236,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1000)\nlet new_tenant = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[contains(text(), \"newtenant2@gmail.com\")]'))\n));\nlet view_lease = await driver.findElement(By.xpath('//*[contains(text(), \"View Lease\")]'));\n\nawait driver.executeScript(\"arguments[0].click();\", new_tenant);\nawait driver.executeScript(\"arguments[0].click();\", view_lease);\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/ViewLeasePage/\", currentURL);\n// Click next button\nlet next_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div/div/button[2]'))\n));\nawait driver.executeScript(\"arguments[0].click();\", next_button);\nconst nextURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement/\", nextURL);",
              "err": {},
              "uuid": "e8fe119e-71c6-4838-b0cf-b40e5edc6b16",
              "parentUUID": "43ae857e-9107-4032-869b-5b734ea0d7f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e130aa9c-e233-47c8-9ad9-693637714a94",
            "6a41d59f-4a85-4a1f-a5d8-08219b1e34da",
            "7a742048-03fa-40c8-9747-21b63e5c33c4",
            "fbb9abd3-d416-4f04-a3ec-074e3b3a0ac0",
            "7822886c-a7c7-4057-a50c-3fd838680f45",
            "664b7856-fafe-4fa2-a91b-cd334a501331",
            "3a4dd0aa-da44-44ea-a0ef-bfe7f49aa79f",
            "e8fe119e-71c6-4838-b0cf-b40e5edc6b16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8363,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "908e04b4-4370-4e7a-b66d-e70ab935f4a4",
          "title": "Unusual Login --Tenant",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\TEN_alt_login.spec.js",
          "file": "\\test\\TEN_alt_login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Unusual Login --Tenant\"",
              "fullTitle": "Unusual Login --Tenant \"before all\" hook in \"Unusual Login --Tenant\"",
              "timedOut": false,
              "duration": 6327,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nchrome_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "f3778202-713c-4111-abf1-600fee6384ec",
              "parentUUID": "908e04b4-4370-4e7a-b66d-e70ab935f4a4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unusual Login --Tenant\"",
              "fullTitle": "Unusual Login --Tenant \"after all\" hook in \"Unusual Login --Tenant\"",
              "timedOut": false,
              "duration": 106,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await chrome_driver.quit()",
              "err": {},
              "uuid": "3a757f4a-3400-4a68-aeba-8ef8c02435d9",
              "parentUUID": "908e04b4-4370-4e7a-b66d-e70ab935f4a4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Unusual Login --Tenant Select Tenant Option",
              "timedOut": false,
              "duration": 1348,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 500 });\n// In Tenant Login Page\nlet result = await tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "676a634b-888c-472c-955b-8e1fd07aa0ab",
              "parentUUID": "908e04b4-4370-4e7a-b66d-e70ab935f4a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Wrong login input --> Invalid email",
              "fullTitle": "Unusual Login --Tenant Wrong login input --> Invalid email",
              "timedOut": false,
              "duration": 721,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\nawait tenant_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('fake value');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 100 });\n// invalid input warning\nlet result = await tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[1]/div')).getText();\nassert.equal(\"Invalid email\", result);",
              "err": {},
              "uuid": "5e8c335c-f835-4773-b8ad-a31526f2c7e4",
              "parentUUID": "908e04b4-4370-4e7a-b66d-e70ab935f4a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Empty login input --> Password Required",
              "fullTitle": "Unusual Login --Tenant Empty login input --> Password Required",
              "timedOut": false,
              "duration": 455,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\nawait tenant_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait tenant_driver.manage().setTimeouts({ implicit: 500 });\n// Required warning\nlet result = await tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[2]/div[2]')).getText();\nassert.equal(\"Required\", result);",
              "err": {},
              "uuid": "9d511dd6-ce92-4a0d-bd78-3d87ea28bd20",
              "parentUUID": "908e04b4-4370-4e7a-b66d-e70ab935f4a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Forget password page",
              "fullTitle": "Unusual Login --Tenant Forget password page",
              "timedOut": false,
              "duration": 303,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\n// click forget password\nawait tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[4]/a')).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 100 });\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ForgotPasswordPage', currentURL)",
              "err": {},
              "uuid": "5b2b48d7-6a2e-48df-bdd5-cc5de3db59af",
              "parentUUID": "908e04b4-4370-4e7a-b66d-e70ab935f4a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "676a634b-888c-472c-955b-8e1fd07aa0ab",
            "5e8c335c-f835-4773-b8ad-a31526f2c7e4",
            "9d511dd6-ce92-4a0d-bd78-3d87ea28bd20",
            "5b2b48d7-6a2e-48df-bdd5-cc5de3db59af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2827,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4096a2b5-aff5-48c3-a2ec-defb3366658e",
          "title": "Login",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\TEN_create_ticket.spec.js",
          "file": "\\test\\TEN_create_ticket.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login\"",
              "fullTitle": "Login \"before all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 2954,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "1c66f6d7-0390-4acc-8808-47c195c7725d",
              "parentUUID": "4096a2b5-aff5-48c3-a2ec-defb3366658e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login\"",
              "fullTitle": "Login \"after all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 24,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "db45b8c6-686b-44ec-8066-92562d79ba57",
              "parentUUID": "4096a2b5-aff5-48c3-a2ec-defb3366658e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Login Select Tenant Option",
              "timedOut": false,
              "duration": 1323,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n// In first page\nlet tenantButton = await driver.wait(until.elementIsVisible(driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n// In Tenant Login Page\nlet loginText = await driver.wait(until.elementIsVisible(driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "8ff172c4-9a3f-4e09-9fcf-4ef349301542",
              "parentUUID": "4096a2b5-aff5-48c3-a2ec-defb3366658e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Login Tenant login",
              "timedOut": false,
              "duration": 727,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n      let pw_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n      let submit_button = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n       await driver.manage().setTimeouts({implicit: 1000});\n      // In Tenant Dashboard\n      let next_pg = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "344b7130-aed1-4ace-b882-92bb8c571b9a",
              "parentUUID": "4096a2b5-aff5-48c3-a2ec-defb3366658e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Service Tickets",
              "fullTitle": "Login Tenant View Service Tickets",
              "timedOut": false,
              "duration": 458,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n      let ticket_list = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "b74c35a4-e8c2-4bd1-b782-026ec726c2ba",
              "parentUUID": "4096a2b5-aff5-48c3-a2ec-defb3366658e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Login Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1686,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n      let create_service_ticket = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n      ))\n      await create_service_ticket.click();\n      await driver.manage().setTimeouts({implicit: 1000});\n      // Request Type\n      let req_type = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n      ));\n      await req_type.click();\n      let sel_dropdown= await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n      ));\n      await sel_dropdown.click();\n      // Request Description\n      let description= await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n      ));\n      await description.sendKeys(\"Aircon is leaking\");\n      await driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n      // Submit Button\n      let submit= await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n      ));\n      await submit.click();\n        \n      await driver.sleep(1000)\n      await driver.manage().setTimeouts({implicit: 2000});\n      // Check if it enters dashboard again\n      const currentURL = await driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "703e3690-1b3e-4909-bb90-8d22d01612cd",
              "parentUUID": "4096a2b5-aff5-48c3-a2ec-defb3366658e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sign Out",
              "fullTitle": "Login Sign Out",
              "timedOut": false,
              "duration": 48,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n      let signout = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n      ))\n      await signout.click();\n      await driver.manage().setTimeouts({implicit: 500});\n  \n      // Check if ticket portal is shown\n      const currentURL = await driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "c2144047-e8c2-4231-badb-7b9f4c412883",
              "parentUUID": "4096a2b5-aff5-48c3-a2ec-defb3366658e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ff172c4-9a3f-4e09-9fcf-4ef349301542",
            "344b7130-aed1-4ace-b882-92bb8c571b9a",
            "b74c35a4-e8c2-4bd1-b782-026ec726c2ba",
            "703e3690-1b3e-4909-bb90-8d22d01612cd",
            "c2144047-e8c2-4231-badb-7b9f4c412883"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4242,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5b80337e-46c7-4fa7-b91c-6465a7353466",
          "title": "Tenant Filter Tickets",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\TEN_filter.spec.js",
          "file": "\\test\\TEN_filter.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Tenant Filter Tickets\"",
              "fullTitle": "Tenant Filter Tickets \"before all\" hook in \"Tenant Filter Tickets\"",
              "timedOut": false,
              "duration": 2746,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "8bcebaf5-1df8-4231-ae1c-7414e5233075",
              "parentUUID": "5b80337e-46c7-4fa7-b91c-6465a7353466",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Tenant Filter Tickets\"",
              "fullTitle": "Tenant Filter Tickets \"after all\" hook in \"Tenant Filter Tickets\"",
              "timedOut": false,
              "duration": 26,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit();",
              "err": {},
              "uuid": "eb9f5f33-1d6e-47c7-85af-fbdf611d8d17",
              "parentUUID": "5b80337e-46c7-4fa7-b91c-6465a7353466",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Tenant Filter Tickets Select Tenant Option",
              "timedOut": false,
              "duration": 1223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "47194a1c-79bf-4981-bf07-016be472db5b",
              "parentUUID": "5b80337e-46c7-4fa7-b91c-6465a7353466",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Tenant Filter Tickets Tenant login",
              "timedOut": false,
              "duration": 606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n\n      let pw_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await tenant_driver.manage().setTimeouts({implicit: 1000});\n\n      // In Tenant Dashboard\n      let next_pg = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "0dad6dc7-2923-49ae-a97a-76f12533779b",
              "parentUUID": "5b80337e-46c7-4fa7-b91c-6465a7353466",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket -- Aircon",
              "fullTitle": "Tenant Filter Tickets Tenant Create Service Ticket -- Aircon",
              "timedOut": false,
              "duration": 1733,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon is freezing\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "8a55e42e-52b3-468f-a170-14fad401a033",
              "parentUUID": "5b80337e-46c7-4fa7-b91c-6465a7353466",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket -- Cleanliness",
              "fullTitle": "Tenant Filter Tickets Tenant Create Service Ticket -- Cleanliness",
              "timedOut": false,
              "duration": 1541,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[3]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"The area is quite dirty\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "a01a8110-d609-470f-86cb-6174569b5839",
              "parentUUID": "5b80337e-46c7-4fa7-b91c-6465a7353466",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ticket type filter",
              "fullTitle": "Tenant Filter Tickets check ticket type filter",
              "timedOut": false,
              "duration": 531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// await tenant_driver.sleep(1000);\nawait tenant_driver.get('http://localhost:3000/pages/TicketList');\n  \nlet search_requester = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/input'))\n));\nawait search_requester.sendKeys(\"Cleanliness\");\nlet last_requester = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"accordion-button-:r0:\"]/div/div[3]'))\n  ));\nlet text = await last_requester.getText();\nassert.equal('Cleanliness', text);\n// Return back to normal\nlet clear_button =  await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/div/button'))));\nawait clear_button.click();",
              "err": {},
              "uuid": "0e61de70-2510-4e9a-9726-8acfd90280f2",
              "parentUUID": "5b80337e-46c7-4fa7-b91c-6465a7353466",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Tenant Filter Tickets Tenant Sign Out",
              "timedOut": false,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n  \n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "c6433d90-29eb-40d6-8b04-7a6fd1775c32",
              "parentUUID": "5b80337e-46c7-4fa7-b91c-6465a7353466",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "47194a1c-79bf-4981-bf07-016be472db5b",
            "0dad6dc7-2923-49ae-a97a-76f12533779b",
            "8a55e42e-52b3-468f-a170-14fad401a033",
            "a01a8110-d609-470f-86cb-6174569b5839",
            "0e61de70-2510-4e9a-9726-8acfd90280f2",
            "c6433d90-29eb-40d6-8b04-7a6fd1775c32"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5690,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d016cdce-c49f-4e80-bad3-1e64e81729dd",
          "title": "Service Ticket Workflow -- Landlord Rejects Ticket",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\wf_1.spec.js",
          "file": "\\test\\wf_1.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket \"before all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "timedOut": false,
              "duration": 6816,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "db5423e3-8f64-4115-8382-c4177e386bf3",
              "parentUUID": "d016cdce-c49f-4e80-bad3-1e64e81729dd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket \"after all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "timedOut": false,
              "duration": 82,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "638f5a24-92d0-4d27-a103-03d4f7bf96fd",
              "parentUUID": "d016cdce-c49f-4e80-bad3-1e64e81729dd",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Select Tenant Option",
              "timedOut": false,
              "duration": 1391,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "e2947ec2-9d4f-4202-9a13-559aa6e95bc6",
              "parentUUID": "d016cdce-c49f-4e80-bad3-1e64e81729dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant login",
              "timedOut": false,
              "duration": 636,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\nlet email_in = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait email_in.sendKeys('tenant1@gmail.com');\n  \nlet pw_in = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\nawait pw_in.sendKeys('password');\n  \nlet submit_button = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\nawait submit_button.click();\n  \n await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n// In Tenant Dashboard\nlet next_pg = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\nlet result = await next_pg.getText();\nassert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "3788bd19-9863-42b2-8d3f-6de6a5aaabe9",
              "parentUUID": "d016cdce-c49f-4e80-bad3-1e64e81729dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 2005,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon not clean, I demand a cleaning robot\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "4e1c939f-7538-4524-bb41-cfbdfbe3fb21",
              "parentUUID": "d016cdce-c49f-4e80-bad3-1e64e81729dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Select Landlord Option",
              "timedOut": false,
              "duration": 1411,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "bdd3527a-aa4a-46ef-a29f-f136f7565b0a",
              "parentUUID": "d016cdce-c49f-4e80-bad3-1e64e81729dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord login",
              "timedOut": false,
              "duration": 680,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n  let email_in = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n  await email_in.sendKeys('landlord1@gmail.com');\n    \n  let pw_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n  await pw_in.sendKeys('password');\n\n  let submit_button = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n  await submit_button.click();\n\n  await landlord_driver.manage().setTimeouts({implicit: 1000});\n\n  // In Landlord Dashboard\n  let next_pg = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n  let result = await next_pg.getText();\n  assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "d12656e9-714d-4466-9ed3-ead56fc3e34f",
              "parentUUID": "d016cdce-c49f-4e80-bad3-1e64e81729dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord View Service Tickets",
              "timedOut": false,
              "duration": 364,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await landlord_driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "b8b08be5-1f5d-4d65-b289-0b29fac0618f",
              "parentUUID": "d016cdce-c49f-4e80-bad3-1e64e81729dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket (Dropdown)",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord Select Service Ticket (Dropdown)",
              "timedOut": false,
              "duration": 317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Find ticket\nawait landlord_driver.manage().setTimeouts({implicit: 3000});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]/div/button\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);",
              "err": {},
              "uuid": "1390d58d-9e48-4164-8ace-9b68e2d9078e",
              "parentUUID": "d016cdce-c49f-4e80-bad3-1e64e81729dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Self Assign Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord Self Assign Service Ticket",
              "timedOut": false,
              "duration": 6211,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.manage().setTimeouts({implicit: 1000});\n//await landlord_driver.sleep(2000)\n// Click self assign button\nconst self_assign_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]/div/div/div/div/button'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", self_assign_button);\nawait landlord_driver.manage().setTimeouts({implicit: 2000});\n\n// Click landlord\nconst landlord_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"landlord1@gmail.com\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", landlord_button);\nawait landlord_driver.sleep(2000)\n// Click confirm assignment\nconst cfm_assignment = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"Confirm Assignment\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", cfm_assignment);\nawait landlord_driver.manage().setTimeouts({implicit: 1000});\nawait landlord_driver.sleep(2000)\n// Click view details and action\nconst view_details = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"View Details & Actions\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", view_details);\nawait landlord_driver.sleep(2000)\n// Enter new page\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "a6a4238f-17ce-486a-b4ae-20bc2383f050",
              "parentUUID": "d016cdce-c49f-4e80-bad3-1e64e81729dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Reject Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord Reject Service Ticket",
              "timedOut": false,
              "duration": 45,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const rejectButton = landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div[3]/button[2]\"));\nawait landlord_driver.executeScript(\"arguments[0].click();\", rejectButton);\n  \ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "d7c4a194-d9cc-4960-835e-2f94de5c8d2d",
              "parentUUID": "d016cdce-c49f-4e80-bad3-1e64e81729dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant View Ticket",
              "timedOut": false,
              "duration": 469,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "332686d2-462f-4795-8ef9-f4b70f4fbf65",
              "parentUUID": "d016cdce-c49f-4e80-bad3-1e64e81729dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord Sign Out",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n        let signout = await landlord_driver.wait(until.elementIsVisible(\n          landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n        ));\n        await signout.click();\n        await landlord_driver.manage().setTimeouts({implicit: 500});\n    \n        // Check if ticket portal is shown\n        const currentURL = await landlord_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "f2749cfb-70fe-43d1-96d0-cb51f062d7a1",
              "parentUUID": "d016cdce-c49f-4e80-bad3-1e64e81729dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant Sign Out",
              "timedOut": false,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n));\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n    \n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "b02dae1b-de6c-4de0-bf0e-1bb39c1088d3",
              "parentUUID": "d016cdce-c49f-4e80-bad3-1e64e81729dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e2947ec2-9d4f-4202-9a13-559aa6e95bc6",
            "3788bd19-9863-42b2-8d3f-6de6a5aaabe9",
            "4e1c939f-7538-4524-bb41-cfbdfbe3fb21",
            "bdd3527a-aa4a-46ef-a29f-f136f7565b0a",
            "d12656e9-714d-4466-9ed3-ead56fc3e34f",
            "b8b08be5-1f5d-4d65-b289-0b29fac0618f",
            "1390d58d-9e48-4164-8ace-9b68e2d9078e",
            "a6a4238f-17ce-486a-b4ae-20bc2383f050",
            "d7c4a194-d9cc-4960-835e-2f94de5c8d2d",
            "332686d2-462f-4795-8ef9-f4b70f4fbf65",
            "f2749cfb-70fe-43d1-96d0-cb51f062d7a1",
            "b02dae1b-de6c-4de0-bf0e-1bb39c1088d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13684,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "066a5623-fb4c-453a-946e-55c315262463",
          "title": "Service Ticket Workflow -- Tenant Rejects Quotation",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\wf_2.spec.js",
          "file": "\\test\\wf_2.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Service Ticket Workflow -- Tenant Rejects Quotation\"",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation \"before all\" hook in \"Service Ticket Workflow -- Tenant Rejects Quotation\"",
              "timedOut": false,
              "duration": 6266,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "4d5a3d69-bdf2-445e-b321-6c18291b3fcd",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Service Ticket Workflow -- Tenant Rejects Quotation\"",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation \"after all\" hook in \"Service Ticket Workflow -- Tenant Rejects Quotation\"",
              "timedOut": false,
              "duration": 51,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "f1710b23-b779-430a-9859-b7b14bb5864a",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Select Tenant Option",
              "timedOut": false,
              "duration": 1379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "a28ffa03-d2ce-4315-a7af-8f069359324d",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant login",
              "timedOut": false,
              "duration": 644,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n\n      let pw_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await tenant_driver.manage().setTimeouts({implicit: 1000});\n\n      // In Tenant Dashboard\n      let next_pg = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "05721b6a-0837-44c1-8eba-7c566111bd4b",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1981,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon is making unsettling noises\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "13276ae3-c59c-4ecb-9855-04db3b515709",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Select Landlord Option",
              "timedOut": false,
              "duration": 1412,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "361502e0-1553-453f-93f8-5a09007cc364",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord login",
              "timedOut": false,
              "duration": 693,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n  let email_in = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n  await email_in.sendKeys('landlord1@gmail.com');\n    \n  let pw_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n  await pw_in.sendKeys('password');\n\n  let submit_button = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n  await submit_button.click();\n\n  await landlord_driver.manage().setTimeouts({implicit: 1000});\n\n  // In Landlord Dashboard\n  let next_pg = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n  let result = await next_pg.getText();\n  assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "1f1dc258-c979-4537-8072-e5657afaed5f",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord View Service Tickets",
              "timedOut": false,
              "duration": 369,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await landlord_driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "dd54ef31-5875-4ea6-9241-d07d4d9662c7",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket (Dropdown)",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Select Service Ticket (Dropdown)",
              "timedOut": false,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Find ticket\nawait landlord_driver.manage().setTimeouts({implicit: 3000});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]/div/button\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);",
              "err": {},
              "uuid": "bc5e8214-32b1-4473-9972-10355ad55ad8",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Self Assign Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Self Assign Service Ticket",
              "timedOut": false,
              "duration": 6205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.manage().setTimeouts({implicit: 1000});\n//await landlord_driver.sleep(2000)\n// Click self assign button\nconst self_assign_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]/div/div/div/div/button'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", self_assign_button);\nawait landlord_driver.manage().setTimeouts({implicit: 2000});\n\n// Click landlord\nconst landlord_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"landlord1@gmail.com\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", landlord_button);\nawait landlord_driver.sleep(2000)\n// Click confirm assignment\nconst cfm_assignment = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"Confirm Assignment\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", cfm_assignment);\nawait landlord_driver.manage().setTimeouts({implicit: 1000});\nawait landlord_driver.sleep(2000)\n// Click view details and action\nconst view_details = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"View Details & Actions\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", view_details);\nawait landlord_driver.sleep(2000)\n// Enter new page\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "3932592c-7669-41c7-91c4-f3773b6dad4b",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\nlet quotationCheckbox = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\n));\nlet approveButton = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\n));\nawait landlord_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait landlord_driver.sleep(100)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "9de53937-4e35-4386-8a91-6011835909ae",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Upload Quotation",
              "timedOut": false,
              "duration": 2175,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.manage().setTimeouts({implicit: 500});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nawait landlord_driver.manage().setTimeouts({implicit: 500});\nconst addQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", addQuotationButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL)\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"))\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"))\nawait uploadButton.click()\nawait landlord_driver.sleep(2000)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "dc7a432c-831d-4e47-8861-06321e5d8791",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Quotation",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant View Quotation",
              "timedOut": false,
              "duration": 392,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst viewQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", viewQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL)",
              "err": {},
              "uuid": "b130c6e9-1cb8-44c8-af08-c9834f3adf56",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Reject Quotation",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant Reject Quotation",
              "timedOut": false,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});     \nconst rejectButton = tenant_driver.findElement(By.xpath(\"//button[text()='Reject']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", rejectButton); \nawait tenant_driver.manage().setTimeouts({implicit: 200});\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "805acd15-21c2-4f75-85ea-2b49c3f4a31d",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Upload Quotation",
              "timedOut": false,
              "duration": 1737,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList');\nawait landlord_driver.manage().setTimeouts({implicit: 1000});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nawait landlord_driver.manage().setTimeouts({implicit: 1000});\nconst addQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", addQuotationButton);\nawait landlord_driver.manage().setTimeouts({implicit: 1000});\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL);\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"));\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf');\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"));\nawait uploadButton.click();\nawait landlord_driver.manage().setTimeouts({implicit: 1000});\nawait landlord_driver.sleep(1000)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL);",
              "err": {},
              "uuid": "7614a45c-121a-45c7-bb2c-ffb8ab8730c8",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Quotation",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant View Quotation",
              "timedOut": false,
              "duration": 412,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 600});\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst viewQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", viewQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL);",
              "err": {},
              "uuid": "171c263b-a4f9-487e-a7b1-cff7d1f57c38",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Approve Quotation",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant Approve Quotation",
              "timedOut": false,
              "duration": 313,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 600});\nconst quotationCheckbox = tenant_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nconst approveButton = tenant_driver.findElement(By.xpath(\"//button[text()='Approve']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait tenant_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "f62e54ea-8141-4dfc-98cd-7b329c9b32a8",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Starts Work",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Starts Work",
              "timedOut": false,
              "duration": 836,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait landlord_driver.manage().setTimeouts({implicit: 600});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "34bbdc92-a5d2-465a-8297-c5b7dbc57135",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Ends Work",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Ends Work",
              "timedOut": false,
              "duration": 821,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait landlord_driver.manage().setTimeouts({implicit: 600});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "8ce94673-1541-4029-a401-b4e115e8af4d",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant Give Feedback",
              "timedOut": false,
              "duration": 1774,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 600});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\nawait tenant_driver.manage().setTimeouts({implicit: 3000});\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\nawait tenant_driver.manage().setTimeouts({implicit: 2000});\nawait tenant_driver.sleep(1000)\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', currentURL)",
              "err": {},
              "uuid": "91557d05-f611-4047-abbf-11795a7624bf",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord View Feedback",
              "timedOut": false,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet result = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/div/div[1]/textarea'))\n  ));\nlet feedback = await result.getText();\nassert.equal(\"Dummy Feedback Comment\", feedback)",
              "err": {},
              "uuid": "528e4d02-9d6b-4257-bf1a-b872bc64f992",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Sign Out",
              "timedOut": false,
              "duration": 46,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait landlord_driver.manage().setTimeouts({implicit: 500});\n// Check if ticket portal is shown\nconst currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "d7afa403-3206-407f-8bd0-22914d67ef5f",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant Sign Out",
              "timedOut": false,
              "duration": 47,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "6f89d1e7-de20-4ca6-9ead-28f373ccdd88",
              "parentUUID": "066a5623-fb4c-453a-946e-55c315262463",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a28ffa03-d2ce-4315-a7af-8f069359324d",
            "05721b6a-0837-44c1-8eba-7c566111bd4b",
            "13276ae3-c59c-4ecb-9855-04db3b515709",
            "361502e0-1553-453f-93f8-5a09007cc364",
            "1f1dc258-c979-4537-8072-e5657afaed5f",
            "dd54ef31-5875-4ea6-9241-d07d4d9662c7",
            "bc5e8214-32b1-4473-9972-10355ad55ad8",
            "3932592c-7669-41c7-91c4-f3773b6dad4b",
            "9de53937-4e35-4386-8a91-6011835909ae",
            "dc7a432c-831d-4e47-8861-06321e5d8791",
            "b130c6e9-1cb8-44c8-af08-c9834f3adf56",
            "805acd15-21c2-4f75-85ea-2b49c3f4a31d",
            "7614a45c-121a-45c7-bb2c-ffb8ab8730c8",
            "171c263b-a4f9-487e-a7b1-cff7d1f57c38",
            "f62e54ea-8141-4dfc-98cd-7b329c9b32a8",
            "34bbdc92-a5d2-465a-8297-c5b7dbc57135",
            "8ce94673-1541-4029-a401-b4e115e8af4d",
            "91557d05-f611-4047-abbf-11795a7624bf",
            "528e4d02-9d6b-4257-bf1a-b872bc64f992",
            "d7afa403-3206-407f-8bd0-22914d67ef5f",
            "6f89d1e7-de20-4ca6-9ead-28f373ccdd88"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21950,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}