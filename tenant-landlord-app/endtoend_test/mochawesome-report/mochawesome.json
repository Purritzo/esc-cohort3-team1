{
  "stats": {
    "suites": 6,
    "tests": 26,
    "passes": 26,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-03T09:32:21.943Z",
    "end": "2023-08-03T09:33:00.128Z",
    "duration": 38185,
    "testsRegistered": 26,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2edd081a-8b48-4d1d-b6af-e3a3fe8dd012",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9c3e1610-2a2a-4db2-b175-bc8fae381ee8",
          "title": "Unusual Login --Landlord",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\alt_test_login.spec.js",
          "file": "\\test\\alt_test_login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Unusual Login --Landlord\"",
              "fullTitle": "Unusual Login --Landlord \"before all\" hook in \"Unusual Login --Landlord\"",
              "timedOut": false,
              "duration": 1581,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "landlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "3ef9a66b-938e-4b80-8666-92f1e73362eb",
              "parentUUID": "9c3e1610-2a2a-4db2-b175-bc8fae381ee8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unusual Login --Landlord\"",
              "fullTitle": "Unusual Login --Landlord \"after all\" hook in \"Unusual Login --Landlord\"",
              "timedOut": false,
              "duration": 32,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.quit()",
              "err": {},
              "uuid": "0178086d-3360-4623-9613-aedefaa232cd",
              "parentUUID": "9c3e1610-2a2a-4db2-b175-bc8fae381ee8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Unusual Login --Landlord Select Landlord Option",
              "timedOut": false,
              "duration": 1079,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 500 });\n// In Landlord Login Page\nlet result = await landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "87e24553-0cf3-4508-b005-e19790272629",
              "parentUUID": "9c3e1610-2a2a-4db2-b175-bc8fae381ee8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Wrong login input",
              "fullTitle": "Unusual Login --Landlord Wrong login input",
              "timedOut": false,
              "duration": 495,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\nawait landlord_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('fake value');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 100 });\n// invalid input warning\nlet result = await landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[1]/div')).getText();\nassert.equal(\"Invalid email\", result);",
              "err": {},
              "uuid": "5b0e7a59-d5bd-4e5b-8e34-faa5f94bcc18",
              "parentUUID": "9c3e1610-2a2a-4db2-b175-bc8fae381ee8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "87e24553-0cf3-4508-b005-e19790272629",
            "5b0e7a59-d5bd-4e5b-8e34-faa5f94bcc18"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1574,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "07b26cf1-a40c-45ae-b404-36d983122707",
          "title": "Unusual Login --Tenant",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\alt_test_login.spec.js",
          "file": "\\test\\alt_test_login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Unusual Login --Tenant\"",
              "fullTitle": "Unusual Login --Tenant \"before all\" hook in \"Unusual Login --Tenant\"",
              "timedOut": false,
              "duration": 1582,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "110201d2-88ff-47d8-9c12-32b9b0a5879f",
              "parentUUID": "07b26cf1-a40c-45ae-b404-36d983122707",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unusual Login --Tenant\"",
              "fullTitle": "Unusual Login --Tenant \"after all\" hook in \"Unusual Login --Tenant\"",
              "timedOut": false,
              "duration": 26,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit()",
              "err": {},
              "uuid": "04afddea-14d0-4a64-8743-bd31335f2a04",
              "parentUUID": "07b26cf1-a40c-45ae-b404-36d983122707",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Unusual Login --Tenant Select Tenant Option",
              "timedOut": false,
              "duration": 1059,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 500 });\n// In Tenant Login Page\nlet result = await tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "1c2afb5b-d996-4058-8409-f2ec09028ee9",
              "parentUUID": "07b26cf1-a40c-45ae-b404-36d983122707",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Wrong login input",
              "fullTitle": "Unusual Login --Tenant Wrong login input",
              "timedOut": false,
              "duration": 521,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\nawait tenant_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('fake value');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 100 });\n// invalid input warning\nlet result = await tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[1]/div')).getText();\nassert.equal(\"Invalid email\", result);",
              "err": {},
              "uuid": "11dc8ab4-0d67-4002-9434-25caef8b5ac7",
              "parentUUID": "07b26cf1-a40c-45ae-b404-36d983122707",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c2afb5b-d996-4058-8409-f2ec09028ee9",
            "11dc8ab4-0d67-4002-9434-25caef8b5ac7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1580,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bb282766-bb89-47a6-978d-18f07a53a0c0",
          "title": "Login",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\landlord_test.spec.js",
          "file": "\\test\\landlord_test.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login\"",
              "fullTitle": "Login \"before all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 1616,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "624422c2-d471-41d1-9729-7811243a87c9",
              "parentUUID": "bb282766-bb89-47a6-978d-18f07a53a0c0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login\"",
              "fullTitle": "Login \"after all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 31,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "0c3c34c2-c188-46d3-93e9-f634223c06e1",
              "parentUUID": "bb282766-bb89-47a6-978d-18f07a53a0c0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Login Select Landlord Option",
              "timedOut": false,
              "duration": 1119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\nawait driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait driver.manage().setTimeouts({ implicit: 500 });\n// In Landlord Login Page\nlet result = await driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2')).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "410e2d85-45ec-4a3c-a3b2-498ef70332ee",
              "parentUUID": "bb282766-bb89-47a6-978d-18f07a53a0c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Login Landlord login",
              "timedOut": false,
              "duration": 622,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\nawait driver.manage().setTimeouts({ implicit: 300 });\nawait driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('landlord1@gmail.com');\nawait driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('password');\nawait driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait driver.manage().setTimeouts({ implicit: 800 });\n// In Landlord Dashboard\nlet result = await driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/div[3]\")).isDisplayed();\nassert.equal(true, result);",
              "err": {},
              "uuid": "7a1a405b-d104-4221-926d-752f1dde7d59",
              "parentUUID": "bb282766-bb89-47a6-978d-18f07a53a0c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "410e2d85-45ec-4a3c-a3b2-498ef70332ee",
            "7a1a405b-d104-4221-926d-752f1dde7d59"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1741,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a95d049c-4966-4192-bec9-1d7dda2d8965",
          "title": "Login",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\tenant_test.spec.js",
          "file": "\\test\\tenant_test.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login\"",
              "fullTitle": "Login \"before all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 1571,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "0e653612-77a4-49f5-b4ab-6f7a48bae2ab",
              "parentUUID": "a95d049c-4966-4192-bec9-1d7dda2d8965",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login\"",
              "fullTitle": "Login \"after all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 29,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "4148cefe-e9cd-48b0-971d-dcf684c59cf0",
              "parentUUID": "a95d049c-4966-4192-bec9-1d7dda2d8965",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Login Select Tenant Option",
              "timedOut": false,
              "duration": 1062,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\nawait driver.manage().setTimeouts({implicit: 300});\n// In first page\nawait driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait driver.manage().setTimeouts({implicit: 500});\n// In Tenant Login Page\nlet result = await driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "6c5f09c2-a2b9-4580-9cc6-33c87df44877",
              "parentUUID": "a95d049c-4966-4192-bec9-1d7dda2d8965",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Login Tenant login",
              "timedOut": false,
              "duration": 548,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/pages/LoginPage');\n  \nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n  \nawait driver.manage().setTimeouts({implicit: 300});\nawait driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('tenant1@gmail.com');\nawait driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('password');\nawait driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait driver.manage().setTimeouts({implicit: 800});\n// In Tenant Dashboard\nlet result =  await driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/div[3]\")).isDisplayed();\nassert.equal(true, result)",
              "err": {},
              "uuid": "584dabd0-90f1-4973-8a59-3d8d6a5a8f24",
              "parentUUID": "a95d049c-4966-4192-bec9-1d7dda2d8965",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c5f09c2-a2b9-4580-9cc6-33c87df44877",
            "584dabd0-90f1-4973-8a59-3d8d6a5a8f24"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1610,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "479a4d94-8886-45b9-9f80-24813b959522",
          "title": "Service Tickets",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\tenant_test.spec.js",
          "file": "\\test\\tenant_test.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Service Tickets\"",
              "fullTitle": "Service Tickets \"before all\" hook in \"Service Tickets\"",
              "timedOut": false,
              "duration": 1594,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "b636180c-c412-4b96-a3df-834b16bc4cde",
              "parentUUID": "479a4d94-8886-45b9-9f80-24813b959522",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Service Tickets\"",
              "fullTitle": "Service Tickets \"after all\" hook in \"Service Tickets\"",
              "timedOut": false,
              "duration": 27,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "c7c6482a-8679-4729-a413-da43ae7ee544",
              "parentUUID": "479a4d94-8886-45b9-9f80-24813b959522",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Tenant View Service Tickets",
              "fullTitle": "Service Tickets Tenant View Service Tickets",
              "timedOut": false,
              "duration": 997,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/pages/Dashboard/');\nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\nawait driver.manage().setTimeouts({implicit: 300});\n\n//TODO - tenant can view tickets",
              "err": {},
              "uuid": "85ffaae0-d2c4-4a99-86fd-caa65a751b0f",
              "parentUUID": "479a4d94-8886-45b9-9f80-24813b959522",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Service Tickets Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/pages/CreateTicketPage/');\nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\nawait driver.manage().setTimeouts({implicit: 1000});\n //TODO - tenant can create tickets\n// // Location\n// await driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/form/div/div[1]/div[1]/textarea')).sendKeys(\"Next to escalator 2A\");\n// // Request Type\n// await driver.findElement(By.xpath(\"//*[@id='root']/div/div/form/div/div[1]/div[1]/div/div/svg\")).click();\n// await driver.manage().setTimeouts({implicit: 200});\n// await driver.findElement(By.xpath(\"//*[@id='root']/div/div/form/div/div[1]/div[1]/div/select/option[2]\")).click();\n// // Request Description\n// await driver.findElement(By.xpath(\"//*[@id='root']/div/div/form/div/div[1]/div[2]/textarea\")).sendKeys(\"Aircon is leaking\");\n// await driver.manage().setTimeouts({implicit: 200});\n// // Submit Button\n// await driver.findElement(By.xpath(\"//*[@id='root']/div/div/form/div/div[2]/button\")).click();\n\n// // await driver.manage().setTimeouts({implicit: 500});\n// // // In Ticket Creation\n// // let result =  await driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/div[3]\")).isDisplayed();\n// // assert.equal(true, result)\n// // awai",
              "err": {},
              "uuid": "aae6c1e7-9e36-4bf0-b9fc-fab47dbad99a",
              "parentUUID": "479a4d94-8886-45b9-9f80-24813b959522",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85ffaae0-d2c4-4a99-86fd-caa65a751b0f",
            "aae6c1e7-9e36-4bf0-b9fc-fab47dbad99a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1251,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
          "title": "Successful/Usual Service Ticket Workflow",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\ticket_workflow.spec.js",
          "file": "\\test\\ticket_workflow.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 3082,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "439164de-d87a-4a9f-bd75-ed8151ee03ff",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 129,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "822d7668-212b-4213-a7ec-aec3b064f3a8",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Tenant Option",
              "timedOut": false,
              "duration": 1094,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n// In first page\nawait tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n// In Tenant Login Page\nlet result = await tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "5c457b99-2354-4b13-bb4f-07a8e84b4504",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Login",
              "timedOut": false,
              "duration": 654,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to landing page first\n// Reason is because we need to click the button to set user type\nawait tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n// In first page\nawait tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nawait tenant_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('tenant1@gmail.com');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('password');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"loginButton\"]')).click();\n\nawait tenant_driver.manage().setTimeouts({implicit: 800});\n// In Tenant Dashboard\nlet result =  await tenant_driver.findElement(By.xpath(\"//*[@id='emailText']\")).isDisplayed();\nassert.equal(true, result)",
              "err": {},
              "uuid": "da154a6e-8613-489b-97f2-b14377e1ec2a",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Landlord Option",
              "timedOut": false,
              "duration": 1092,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to landing page\nawait landlord_driver.get('http://localhost:3000/');\n// Initial check\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 500 });\n// In Landlord Login Page\nlet result = await landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "f54abeb1-b4cf-438b-92e4-4f87866bcc20",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Login",
              "timedOut": false,
              "duration": 596,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to landing page first\n// Reason is because we need to click the button to set user type\nawait landlord_driver.get('http://localhost:3000/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n    \nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n    \n// In first page\nawait landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\nawait landlord_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('landlord1@gmail.com');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('password');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 800 });\n// In Landlord Dashboard\nlet result = await landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "24c7b73e-664b-486a-a5ef-f1fcca927d54",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Service Tickets",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View Service Tickets",
              "timedOut": false,
              "duration": 340,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst result = await tenant_driver.findElement(By.css('#ticketTable')).isDisplayed();\nassert.equal(true, result);",
              "err": {},
              "uuid": "294ae65c-9dee-4cbd-8797-44d5789ba14e",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1526,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/CreateTicketPage/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n// Find the dropdown element by its CSS selector\nconst dropdownElement = await tenant_driver.findElement(By.css('select[name=\"requestType\"]'));\n// Click on the dropdown element to open the options list\nawait dropdownElement.click();\n// Find the desired option by its text and click on it\nconst optionLocator = By.xpath(`//select[@name=\"requestType\"]/option[text()=\"Aircon\"]`);\nawait tenant_driver.findElement(optionLocator).click();\nawait tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]')).sendKeys('Dummy Request Description');\n// Find the \"Submit\" button by its CSS selector\nconst submitButton = await tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'));\n// Click on the \"Submit\" button\nawait submitButton.click();\nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n// Check that we get redirected to dashboard\nawait tenant_driver.sleep(1000)\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "4c6c569c-4cf9-4da6-8cce-87b38e6e5aef",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Created Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View Created Service Ticket",
              "timedOut": false,
              "duration": 3313,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nawait tenant_driver.sleep(3000);\n    \n// Can find element but not visible\nconst result = await tenant_driver.findElement(By.xpath(\"//div[text()='Dummy Request Description']\")).isDisplayed();\nassert.equal(false, result);",
              "err": {},
              "uuid": "49b6b387-465a-4b11-a6da-c81b4a65ff73",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Service Tickets",
              "timedOut": false,
              "duration": 354,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n\nawait landlord_driver.manage().setTimeouts({implicit: 300});\n//TODO - tenant can view tickets\nconst result = await landlord_driver.findElement(By.css('#ticketTable')).isDisplayed();\nassert.equal(true, result);",
              "err": {},
              "uuid": "a959e6bc-fe1b-4a23-8865-cb5d8a638e83",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Created Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Created Service Ticket",
              "timedOut": false,
              "duration": 386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\n    \n// Can find element but not visible\nconst result = await landlord_driver.findElement(By.xpath(\"//div[text()='Dummy Request Description']\")).isDisplayed();\nassert.equal(false, result);",
              "err": {},
              "uuid": "048ac329-550b-406a-b4dd-553b333a09fb",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 2886,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)\nawait landlord_driver.sleep(2000)\nconst quotationCheckbox = landlord_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nconst approveButton = landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait landlord_driver.sleep(100)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)\nawait landlord_driver.sleep(300)",
              "err": {},
              "uuid": "fdbbc706-08af-44af-8f39-8fda87d8617e",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Upload Quotation",
              "timedOut": false,
              "duration": 3398,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.sleep(3000)\nawait landlord_driver.manage().setTimeouts({implicit: 300});\nconst goToQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", goToQuotationButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL)\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"))\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"))\nawait uploadButton.click()\nawait landlord_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "4bdb2e53-d91a-4f66-863b-a005176a37ca",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View & Approve Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View & Approve Quotation",
              "timedOut": false,
              "duration": 707,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst goToQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", goToQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL)\nconst quotationCheckbox = tenant_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nconst approveButton = tenant_driver.findElement(By.xpath(\"//button[text()='Approve']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait tenant_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "9b8c3aec-dcfb-43df-8510-2a18fa0eeb7c",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Start Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Start Work",
              "timedOut": false,
              "duration": 966,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "e7990002-984f-4480-8a6c-3a8d941e465c",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord End Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord End Work",
              "timedOut": false,
              "duration": 645,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "7ce3a315-09d1-4993-b1bd-cf2f118aae0a",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Give Feedback",
              "timedOut": false,
              "duration": 1064,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\nawait tenant_driver.sleep(200)\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\nawait tenant_driver.sleep(200);\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', currentURL)",
              "err": {},
              "uuid": "ce8088d5-44b6-49fe-871d-2a440a841119",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Feedback",
              "timedOut": false,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n\nconst result = await landlord_driver.findElement(By.xpath(\"//*[text()='Dummy Feedback Comment']\")).isDisplayed()\nassert.equal(true, result)",
              "err": {},
              "uuid": "977e7c23-3d38-4fdb-93fa-2171bb0f5ccd",
              "parentUUID": "0b13dfa1-0149-4246-9be5-185c8e32c7a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c457b99-2354-4b13-bb4f-07a8e84b4504",
            "da154a6e-8613-489b-97f2-b14377e1ec2a",
            "f54abeb1-b4cf-438b-92e4-4f87866bcc20",
            "24c7b73e-664b-486a-a5ef-f1fcca927d54",
            "294ae65c-9dee-4cbd-8797-44d5789ba14e",
            "4c6c569c-4cf9-4da6-8cce-87b38e6e5aef",
            "49b6b387-465a-4b11-a6da-c81b4a65ff73",
            "a959e6bc-fe1b-4a23-8865-cb5d8a638e83",
            "048ac329-550b-406a-b4dd-553b333a09fb",
            "fdbbc706-08af-44af-8f39-8fda87d8617e",
            "4bdb2e53-d91a-4f66-863b-a005176a37ca",
            "9b8c3aec-dcfb-43df-8510-2a18fa0eeb7c",
            "e7990002-984f-4480-8a6c-3a8d941e465c",
            "7ce3a315-09d1-4993-b1bd-cf2f118aae0a",
            "ce8088d5-44b6-49fe-871d-2a440a841119",
            "977e7c23-3d38-4fdb-93fa-2171bb0f5ccd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19104,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}