{
  "stats": {
    "suites": 12,
    "tests": 112,
    "passes": 112,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-06T13:43:22.691Z",
    "end": "2023-08-06T13:45:39.718Z",
    "duration": 137027,
    "testsRegistered": 112,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4dc2667a-4b27-44ec-98d1-81812a226613",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7458fbd3-eb04-4c0d-9943-5f89d86b1140",
          "title": "Successful/Usual Service Ticket Workflow",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\fast_ticket_workflow.spec.js",
          "file": "\\test\\fast_ticket_workflow.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 1823,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\n//landlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "466461be-3205-4b04-9dac-61cff6e83a18",
              "parentUUID": "7458fbd3-eb04-4c0d-9943-5f89d86b1140",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 30,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); //await landlord_driver.quit()",
              "err": {},
              "uuid": "701a1538-6d6f-4b56-9214-f66abf832b5c",
              "parentUUID": "7458fbd3-eb04-4c0d-9943-5f89d86b1140",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Tenant Option",
              "timedOut": false,
              "duration": 1140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n// In first page\nlet tenantOptionButton = await tenant_driver.wait(until.elementIsVisible(tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\"))));\nawait tenantOptionButton.click()\n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "4f38966f-89a2-4bd2-b4c1-cda23147e754",
              "parentUUID": "7458fbd3-eb04-4c0d-9943-5f89d86b1140",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Login",
              "timedOut": false,
              "duration": 686,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to landing page first\n// Reason is because we need to click the button to set user type\nawait tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n// In first page\nlet tenantOptionButton = await tenant_driver.wait(until.elementIsVisible(tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\"))));\nawait tenantOptionButton.click()\nlet loginField = await tenant_driver.wait(until.elementIsVisible(tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait loginField.sendKeys('tenant1@gmail.com')\nlet passwordField = await tenant_driver.wait(until.elementIsVisible(tenant_driver.findElement(By.xpath('//*[@id=\"password\"]'))));\nawait passwordField.sendKeys('password')\nlet loginButton = await tenant_driver.wait(until.elementIsVisible(tenant_driver.findElement(By.xpath('//*[@id=\"loginButton\"]'))));\nawait loginButton.click()\nawait tenant_driver.manage().setTimeouts({ implicit: 3000 });\n// In Tenant Dashboard\nlet dashboardText = await tenant_driver.wait(until.elementIsVisible(tenant_driver.findElement(By.xpath(\"//*[@id='emailText']\"))));\nlet result = await dashboardText.isDisplayed()\nassert.equal(true, result)",
              "err": {},
              "uuid": "c3472ba5-c342-4f18-806c-cbb902b08d06",
              "parentUUID": "7458fbd3-eb04-4c0d-9943-5f89d86b1140",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f38966f-89a2-4bd2-b4c1-cda23147e754",
            "c3472ba5-c342-4f18-806c-cbb902b08d06"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1826,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
          "title": "Successful/Usual Service Ticket Workflow",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\happy_wf_1.spec.js",
          "file": "\\test\\happy_wf_1.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 3233,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "864c8a5a-4aa3-4ed9-8530-a36b89e8bd7d",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 70,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "0f83974f-abee-4bee-bf0e-ee5bcba1757b",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Tenant Option",
              "timedOut": false,
              "duration": 1101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "33c1bcbf-34f1-4b6f-a099-1def9c3c7d62",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant login",
              "timedOut": false,
              "duration": 464,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n\n      let pw_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await tenant_driver.manage().setTimeouts({implicit: 1000});\n\n      // In Tenant Dashboard\n      let next_pg = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "712c480a-bfc8-4f83-bc8e-bad4b5c94744",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1579,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon is not cold\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "7bd1cfec-5415-47e8-90e3-b0a94e87d776",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Landlord Option",
              "timedOut": false,
              "duration": 1120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "c01cdc9c-3cac-4eb9-840b-b448fa180667",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord login",
              "timedOut": false,
              "duration": 517,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n  let email_in = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n  await email_in.sendKeys('landlord1@gmail.com');\n    \n  let pw_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n  await pw_in.sendKeys('password');\n\n  let submit_button = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n  await submit_button.click();\n\n  await landlord_driver.manage().setTimeouts({implicit: 1000});\n\n  // In Landlord Dashboard\n  let next_pg = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n  let result = await next_pg.getText();\n  assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "a34638bb-4d72-4f71-9980-821d97eaba2f",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Service Tickets",
              "timedOut": false,
              "duration": 308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await landlord_driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "2b954e5e-3518-4943-9867-31c05a267bec",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Select Service Ticket",
              "timedOut": false,
              "duration": 765,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Find ticket\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\n// Click on \"details\" button\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n// // View drop down box\n// let lastTicket = await landlord_driver.wait(until.elementIsVisible(\n//   landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\n// ));\n// await landlord_driver.executeScript(\"arguments[0].click();\", lastTicket)\n// // await landlord_driver.sleep(2000)\n// // await lastTicket.click()\n// // await landlord_driver.executeScript(\"arguments[0].click();\", lastTicket)\n// // Click \"View Details& Actions\" Button\n// let detailsButton = await landlord_driver.wait(until.elementIsVisible(\n//   landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\n// ));\n// await landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n// Enter new page\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "efd9e6b1-2a23-4df4-beac-74d86c5ca861",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\nlet quotationCheckbox = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\n));\nlet approveButton = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\n));\nawait landlord_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait landlord_driver.sleep(100)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "0a64a4d1-4cc0-4986-8611-e85059394cd8",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Upload Quotation",
              "timedOut": false,
              "duration": 886,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\nconst addQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", addQuotationButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL)\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"))\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"))\nawait uploadButton.click()\nawait landlord_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "3e814523-2cfa-4659-bcaf-6f659704617a",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View Quotation",
              "timedOut": false,
              "duration": 877,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst viewQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", viewQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL)",
              "err": {},
              "uuid": "1d0cbb70-f712-4093-acf7-346174b7cf52",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Approve Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Approve Quotation",
              "timedOut": false,
              "duration": 309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\nconst quotationCheckbox = tenant_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nconst approveButton = tenant_driver.findElement(By.xpath(\"//button[text()='Approve']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait tenant_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "8bc13d56-fda5-49b9-a261-e142ccc0204c",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Starts Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Starts Work",
              "timedOut": false,
              "duration": 1492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "61e84f91-50fa-4702-bd74-2f91798d2c5c",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Ends Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Ends Work",
              "timedOut": false,
              "duration": 1423,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "5d81295d-3464-44b1-8624-260027c090d9",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Give Feedback",
              "timedOut": false,
              "duration": 1419,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\nawait tenant_driver.sleep(200)\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\nawait tenant_driver.sleep(200);\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', currentURL)",
              "err": {},
              "uuid": "0f3b10b1-95ad-4b7c-ae42-89cc11799101",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Feedback",
              "timedOut": false,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet result = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/div[1]/textarea'))\n  ));\nlet feedback = await result.getText();\nassert.equal(\"Dummy Feedback Comment\", feedback)",
              "err": {},
              "uuid": "7c8be1a1-09f4-4465-a9c7-aac27ad7e736",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Sign Out",
              "timedOut": false,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n    let signout = await landlord_driver.wait(until.elementIsVisible(\n      landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n    ))\n    await signout.click();\n    await landlord_driver.manage().setTimeouts({implicit: 500});\n    // Check if ticket portal is shown\n    const currentURL = await landlord_driver.getCurrentUrl();\n    assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "67cb4886-3880-4f00-aa85-111c9b255bd8",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Sign Out",
              "timedOut": false,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "93b6f2a9-924e-478e-8c21-16e3a10b4b0b",
              "parentUUID": "c211e4ab-6807-4b29-8548-3d7a0db6bed1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33c1bcbf-34f1-4b6f-a099-1def9c3c7d62",
            "712c480a-bfc8-4f83-bc8e-bad4b5c94744",
            "7bd1cfec-5415-47e8-90e3-b0a94e87d776",
            "c01cdc9c-3cac-4eb9-840b-b448fa180667",
            "a34638bb-4d72-4f71-9980-821d97eaba2f",
            "2b954e5e-3518-4943-9867-31c05a267bec",
            "efd9e6b1-2a23-4df4-beac-74d86c5ca861",
            "0a64a4d1-4cc0-4986-8611-e85059394cd8",
            "3e814523-2cfa-4659-bcaf-6f659704617a",
            "1d0cbb70-f712-4093-acf7-346174b7cf52",
            "8bc13d56-fda5-49b9-a261-e142ccc0204c",
            "61e84f91-50fa-4702-bd74-2f91798d2c5c",
            "5d81295d-3464-44b1-8624-260027c090d9",
            "0f3b10b1-95ad-4b7c-ae42-89cc11799101",
            "7c8be1a1-09f4-4465-a9c7-aac27ad7e736",
            "67cb4886-3880-4f00-aa85-111c9b255bd8",
            "93b6f2a9-924e-478e-8c21-16e3a10b4b0b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12704,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "88037fc3-ac9a-4c19-be22-6c718432e905",
          "title": "Successful/Usual Service Ticket Workflow",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\happy_wf_2.spec.js",
          "file": "\\test\\happy_wf_2.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 3207,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "fa031ff7-bd26-4ef8-8ead-06c0ac69cc12",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 87,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "b133fd9f-101c-44de-8a34-98f1978990bc",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Tenant Option",
              "timedOut": false,
              "duration": 1099,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "154ab425-9516-49d1-90fb-d332ad7f31c8",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant login",
              "timedOut": false,
              "duration": 466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n\n      let pw_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await tenant_driver.manage().setTimeouts({implicit: 1000});\n\n      // In Tenant Dashboard\n      let next_pg = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "0de5fbf6-4139-4ec2-a308-30a59f2dd9a7",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1624,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon is freezing\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "b7fd54fd-6af8-4029-8b94-3bef250d7059",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Landlord Option",
              "timedOut": false,
              "duration": 1109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "9fbf5bbc-ad6f-4a99-ae70-f5df415645ce",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord login",
              "timedOut": false,
              "duration": 566,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\nlet email_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait email_in.sendKeys('landlord1@gmail.com');\n    \nlet pw_in = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\nawait pw_in.sendKeys('password');\n      \nlet submit_button = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\nawait submit_button.click();\n      \nawait landlord_driver.manage().setTimeouts({implicit: 1000});\n      \n// In Landlord Dashboard\nlet next_pg = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\nlet result = await next_pg.getText();\nassert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "a3996909-3f82-4302-8fed-b05a81dcfa53",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Service Tickets",
              "timedOut": false,
              "duration": 289,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n))\nawait ticket_list.click();\n  \n      // Check if ticket portal is shown\nconst currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "79b1cd8c-57cc-4b61-bfe4-9b54252c5d5c",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Select Service Ticket",
              "timedOut": false,
              "duration": 757,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\n      await landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\n      const detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\n      await landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n      // // View drop down box\n      // let lastTicket = await landlord_driver.wait(until.elementIsVisible(\n      //   landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\n      // ));\n      // await landlord_driver.executeScript(\"arguments[0].click();\", lastTicket)\n      // // await landlord_driver.sleep(2000)\n      // // await lastTicket.click()\n      // // await landlord_driver.executeScript(\"arguments[0].click();\", lastTicket)\n      // // Click \"View Details& Actions\" Button\n      // let detailsButton = await landlord_driver.wait(until.elementIsVisible(\n      //   landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\n      // ));\n      // await landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n      // Enter new page\n      let currentURL = await landlord_driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "4ef6cee4-02e2-4189-b492-c7b8fb0ae672",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\n  \nlet approveButton = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\n));\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\n  \nawait landlord_driver.sleep(100)\n  \ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "b7379f32-ac58-4ac7-8d0b-25ba7ad8ba37",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Starts Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Starts Work",
              "timedOut": false,
              "duration": 2029,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\n    \nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "4a32d08f-337f-402f-8cfa-0eef3de18452",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Ends Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Ends Work",
              "timedOut": false,
              "duration": 1477,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\n    \nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "1044fad0-8305-4e58-bcae-5ec39fa01dcc",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Give Feedback",
              "timedOut": false,
              "duration": 1444,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\n    \nawait tenant_driver.sleep(200)\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\n    \nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\n    \nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\n    \nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\n    \nawait tenant_driver.sleep(200);\n    \ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', currentURL)",
              "err": {},
              "uuid": "307c0480-13d3-4627-8f66-d387795ff47a",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Feedback",
              "timedOut": false,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nlet result = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/div[1]/textarea'))\n  ));\nlet feedback = await result.getText();\nassert.equal(\"Dummy Feedback Comment\", feedback)",
              "err": {},
              "uuid": "8b3ecb70-f0fc-4607-ab74-7526c602a606",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Sign Out",
              "timedOut": false,
              "duration": 59,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n    let signout = await landlord_driver.wait(until.elementIsVisible(\n      landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n    ))\n    await signout.click();\n    await landlord_driver.manage().setTimeouts({implicit: 500});\n\n    // Check if ticket portal is shown\n    const currentURL = await landlord_driver.getCurrentUrl();\n    assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "6f16f64a-b984-43e6-b728-a65fb8d1d493",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Sign Out",
              "timedOut": false,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n    \n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "ee641518-54a3-45d0-a770-48d2079f5906",
              "parentUUID": "88037fc3-ac9a-4c19-be22-6c718432e905",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "154ab425-9516-49d1-90fb-d332ad7f31c8",
            "0de5fbf6-4139-4ec2-a308-30a59f2dd9a7",
            "b7fd54fd-6af8-4029-8b94-3bef250d7059",
            "9fbf5bbc-ad6f-4a99-ae70-f5df415645ce",
            "a3996909-3f82-4302-8fed-b05a81dcfa53",
            "79b1cd8c-57cc-4b61-bfe4-9b54252c5d5c",
            "4ef6cee4-02e2-4189-b492-c7b8fb0ae672",
            "b7379f32-ac58-4ac7-8d0b-25ba7ad8ba37",
            "4a32d08f-337f-402f-8cfa-0eef3de18452",
            "1044fad0-8305-4e58-bcae-5ec39fa01dcc",
            "307c0480-13d3-4627-8f66-d387795ff47a",
            "8b3ecb70-f0fc-4607-ab74-7526c602a606",
            "6f16f64a-b984-43e6-b728-a65fb8d1d493",
            "ee641518-54a3-45d0-a770-48d2079f5906"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11295,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7a8f5d4f-0a38-4c7e-bfd5-1599afd13632",
          "title": "Landlord Lease",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\LAN_alt_lease.spec.js",
          "file": "\\test\\LAN_alt_lease.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"before all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 1625,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "d94b8f16-96c6-4986-9c32-7e5b844ecc85",
              "parentUUID": "7a8f5d4f-0a38-4c7e-bfd5-1599afd13632",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"after all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 32,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "e0bec961-9a7b-4ffb-94f0-cfbfffbefa7a",
              "parentUUID": "7a8f5d4f-0a38-4c7e-bfd5-1599afd13632",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Landlord Lease Select Landlord Option",
              "timedOut": false,
              "duration": 1824,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\n  \nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet landlordButton = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n  \n// In Landlord Login Page\nlet loginText = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "52933b69-adf4-4685-b3e8-98032f265ab4",
              "parentUUID": "7a8f5d4f-0a38-4c7e-bfd5-1599afd13632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Landlord Lease Landlord login",
              "timedOut": false,
              "duration": 479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('landlord1@gmail.com');\n\n      let pw_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await driver.manage().setTimeouts({implicit: 1000});\n\n      // In Landlord Dashboard\n      let next_pg = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "97ac2920-6163-4141-9cb1-2de700bf191c",
              "parentUUID": "7a8f5d4f-0a38-4c7e-bfd5-1599afd13632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord views Account Management",
              "fullTitle": "Landlord Lease Landlord views Account Management",
              "timedOut": false,
              "duration": 385,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"Account MAnagement\"\nlet account_management = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n));\nawait account_management.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement\", currentURL);",
              "err": {},
              "uuid": "98ea8a6d-fc8c-4dda-b432-d7a8c994dec8",
              "parentUUID": "7a8f5d4f-0a38-4c7e-bfd5-1599afd13632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter create new tenant page",
              "fullTitle": "Landlord Lease Enter create new tenant page",
              "timedOut": false,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"create tenant\" button\nlet create_tenant_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div[1]/button'))\n));\nawait create_tenant_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "00d9439c-3af7-4945-a02c-f3e3b8153805",
              "parentUUID": "7a8f5d4f-0a38-4c7e-bfd5-1599afd13632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create new tenant -- with same email as existing tenant",
              "fullTitle": "Landlord Lease Create new tenant -- with same email as existing tenant",
              "timedOut": false,
              "duration": 369,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// input email and password\nlet email = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"email\"]'))\n));\nawait email.sendKeys(\"newtenant@gmail.com\");\nlet password = await driver.wait(until.elementIsVisible(\ndriver.findElement(By.xpath('//*[@id=\"password\"]'))\n));\nawait password.sendKeys(\"password\");\nlet create_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"loginButton\"]'))\n));\nawait create_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "4b8887c8-54f0-4cde-8d85-47f7e65dd80c",
              "parentUUID": "7a8f5d4f-0a38-4c7e-bfd5-1599afd13632",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "52933b69-adf4-4685-b3e8-98032f265ab4",
            "97ac2920-6163-4141-9cb1-2de700bf191c",
            "98ea8a6d-fc8c-4dda-b432-d7a8c994dec8",
            "00d9439c-3af7-4945-a02c-f3e3b8153805",
            "4b8887c8-54f0-4cde-8d85-47f7e65dd80c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3157,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0e912d8a-578b-4345-937a-17bcedb488e6",
          "title": "Unusual Login --Landlord",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\LAN_alt_login.spec.js",
          "file": "\\test\\LAN_alt_login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Unusual Login --Landlord\"",
              "fullTitle": "Unusual Login --Landlord \"before all\" hook in \"Unusual Login --Landlord\"",
              "timedOut": false,
              "duration": 1677,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "landlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "7beed7d8-e61e-4d36-8aaf-f55058498935",
              "parentUUID": "0e912d8a-578b-4345-937a-17bcedb488e6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unusual Login --Landlord\"",
              "fullTitle": "Unusual Login --Landlord \"after all\" hook in \"Unusual Login --Landlord\"",
              "timedOut": false,
              "duration": 28,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.quit()",
              "err": {},
              "uuid": "3d57502f-0fc3-4776-bf03-da5e233ed67f",
              "parentUUID": "0e912d8a-578b-4345-937a-17bcedb488e6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Unusual Login --Landlord Select Landlord Option",
              "timedOut": false,
              "duration": 1074,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 500 });\n// In Landlord Login Page\nlet result = await landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "ab989613-d8e6-4533-8f34-aa77db030919",
              "parentUUID": "0e912d8a-578b-4345-937a-17bcedb488e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Wrong login input --> Invalid email",
              "fullTitle": "Unusual Login --Landlord Wrong login input --> Invalid email",
              "timedOut": false,
              "duration": 522,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\nawait landlord_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('fake value');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 100 });\n// invalid input warning\nlet result = await landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[1]/div')).getText();\nassert.equal(\"Invalid email\", result);",
              "err": {},
              "uuid": "a2270c6b-5e5b-4a3e-9e76-76ecaa436dcc",
              "parentUUID": "0e912d8a-578b-4345-937a-17bcedb488e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Empty login input --> Password Required",
              "fullTitle": "Unusual Login --Landlord Empty login input --> Password Required",
              "timedOut": false,
              "duration": 290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\nawait landlord_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait landlord_driver.manage().setTimeouts({ implicit: 500 });\n// Required warning\nlet result = await landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[2]/div[2]')).getText();\nassert.equal(\"Required\", result);",
              "err": {},
              "uuid": "42329558-aaba-448c-942e-da2123c27aad",
              "parentUUID": "0e912d8a-578b-4345-937a-17bcedb488e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Forget password",
              "fullTitle": "Unusual Login --Landlord Forget password",
              "timedOut": false,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n// click forget password\nawait landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[4]/a')).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 100 });\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ForgotPasswordPage', currentURL)",
              "err": {},
              "uuid": "c95ccc05-a649-4301-9c84-ff9963a14c6a",
              "parentUUID": "0e912d8a-578b-4345-937a-17bcedb488e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ab989613-d8e6-4533-8f34-aa77db030919",
            "a2270c6b-5e5b-4a3e-9e76-76ecaa436dcc",
            "42329558-aaba-448c-942e-da2123c27aad",
            "c95ccc05-a649-4301-9c84-ff9963a14c6a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2089,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e0998458-8825-42ff-a4f0-0ddea45dba6c",
          "title": "Landlord filter ticket",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\LAN_filter_tickets.spec.js",
          "file": "\\test\\LAN_filter_tickets.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Landlord filter ticket\"",
              "fullTitle": "Landlord filter ticket \"before all\" hook in \"Landlord filter ticket\"",
              "timedOut": false,
              "duration": 3259,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();\ntenant_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "c143c4b0-18d4-4656-9b58-4f29721d9863",
              "parentUUID": "e0998458-8825-42ff-a4f0-0ddea45dba6c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Landlord filter ticket\"",
              "fullTitle": "Landlord filter ticket \"after all\" hook in \"Landlord filter ticket\"",
              "timedOut": false,
              "duration": 151,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await driver.quit()",
              "err": {},
              "uuid": "67fe5ea3-841f-4891-8e8d-2dbd42d3ca48",
              "parentUUID": "e0998458-8825-42ff-a4f0-0ddea45dba6c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Set up for testing -- tenant1@gmail.com",
              "fullTitle": "Landlord filter ticket Set up for testing -- tenant1@gmail.com",
              "timedOut": false,
              "duration": 3269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\n// Sign in details: email, password, button\nlet email_in = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait email_in.sendKeys('tenant1@gmail.com');\n    \nlet pw_in = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\nawait pw_in.sendKeys('password');\n    \nlet submit_button = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\nawait submit_button.click();\n    \nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n\n// Click on \"Create Service Ticket\"\nlet create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n));\nawait create_service_ticket.click();\n    \n    \nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n    \n// Request Type\nlet req_type = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n));\nawait req_type.click();\nlet sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n));\nawait sel_dropdown.click();\n    \n// Request Description\nlet description= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n));\nawait description.sendKeys(\"Aircon is leaking\");\nawait tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n    \n// Submit Button\nlet submit= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n));\nawait submit.click();\n    \nawait tenant_driver.sleep(1000)\nawait tenant_driver.manage().setTimeouts({implicit: 2000});\n    \n// Check if it enters dashboard again\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/Dashboard', currentURL);\n// Sign out\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});",
              "err": {},
              "uuid": "2c4de676-2e72-4619-b6b7-84fed2af1513",
              "parentUUID": "e0998458-8825-42ff-a4f0-0ddea45dba6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Set up for testing -- tenant2@gmail.com",
              "fullTitle": "Landlord filter ticket Set up for testing -- tenant2@gmail.com",
              "timedOut": false,
              "duration": 2191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\n// Sign in details: email, password, button\nlet email_in = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait email_in.sendKeys('tenant2@gmail.com');\n    \nlet pw_in = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\nawait pw_in.sendKeys('password');\n    \nlet submit_button = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\nawait submit_button.click();\n    \nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n\n// Click on \"Create Service Ticket\"\nlet create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n));\nawait create_service_ticket.click();\n    \n    \nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n    \n// Request Type\nlet req_type = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n));\nawait req_type.click();\nlet sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n));\nawait sel_dropdown.click();\n    \n// Request Description\nlet description= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n));\nawait description.sendKeys(\"Aircon is not cold\");\nawait tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n    \n// Submit Button\nlet submit= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n));\nawait submit.click();\n    \nawait tenant_driver.sleep(1000)\nawait tenant_driver.manage().setTimeouts({implicit: 2000});\n    \n// Check if it enters dashboard again\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/Dashboard', currentURL);\n// Sign out\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});",
              "err": {},
              "uuid": "37c9b93b-aeb9-4765-9f0b-648f9930c762",
              "parentUUID": "e0998458-8825-42ff-a4f0-0ddea45dba6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Landlord filter ticket Select Landlord Option",
              "timedOut": false,
              "duration": 1086,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\n  \nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet landlordButton = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n  \n// In Landlord Login Page\nlet loginText = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "79f51a12-102d-4c7e-8a92-8025673d2a3e",
              "parentUUID": "e0998458-8825-42ff-a4f0-0ddea45dba6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Landlord filter ticket Landlord login",
              "timedOut": false,
              "duration": 487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('landlord1@gmail.com');\n\n      let pw_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await driver.manage().setTimeouts({implicit: 1000});\n\n      // In Landlord Dashboard\n      let next_pg = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "40c77e7d-7942-4648-a379-e30822876457",
              "parentUUID": "e0998458-8825-42ff-a4f0-0ddea45dba6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Landlord filter ticket Landlord View Service Tickets",
              "timedOut": false,
              "duration": 289,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n))\nawait ticket_list.click();\n  \n// Check if ticket portal is shown\nconst currentURL = await driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "740241d0-58e3-4dcb-899f-263376b2dbeb",
              "parentUUID": "e0998458-8825-42ff-a4f0-0ddea45dba6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter by Requester",
              "fullTitle": "Landlord filter ticket Filter by Requester",
              "timedOut": false,
              "duration": 2586,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let search_requester = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div/input'))\n));\nawait driver.sleep(1000)\nawait search_requester.sendKeys(\"tenant1@gmail.com\")\n// await driver.sleep(1000)\n// const lastTicket = driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\n// await driver.executeScript(\"arguments[0].click();\", lastTicket);\n// const detailsButton = driver.findElement(By.xpath(\"//*[@id='accordion-panel-:riu:']/div/div[1]/text()[4]\"))\n// const last_text = await driver.executeScript(\"arguments[0].getText();\", detailsButton);\n// assert.equal('tenant1@gmail.com', last_text);\n//*[@id=\"accordion-panel-:riu:\"]/div/div[1]/text()[4]\n// const lastTicket = await driver.wait(until.elementIsVisible(\n//     driver.findElement(By.xpath(\"//*[@id='accordion-button-:r3g:']/div/div[2]\"))\n// ));\n// await driver.sleep(3000)\n// await driver.executeScript(\"window.scrollTo(0,document.body.scrollHeight);\");\n//*[@id=\"accordion-button-:riu:\"]\n// let requester = await driver.wait(until.elementIsVisible(\n//     driver.findElement(By.xpath('//*[@id=\"accordion-button-:riu:\"]'))\n// ))\n// const last_text = await requester.getText();\n// assert.equal('tenant1@gmail.com', last_text);\n\n\n// await driver.sleep(2000)\n// const last_text = await lastTicket.getText();\n// assert.equal('tenant1@gmail.com', last_text);\n// await driver.sleep(3000)\n\n// const output_text = await filtered_output.getText();\n// assert(!output_text.includes(\"tenant4@gmail.com\"));",
              "err": {},
              "uuid": "36c2cd67-776b-428e-956c-ab4ac9c8e9d8",
              "parentUUID": "e0998458-8825-42ff-a4f0-0ddea45dba6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c4de676-2e72-4619-b6b7-84fed2af1513",
            "37c9b93b-aeb9-4765-9f0b-648f9930c762",
            "79f51a12-102d-4c7e-8a92-8025673d2a3e",
            "40c77e7d-7942-4648-a379-e30822876457",
            "740241d0-58e3-4dcb-899f-263376b2dbeb",
            "36c2cd67-776b-428e-956c-ab4ac9c8e9d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9908,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ea1a7df7-fec1-429a-a80a-930698029c2b",
          "title": "Landlord Lease",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\LAN_lease.spec.js",
          "file": "\\test\\LAN_lease.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"before all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 1630,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "a8bd05a6-08aa-464c-8781-914f5ecf7f48",
              "parentUUID": "ea1a7df7-fec1-429a-a80a-930698029c2b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"after all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 35,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "416cc142-9dd2-48f6-9cd6-ef862b2fe439",
              "parentUUID": "ea1a7df7-fec1-429a-a80a-930698029c2b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Landlord Lease Select Landlord Option",
              "timedOut": false,
              "duration": 1104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\n  \nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet landlordButton = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n  \n// In Landlord Login Page\nlet loginText = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "b804a37d-8d7a-4a54-b2e2-f619578d8a6c",
              "parentUUID": "ea1a7df7-fec1-429a-a80a-930698029c2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Landlord Lease Landlord login",
              "timedOut": false,
              "duration": 483,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('landlord1@gmail.com');\n\n      let pw_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await driver.manage().setTimeouts({implicit: 1000});\n\n      // In Landlord Dashboard\n      let next_pg = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "f27e3304-9658-455d-8390-ba52db38d1d9",
              "parentUUID": "ea1a7df7-fec1-429a-a80a-930698029c2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord views Account Management",
              "fullTitle": "Landlord Lease Landlord views Account Management",
              "timedOut": false,
              "duration": 380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"Account MAnagement\"\nlet account_management = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n));\nawait account_management.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement\", currentURL);",
              "err": {},
              "uuid": "e2c31192-29bd-48f1-a896-2da8747c554d",
              "parentUUID": "ea1a7df7-fec1-429a-a80a-930698029c2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter create new tenant page",
              "fullTitle": "Landlord Lease Enter create new tenant page",
              "timedOut": false,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"create tenant\" button\nlet create_tenant_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div[1]/button'))\n));\nawait create_tenant_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "83b4b0bb-f12c-4870-b7a3-5560ec3abcae",
              "parentUUID": "ea1a7df7-fec1-429a-a80a-930698029c2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create new tenant",
              "fullTitle": "Landlord Lease Create new tenant",
              "timedOut": false,
              "duration": 378,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// input email and password\nlet email = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"email\"]'))\n));\nawait email.sendKeys(\"newtenant2@gmail.com\");\nlet password = await driver.wait(until.elementIsVisible(\ndriver.findElement(By.xpath('//*[@id=\"password\"]'))\n));\nawait password.sendKeys(\"password\");\nlet create_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"loginButton\"]'))\n));\nawait create_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "73434a53-a463-4c5b-aac6-f69b4199348f",
              "parentUUID": "ea1a7df7-fec1-429a-a80a-930698029c2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Find new tenant in Tenant Details table",
              "fullTitle": "Landlord Lease Find new tenant in Tenant Details table",
              "timedOut": false,
              "duration": 2091,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1000)\nlet new_tenant = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[contains(text(), \"newtenant@gmail.com\")]'))\n));\nawait driver.executeScript(\"arguments[0].click();\", new_tenant);\nawait driver.sleep(1000)\n// let new_lease = await driver.wait(until.elementIsVisible(\n//   driver.findElement(By.xpath('//*[contains(text(), \"New Lease\")]'))\n// ));\nlet new_lease = await driver.findElement(By.xpath('//*[contains(text(), \"New Lease\")]'))\nawait driver.executeScript(\"arguments[0].click();\", new_lease);\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/LeaseUploadPage/\", currentURL);",
              "err": {},
              "uuid": "c0098cf5-04a7-4b38-96c4-ae5f81a75e4b",
              "parentUUID": "ea1a7df7-fec1-429a-a80a-930698029c2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Lease upload",
              "fullTitle": "Landlord Lease Lease upload",
              "timedOut": false,
              "duration": 1423,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Add floor, unit number, file\nlet floor = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"floor\"]'))\n));\nawait floor.sendKeys(\"01\");\nlet unit_number = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"unit_number\"]'))\n));\nawait unit_number.sendKeys(\"123\");\nlet chooseFileButton = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"files\"]'))\n));\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nlet upalod_lease_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"UploadButton\"]'))\n));\nawait upalod_lease_button.click();\nawait driver.manage().setTimeouts({implicit: 500});\nawait driver.sleep(1000)\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/ViewLeasePage/\", currentURL);\n\n// Click next button\nlet next_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div/div/button[2]'))\n));\nawait driver.executeScript(\"arguments[0].click();\", next_button);\nconst nextURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement/\", nextURL);",
              "err": {},
              "uuid": "0375010e-2e59-49fd-bf3b-874af5bf7c52",
              "parentUUID": "ea1a7df7-fec1-429a-a80a-930698029c2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "View lease",
              "fullTitle": "Landlord Lease View lease",
              "timedOut": false,
              "duration": 1259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1000)\nlet new_tenant = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[contains(text(), \"newtenant2@gmail.com\")]'))\n));\nlet view_lease = await driver.findElement(By.xpath('//*[contains(text(), \"View Lease\")]'));\n\nawait driver.executeScript(\"arguments[0].click();\", new_tenant);\nawait driver.executeScript(\"arguments[0].click();\", view_lease);\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/ViewLeasePage/\", currentURL);\n// Click next button\nlet next_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div/div/button[2]'))\n));\nawait driver.executeScript(\"arguments[0].click();\", next_button);\nconst nextURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement/\", nextURL);",
              "err": {},
              "uuid": "7d45301b-2de4-430a-81f7-c2c042795b4b",
              "parentUUID": "ea1a7df7-fec1-429a-a80a-930698029c2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b804a37d-8d7a-4a54-b2e2-f619578d8a6c",
            "f27e3304-9658-455d-8390-ba52db38d1d9",
            "e2c31192-29bd-48f1-a896-2da8747c554d",
            "83b4b0bb-f12c-4870-b7a3-5560ec3abcae",
            "73434a53-a463-4c5b-aac6-f69b4199348f",
            "c0098cf5-04a7-4b38-96c4-ae5f81a75e4b",
            "0375010e-2e59-49fd-bf3b-874af5bf7c52",
            "7d45301b-2de4-430a-81f7-c2c042795b4b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7211,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ac72bce9-20b3-44a4-9b23-ed3c9e9adc07",
          "title": "Unusual Login --Tenant",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\TEN_alt_login.spec.js",
          "file": "\\test\\TEN_alt_login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Unusual Login --Tenant\"",
              "fullTitle": "Unusual Login --Tenant \"before all\" hook in \"Unusual Login --Tenant\"",
              "timedOut": false,
              "duration": 3362,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nchrome_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "e23659c7-7e1b-498d-9a03-97c9bd83818c",
              "parentUUID": "ac72bce9-20b3-44a4-9b23-ed3c9e9adc07",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unusual Login --Tenant\"",
              "fullTitle": "Unusual Login --Tenant \"after all\" hook in \"Unusual Login --Tenant\"",
              "timedOut": false,
              "duration": 61,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await chrome_driver.quit()",
              "err": {},
              "uuid": "3f7356c3-8942-47c2-a891-22357bc81a59",
              "parentUUID": "ac72bce9-20b3-44a4-9b23-ed3c9e9adc07",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Unusual Login --Tenant Select Tenant Option",
              "timedOut": false,
              "duration": 1075,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 500 });\n// In Tenant Login Page\nlet result = await tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "def3004d-3616-4f5a-983f-cdd0654f6c52",
              "parentUUID": "ac72bce9-20b3-44a4-9b23-ed3c9e9adc07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Wrong login input --> Invalid email",
              "fullTitle": "Unusual Login --Tenant Wrong login input --> Invalid email",
              "timedOut": false,
              "duration": 497,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\nawait tenant_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('fake value');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 100 });\n// invalid input warning\nlet result = await tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[1]/div')).getText();\nassert.equal(\"Invalid email\", result);",
              "err": {},
              "uuid": "50658eef-f0b8-4c61-8a60-6874c822737b",
              "parentUUID": "ac72bce9-20b3-44a4-9b23-ed3c9e9adc07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Empty login input --> Password Required",
              "fullTitle": "Unusual Login --Tenant Empty login input --> Password Required",
              "timedOut": false,
              "duration": 292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\nawait tenant_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait tenant_driver.manage().setTimeouts({ implicit: 500 });\n// Required warning\nlet result = await tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[2]/div[2]')).getText();\nassert.equal(\"Required\", result);",
              "err": {},
              "uuid": "700d2ee2-900b-4eed-96bc-5f7545b0ed9f",
              "parentUUID": "ac72bce9-20b3-44a4-9b23-ed3c9e9adc07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Forget password page",
              "fullTitle": "Unusual Login --Tenant Forget password page",
              "timedOut": false,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\n// click forget password\nawait tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[4]/a')).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 100 });\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ForgotPasswordPage', currentURL)",
              "err": {},
              "uuid": "f74fbcc5-ca09-41ae-a822-e5e1468f5000",
              "parentUUID": "ac72bce9-20b3-44a4-9b23-ed3c9e9adc07",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "def3004d-3616-4f5a-983f-cdd0654f6c52",
            "50658eef-f0b8-4c61-8a60-6874c822737b",
            "700d2ee2-900b-4eed-96bc-5f7545b0ed9f",
            "f74fbcc5-ca09-41ae-a822-e5e1468f5000"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2102,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b0b5974a-e4bc-4373-a065-788d28c9907a",
          "title": "Login",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\TEN_create_ticket.spec.js",
          "file": "\\test\\TEN_create_ticket.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login\"",
              "fullTitle": "Login \"before all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 1680,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "ef4a3439-aec0-4618-8afa-f98a38a8fcf1",
              "parentUUID": "b0b5974a-e4bc-4373-a065-788d28c9907a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login\"",
              "fullTitle": "Login \"after all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 29,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "a1960702-c73f-4a76-a23a-1fee1f326f22",
              "parentUUID": "b0b5974a-e4bc-4373-a065-788d28c9907a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Login Select Tenant Option",
              "timedOut": false,
              "duration": 1110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n// In first page\nlet tenantButton = await driver.wait(until.elementIsVisible(driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n// In Tenant Login Page\nlet loginText = await driver.wait(until.elementIsVisible(driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "6b34dbc6-d19a-4e48-82e4-aaa5d410d7aa",
              "parentUUID": "b0b5974a-e4bc-4373-a065-788d28c9907a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Login Tenant login",
              "timedOut": false,
              "duration": 477,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n      let pw_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n      let submit_button = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n       await driver.manage().setTimeouts({implicit: 1000});\n      // In Tenant Dashboard\n      let next_pg = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "5d57ba6a-8be8-464d-8e64-339acef12119",
              "parentUUID": "b0b5974a-e4bc-4373-a065-788d28c9907a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Service Tickets",
              "fullTitle": "Login Tenant View Service Tickets",
              "timedOut": false,
              "duration": 783,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n      let ticket_list = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "5496c1e5-3c3f-40bb-ad4f-9feb4de35df7",
              "parentUUID": "b0b5974a-e4bc-4373-a065-788d28c9907a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Login Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1560,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n      let create_service_ticket = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n      ))\n      await create_service_ticket.click();\n      await driver.manage().setTimeouts({implicit: 1000});\n      // Request Type\n      let req_type = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n      ));\n      await req_type.click();\n      let sel_dropdown= await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n      ));\n      await sel_dropdown.click();\n      // Request Description\n      let description= await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n      ));\n      await description.sendKeys(\"Aircon is leaking\");\n      await driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n      // Submit Button\n      let submit= await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n      ));\n      await submit.click();\n        \n      await driver.sleep(1000)\n      await driver.manage().setTimeouts({implicit: 2000});\n      // Check if it enters dashboard again\n      const currentURL = await driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "968235aa-2c3a-4465-966f-84ddcb26d152",
              "parentUUID": "b0b5974a-e4bc-4373-a065-788d28c9907a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sign Out",
              "fullTitle": "Login Sign Out",
              "timedOut": false,
              "duration": 63,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n      let signout = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n      ))\n      await signout.click();\n      await driver.manage().setTimeouts({implicit: 500});\n  \n      // Check if ticket portal is shown\n      const currentURL = await driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "f3e5b696-c932-4a8a-ad3b-a1ffe4306ac4",
              "parentUUID": "b0b5974a-e4bc-4373-a065-788d28c9907a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b34dbc6-d19a-4e48-82e4-aaa5d410d7aa",
            "5d57ba6a-8be8-464d-8e64-339acef12119",
            "5496c1e5-3c3f-40bb-ad4f-9feb4de35df7",
            "968235aa-2c3a-4465-966f-84ddcb26d152",
            "f3e5b696-c932-4a8a-ad3b-a1ffe4306ac4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3993,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
          "title": "Successful/Usual Service Ticket Workflow",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\ticket_workflow.spec.js",
          "file": "\\test\\ticket_workflow.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 3664,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "ac1f315a-2157-4880-a28e-e9ac8ceac2a8",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 72,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "c81bc7db-17a0-4375-91c4-63d9d87bff16",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Tenant Option",
              "timedOut": false,
              "duration": 1204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n// In first page\nawait tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n// In Tenant Login Page\nlet result = await tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "cd844077-85b8-4129-96dc-eacbaef96583",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Login",
              "timedOut": false,
              "duration": 665,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to landing page first\n// Reason is because we need to click the button to set user type\nawait tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n// In first page\nawait tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nawait tenant_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('tenant1@gmail.com');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('password');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"loginButton\"]')).click();\n\nawait tenant_driver.manage().setTimeouts({implicit: 800});\n// In Tenant Dashboard\nlet result =  await tenant_driver.findElement(By.xpath(\"//*[@id='emailText']\")).isDisplayed();\nassert.equal(true, result)",
              "err": {},
              "uuid": "99594b19-2047-4576-9211-683f41ad251f",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Landlord Option",
              "timedOut": false,
              "duration": 1068,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to landing page\nawait landlord_driver.get('http://localhost:3000/');\n// Initial check\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 500 });\n// In Landlord Login Page\nlet result = await landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "de299e0f-77a6-47e5-8809-2e98f14df3a5",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Login",
              "timedOut": false,
              "duration": 599,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to landing page first\n// Reason is because we need to click the button to set user type\nawait landlord_driver.get('http://localhost:3000/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n    \nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n    \n// In first page\nawait landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\nawait landlord_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('landlord1@gmail.com');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('password');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 800 });\n// In Landlord Dashboard\nlet result = await landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "2c86e7ef-3f61-4ad1-b722-b5908543222b",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Service Tickets",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View Service Tickets",
              "timedOut": false,
              "duration": 273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst result = await tenant_driver.findElement(By.css('#ticketTable')).isDisplayed();\nassert.equal(true, result);",
              "err": {},
              "uuid": "fe6b1448-bbce-4835-b2ce-17cbc94f2cfa",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 2039,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/CreateTicketPage/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n// Find the dropdown element by its CSS selector\nconst dropdownElement = await tenant_driver.findElement(By.css('select[name=\"requestType\"]'));\n// Click on the dropdown element to open the options list\nawait dropdownElement.click();\n// Find the desired option by its text and click on it\nconst optionLocator = By.xpath(`//select[@name=\"requestType\"]/option[text()=\"Aircon\"]`);\nawait tenant_driver.findElement(optionLocator).click();\nawait tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]')).sendKeys('Dummy Request Description');\n// Find the \"Submit\" button by its CSS selector\nconst submitButton = await tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'));\n// Click on the \"Submit\" button\nawait submitButton.click();\nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n// Check that we get redirected to dashboard\nawait tenant_driver.sleep(1000)\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "57fb444b-e9ef-4f2b-ae09-6e37ac58444b",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Created Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View Created Service Ticket",
              "timedOut": false,
              "duration": 3758,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nawait tenant_driver.sleep(3000);\n    \n// Can find element but not visible\nconst result = await tenant_driver.findElement(By.xpath(\"//div[text()='Dummy Request Description']\")).isDisplayed();\nassert.equal(false, result);",
              "err": {},
              "uuid": "08697b4c-bac7-4106-9dc4-8b54e182324e",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Service Tickets",
              "timedOut": false,
              "duration": 225,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n\nawait landlord_driver.manage().setTimeouts({implicit: 300});\n//TODO - tenant can view tickets\nconst result = await landlord_driver.findElement(By.css('#ticketTable')).isDisplayed();\nassert.equal(true, result);",
              "err": {},
              "uuid": "bcb7e545-9829-45ce-a686-dace9e150268",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Created Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Created Service Ticket",
              "timedOut": false,
              "duration": 894,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\n    \n// Can find element but not visible\nconst result = await landlord_driver.findElement(By.xpath(\"//div[text()='Dummy Request Description']\")).isDisplayed();\nassert.equal(false, result);",
              "err": {},
              "uuid": "c89ae851-3b8b-4c02-af2a-ac34904f4124",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 3905,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)\nawait landlord_driver.sleep(2000)\nconst quotationCheckbox = landlord_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nconst approveButton = landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait landlord_driver.sleep(100)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)\nawait landlord_driver.sleep(300)",
              "err": {},
              "uuid": "c8cc840e-3200-44ad-acac-a8009bf4beed",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Upload Quotation",
              "timedOut": false,
              "duration": 3421,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.sleep(3000)\nawait landlord_driver.manage().setTimeouts({implicit: 300});\nconst goToQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", goToQuotationButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL)\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"))\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"))\nawait uploadButton.click()\nawait landlord_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "41e835fa-34dd-4801-a57d-dd00aaad9b1b",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View & Approve Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View & Approve Quotation",
              "timedOut": false,
              "duration": 1246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst goToQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", goToQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL)\nconst quotationCheckbox = tenant_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nconst approveButton = tenant_driver.findElement(By.xpath(\"//button[text()='Approve']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait tenant_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "424c853b-c1ea-42c5-b35e-3ec849ad6582",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Start Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Start Work",
              "timedOut": false,
              "duration": 1696,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "ed4090c7-1523-46f9-8a70-17f7943f9786",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord End Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord End Work",
              "timedOut": false,
              "duration": 1504,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "4316485e-681e-4095-af6a-15b67a8f9bf6",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Give Feedback",
              "timedOut": false,
              "duration": 1419,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\nawait tenant_driver.sleep(200)\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\nawait tenant_driver.sleep(200);\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', currentURL)",
              "err": {},
              "uuid": "811d11eb-3ac7-4811-b470-13216c729965",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Feedback",
              "timedOut": false,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n\nconst result = await landlord_driver.findElement(By.xpath(\"//*[text()='Dummy Feedback Comment']\")).isDisplayed()\nassert.equal(true, result)",
              "err": {},
              "uuid": "334e02b3-7a07-4378-a20c-7263564a8932",
              "parentUUID": "48a7bcdb-fc33-409d-9cd3-18a3e11f4d9d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cd844077-85b8-4129-96dc-eacbaef96583",
            "99594b19-2047-4576-9211-683f41ad251f",
            "de299e0f-77a6-47e5-8809-2e98f14df3a5",
            "2c86e7ef-3f61-4ad1-b722-b5908543222b",
            "fe6b1448-bbce-4835-b2ce-17cbc94f2cfa",
            "57fb444b-e9ef-4f2b-ae09-6e37ac58444b",
            "08697b4c-bac7-4106-9dc4-8b54e182324e",
            "bcb7e545-9829-45ce-a686-dace9e150268",
            "c89ae851-3b8b-4c02-af2a-ac34904f4124",
            "c8cc840e-3200-44ad-acac-a8009bf4beed",
            "41e835fa-34dd-4801-a57d-dd00aaad9b1b",
            "424c853b-c1ea-42c5-b35e-3ec849ad6582",
            "ed4090c7-1523-46f9-8a70-17f7943f9786",
            "4316485e-681e-4095-af6a-15b67a8f9bf6",
            "811d11eb-3ac7-4811-b470-13216c729965",
            "334e02b3-7a07-4378-a20c-7263564a8932"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24028,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8d375ceb-113a-4a20-afea-2ff8a44e8547",
          "title": "Service Ticket Workflow -- Landlord Rejects Ticket",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\wf_1.spec.js",
          "file": "\\test\\wf_1.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket \"before all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "timedOut": false,
              "duration": 3303,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "4d868245-17f5-456a-bad3-826c2a84a1ee",
              "parentUUID": "8d375ceb-113a-4a20-afea-2ff8a44e8547",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket \"after all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "timedOut": false,
              "duration": 75,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "ff078fc0-0edc-4e71-9204-5ab7328d3b20",
              "parentUUID": "8d375ceb-113a-4a20-afea-2ff8a44e8547",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Select Tenant Option",
              "timedOut": false,
              "duration": 1090,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "bce38b88-6ec0-4af9-a6a1-a21d427039ab",
              "parentUUID": "8d375ceb-113a-4a20-afea-2ff8a44e8547",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant login",
              "timedOut": false,
              "duration": 461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\nlet email_in = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait email_in.sendKeys('tenant1@gmail.com');\n  \nlet pw_in = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\nawait pw_in.sendKeys('password');\n  \nlet submit_button = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\nawait submit_button.click();\n  \n await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n// In Tenant Dashboard\nlet next_pg = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\nlet result = await next_pg.getText();\nassert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "29bcef4d-d353-4237-822d-423ab33715d7",
              "parentUUID": "8d375ceb-113a-4a20-afea-2ff8a44e8547",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1679,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon not clean, I demand a cleaning robot\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "3a2db98e-a071-4832-bfb9-e67be57246ea",
              "parentUUID": "8d375ceb-113a-4a20-afea-2ff8a44e8547",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Select Landlord Option",
              "timedOut": false,
              "duration": 1154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "b7decc4e-f406-4161-aded-c45786fa3b75",
              "parentUUID": "8d375ceb-113a-4a20-afea-2ff8a44e8547",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord login",
              "timedOut": false,
              "duration": 534,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n  let email_in = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n  await email_in.sendKeys('landlord1@gmail.com');\n    \n  let pw_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n  await pw_in.sendKeys('password');\n\n  let submit_button = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n  await submit_button.click();\n\n  await landlord_driver.manage().setTimeouts({implicit: 1000});\n\n  // In Landlord Dashboard\n  let next_pg = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n  let result = await next_pg.getText();\n  assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "02dd3b90-539c-4afb-898d-200dc237daf4",
              "parentUUID": "8d375ceb-113a-4a20-afea-2ff8a44e8547",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord View Service Tickets",
              "timedOut": false,
              "duration": 301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await landlord_driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "d0d65de8-abce-40be-8a92-f19531d586af",
              "parentUUID": "8d375ceb-113a-4a20-afea-2ff8a44e8547",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord Select Service Ticket",
              "timedOut": false,
              "duration": 4102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.manage().setTimeouts({implicit: 400});\nawait landlord_driver.sleep(2000)\n// await landlord_driver.executeScript(`window.scrollBy(0, ${3003});`)\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\n\nawait landlord_driver.sleep(2000)\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n\n      // // View drop down box\n      // let lastTicket = await landlord_driver.wait(until.elementIsVisible(\n      //   landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\n      // ));\n      // await landlord_driver.executeScript(\"arguments[0].click();\", lastTicket)\n      // // await landlord_driver.sleep(2000)\n      // // await lastTicket.click()\n      // // await landlord_driver.executeScript(\"arguments[0].click();\", lastTicket)\n\n      // // Click \"View Details& Actions\" Button\n      // let detailsButton = await landlord_driver.wait(until.elementIsVisible(\n      //   landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\n      // ));\n      // await landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n\n      // Enter new page\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "18ea28e9-6031-417b-b6c1-72c3dc60872d",
              "parentUUID": "8d375ceb-113a-4a20-afea-2ff8a44e8547",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Reject Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord Reject Service Ticket",
              "timedOut": false,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const rejectButton = landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div[3]/button[2]\"));\nawait landlord_driver.executeScript(\"arguments[0].click();\", rejectButton);\n  \ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "ec6ed496-32db-4cbe-9a76-9095f4cac4bb",
              "parentUUID": "8d375ceb-113a-4a20-afea-2ff8a44e8547",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant View Ticket",
              "timedOut": false,
              "duration": 864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "7ade509b-86e6-48bf-900a-22b55efe4575",
              "parentUUID": "8d375ceb-113a-4a20-afea-2ff8a44e8547",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord Sign Out",
              "timedOut": false,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n        let signout = await landlord_driver.wait(until.elementIsVisible(\n          landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n        ));\n        await signout.click();\n        await landlord_driver.manage().setTimeouts({implicit: 500});\n    \n        // Check if ticket portal is shown\n        const currentURL = await landlord_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "718b0027-ca8b-420a-9304-fa09396b2634",
              "parentUUID": "8d375ceb-113a-4a20-afea-2ff8a44e8547",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant Sign Out",
              "timedOut": false,
              "duration": 55,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n));\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n    \n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "000a4c17-22e6-4f28-a86f-8a3671ce8fb9",
              "parentUUID": "8d375ceb-113a-4a20-afea-2ff8a44e8547",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bce38b88-6ec0-4af9-a6a1-a21d427039ab",
            "29bcef4d-d353-4237-822d-423ab33715d7",
            "3a2db98e-a071-4832-bfb9-e67be57246ea",
            "b7decc4e-f406-4161-aded-c45786fa3b75",
            "02dd3b90-539c-4afb-898d-200dc237daf4",
            "d0d65de8-abce-40be-8a92-f19531d586af",
            "18ea28e9-6031-417b-b6c1-72c3dc60872d",
            "ec6ed496-32db-4cbe-9a76-9095f4cac4bb",
            "7ade509b-86e6-48bf-900a-22b55efe4575",
            "718b0027-ca8b-420a-9304-fa09396b2634",
            "000a4c17-22e6-4f28-a86f-8a3671ce8fb9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10403,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e1769f90-e7b8-49c7-822c-83d09518b457",
          "title": "Successful/Usual Service Ticket Workflow",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\wf_2.spec.js",
          "file": "\\test\\wf_2.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 3278,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "46c793fd-5093-4603-9f75-a3b142223016",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 88,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "d0778c34-8af7-4676-84f9-60982f42c820",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Tenant Option",
              "timedOut": false,
              "duration": 1110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "eecaf981-29ca-4535-9884-843e40e07005",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant login",
              "timedOut": false,
              "duration": 463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n\n      let pw_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await tenant_driver.manage().setTimeouts({implicit: 1000});\n\n      // In Tenant Dashboard\n      let next_pg = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "ff75e840-626c-4586-a51e-6fdad7193f79",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1702,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon is making unsettling noises\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "b1e88178-fd09-4cc4-b3f4-5d37d26821b3",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Landlord Option",
              "timedOut": false,
              "duration": 1172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "5c5d00f2-81cb-41dd-9b38-901fdbd7b287",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord login",
              "timedOut": false,
              "duration": 544,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n  let email_in = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n  await email_in.sendKeys('landlord1@gmail.com');\n    \n  let pw_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n  await pw_in.sendKeys('password');\n\n  let submit_button = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n  await submit_button.click();\n\n  await landlord_driver.manage().setTimeouts({implicit: 1000});\n\n  // In Landlord Dashboard\n  let next_pg = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n  let result = await next_pg.getText();\n  assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "2fc2ed87-283b-4228-90a4-e0da74d673d7",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Service Tickets",
              "timedOut": false,
              "duration": 296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await landlord_driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "139f98c6-8f7b-45e8-8667-3e59f59bc3cb",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Select Service Ticket",
              "timedOut": false,
              "duration": 857,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Find ticket\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\n// Click on \"details\" button\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n// Enter new page\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "152d4f5c-b22d-4c6e-b0cb-bfcb12b77b80",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\nlet quotationCheckbox = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\n));\nlet approveButton = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\n));\nawait landlord_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait landlord_driver.sleep(100)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "0fb9a89e-8bfb-4905-be8c-93865bbf5385",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Upload Quotation",
              "timedOut": false,
              "duration": 907,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\nconst addQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", addQuotationButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL)\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"))\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"))\nawait uploadButton.click()\nawait landlord_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "4a3bd203-8493-4964-b92e-781ef9a0c424",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View Quotation",
              "timedOut": false,
              "duration": 902,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst viewQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", viewQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL)",
              "err": {},
              "uuid": "bfd73d83-e1e4-4297-9e1a-1f7cd3b899eb",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Reject Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Reject Quotation",
              "timedOut": false,
              "duration": 273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});     \nconst rejectButton = tenant_driver.findElement(By.xpath(\"//button[text()='Reject']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", rejectButton); \nawait tenant_driver.sleep(200)     \ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "8e259c14-d3fd-4353-b710-002567222a77",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Upload Quotation",
              "timedOut": false,
              "duration": 1223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList');\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\nconst addQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", addQuotationButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL);\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"));\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf');\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"));\nawait uploadButton.click();\nawait landlord_driver.sleep(200);\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL);",
              "err": {},
              "uuid": "f27374a0-356f-4130-a03f-cfbcda1e57de",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View Quotation",
              "timedOut": false,
              "duration": 836,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst viewQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", viewQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL);",
              "err": {},
              "uuid": "7ce7a394-5a5b-458b-9006-7e694733f91f",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Approve Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Approve Quotation",
              "timedOut": false,
              "duration": 292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\nconst quotationCheckbox = tenant_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nconst approveButton = tenant_driver.findElement(By.xpath(\"//button[text()='Approve']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait tenant_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "5909d26c-42e8-4e34-a938-b73e053f7015",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Starts Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Starts Work",
              "timedOut": false,
              "duration": 1531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "7d776b32-89a3-4fa3-bb7b-74989e36b6a8",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Ends Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Ends Work",
              "timedOut": false,
              "duration": 1601,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "2e9edd52-100e-4761-8cac-548e86e0d190",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Give Feedback",
              "timedOut": false,
              "duration": 1573,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\nawait tenant_driver.sleep(200)\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\nawait tenant_driver.sleep(200);\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', currentURL)",
              "err": {},
              "uuid": "4e4123a7-39cb-46f7-8160-ec14829bc5f1",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Feedback",
              "timedOut": false,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet result = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/div[1]/textarea'))\n  ));\nlet feedback = await result.getText();\nassert.equal(\"Dummy Feedback Comment\", feedback)",
              "err": {},
              "uuid": "ded3a5d4-ed89-4400-ad6a-62fdc7ddc563",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Sign Out",
              "timedOut": false,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n    let signout = await landlord_driver.wait(until.elementIsVisible(\n      landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n    ))\n    await signout.click();\n    await landlord_driver.manage().setTimeouts({implicit: 500});\n    // Check if ticket portal is shown\n    const currentURL = await landlord_driver.getCurrentUrl();\n    assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "6acdc6a8-ddc6-40fc-ac4c-2344de996387",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Sign Out",
              "timedOut": false,
              "duration": 69,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "e4a9b36d-35f6-4a99-8e65-babcec308220",
              "parentUUID": "e1769f90-e7b8-49c7-822c-83d09518b457",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eecaf981-29ca-4535-9884-843e40e07005",
            "ff75e840-626c-4586-a51e-6fdad7193f79",
            "b1e88178-fd09-4cc4-b3f4-5d37d26821b3",
            "5c5d00f2-81cb-41dd-9b38-901fdbd7b287",
            "2fc2ed87-283b-4228-90a4-e0da74d673d7",
            "139f98c6-8f7b-45e8-8667-3e59f59bc3cb",
            "152d4f5c-b22d-4c6e-b0cb-bfcb12b77b80",
            "0fb9a89e-8bfb-4905-be8c-93865bbf5385",
            "4a3bd203-8493-4964-b92e-781ef9a0c424",
            "bfd73d83-e1e4-4297-9e1a-1f7cd3b899eb",
            "8e259c14-d3fd-4353-b710-002567222a77",
            "f27374a0-356f-4130-a03f-cfbcda1e57de",
            "7ce7a394-5a5b-458b-9006-7e694733f91f",
            "5909d26c-42e8-4e34-a938-b73e053f7015",
            "7d776b32-89a3-4fa3-bb7b-74989e36b6a8",
            "2e9edd52-100e-4761-8cac-548e86e0d190",
            "4e4123a7-39cb-46f7-8160-ec14829bc5f1",
            "ded3a5d4-ed89-4400-ad6a-62fdc7ddc563",
            "6acdc6a8-ddc6-40fc-ac4c-2344de996387",
            "e4a9b36d-35f6-4a99-8e65-babcec308220"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15745,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}