{
  "stats": {
    "suites": 6,
    "tests": 27,
    "passes": 27,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-04T06:16:43.142Z",
    "end": "2023-08-04T06:17:30.039Z",
    "duration": 46897,
    "testsRegistered": 27,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e22283cd-8b08-4d71-bf0f-1613cd884374",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a0262bb8-4d1e-4995-8fbf-965084da1b81",
          "title": "Unusual Login --Landlord",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\alt_test_login.spec.js",
          "file": "\\test\\alt_test_login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Unusual Login --Landlord\"",
              "fullTitle": "Unusual Login --Landlord \"before all\" hook in \"Unusual Login --Landlord\"",
              "timedOut": false,
              "duration": 2590,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "landlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "e4ebeb70-2fb1-4c34-a215-6ace0b469a25",
              "parentUUID": "a0262bb8-4d1e-4995-8fbf-965084da1b81",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unusual Login --Landlord\"",
              "fullTitle": "Unusual Login --Landlord \"after all\" hook in \"Unusual Login --Landlord\"",
              "timedOut": false,
              "duration": 26,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.quit()",
              "err": {},
              "uuid": "a43eb845-0209-47d7-9c3a-78442ab63179",
              "parentUUID": "a0262bb8-4d1e-4995-8fbf-965084da1b81",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Unusual Login --Landlord Select Landlord Option",
              "timedOut": false,
              "duration": 1196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 500 });\n// In Landlord Login Page\nlet result = await landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "fc6f82de-0414-4018-9e92-d3b8e4249987",
              "parentUUID": "a0262bb8-4d1e-4995-8fbf-965084da1b81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Wrong login input --> Invalid email",
              "fullTitle": "Unusual Login --Landlord Wrong login input --> Invalid email",
              "timedOut": false,
              "duration": 572,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\nawait landlord_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('fake value');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 100 });\n// invalid input warning\nlet result = await landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[1]/div')).getText();\nassert.equal(\"Invalid email\", result);",
              "err": {},
              "uuid": "5dce1599-4931-42cf-a16c-dff698efa0d4",
              "parentUUID": "a0262bb8-4d1e-4995-8fbf-965084da1b81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Forget password",
              "fullTitle": "Unusual Login --Landlord Forget password",
              "timedOut": false,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n// click forget password\nawait landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[4]/a')).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 100 });\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ForgotPasswordPage', currentURL)",
              "err": {},
              "uuid": "bad64c49-0025-4930-8fe6-6aa8f7c792a2",
              "parentUUID": "a0262bb8-4d1e-4995-8fbf-965084da1b81",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc6f82de-0414-4018-9e92-d3b8e4249987",
            "5dce1599-4931-42cf-a16c-dff698efa0d4",
            "bad64c49-0025-4930-8fe6-6aa8f7c792a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1968,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "180a4801-e8fe-477d-8423-625732e343b2",
          "title": "Unusual Login --Tenant",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\alt_test_login.spec.js",
          "file": "\\test\\alt_test_login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Unusual Login --Tenant\"",
              "fullTitle": "Unusual Login --Tenant \"before all\" hook in \"Unusual Login --Tenant\"",
              "timedOut": false,
              "duration": 1840,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "4e4309e2-8c16-4d86-9428-f5f5b2597dfb",
              "parentUUID": "180a4801-e8fe-477d-8423-625732e343b2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unusual Login --Tenant\"",
              "fullTitle": "Unusual Login --Tenant \"after all\" hook in \"Unusual Login --Tenant\"",
              "timedOut": false,
              "duration": 31,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit()",
              "err": {},
              "uuid": "b197ce93-4d3c-4cef-a7dc-4428cdd09984",
              "parentUUID": "180a4801-e8fe-477d-8423-625732e343b2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Unusual Login --Tenant Select Tenant Option",
              "timedOut": false,
              "duration": 2042,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 500 });\n// In Tenant Login Page\nlet result = await tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "29483483-ff2f-498b-a289-91e7c838056e",
              "parentUUID": "180a4801-e8fe-477d-8423-625732e343b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Wrong login input --> Invalid email",
              "fullTitle": "Unusual Login --Tenant Wrong login input --> Invalid email",
              "timedOut": false,
              "duration": 530,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\nawait tenant_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('fake value');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 100 });\n// invalid input warning\nlet result = await tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[1]/div')).getText();\nassert.equal(\"Invalid email\", result);",
              "err": {},
              "uuid": "e1c33542-49d0-47d9-bbb6-04ba99829c95",
              "parentUUID": "180a4801-e8fe-477d-8423-625732e343b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "29483483-ff2f-498b-a289-91e7c838056e",
            "e1c33542-49d0-47d9-bbb6-04ba99829c95"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2572,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9fca6e3f-d8ee-4825-a651-214ecf14eca8",
          "title": "Login",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\landlord_test.spec.js",
          "file": "\\test\\landlord_test.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login\"",
              "fullTitle": "Login \"before all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 2360,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "6d7abcad-ea59-441d-b7eb-e7feb13a4d69",
              "parentUUID": "9fca6e3f-d8ee-4825-a651-214ecf14eca8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login\"",
              "fullTitle": "Login \"after all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 31,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "bc340a52-734d-4485-8084-13d8a796530d",
              "parentUUID": "9fca6e3f-d8ee-4825-a651-214ecf14eca8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Login Select Landlord Option",
              "timedOut": false,
              "duration": 1765,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\nawait driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait driver.manage().setTimeouts({ implicit: 500 });\n// In Landlord Login Page\nlet result = await driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2')).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "cde1ee5f-b0d7-4050-b19b-53c71c3acebb",
              "parentUUID": "9fca6e3f-d8ee-4825-a651-214ecf14eca8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Login Landlord login",
              "timedOut": false,
              "duration": 571,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\nawait driver.manage().setTimeouts({ implicit: 300 });\nawait driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('landlord1@gmail.com');\nawait driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('password');\nawait driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait driver.manage().setTimeouts({ implicit: 800 });\n// In Landlord Dashboard\nlet result = await driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/div[3]\")).isDisplayed();\nassert.equal(true, result);",
              "err": {},
              "uuid": "da070538-cde9-45a5-be57-dc6d04752c44",
              "parentUUID": "9fca6e3f-d8ee-4825-a651-214ecf14eca8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cde1ee5f-b0d7-4050-b19b-53c71c3acebb",
            "da070538-cde9-45a5-be57-dc6d04752c44"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2336,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "89d4370a-cf6e-42e9-b3b9-63b66d785507",
          "title": "Login",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\tenant_test.spec.js",
          "file": "\\test\\tenant_test.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login\"",
              "fullTitle": "Login \"before all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 1696,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "6051e5e3-c330-43bb-b28c-3c01efccf041",
              "parentUUID": "89d4370a-cf6e-42e9-b3b9-63b66d785507",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login\"",
              "fullTitle": "Login \"after all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 31,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "78a0c833-babf-4972-8f94-b3d54923a78f",
              "parentUUID": "89d4370a-cf6e-42e9-b3b9-63b66d785507",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Login Select Tenant Option",
              "timedOut": false,
              "duration": 1140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\nawait driver.manage().setTimeouts({implicit: 300});\n// In first page\nawait driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait driver.manage().setTimeouts({implicit: 500});\n// In Tenant Login Page\nlet result = await driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "a6941d05-48c9-4366-a54b-43a91f692654",
              "parentUUID": "89d4370a-cf6e-42e9-b3b9-63b66d785507",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Login Tenant login",
              "timedOut": false,
              "duration": 584,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/pages/LoginPage');\n  \nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n  \nawait driver.manage().setTimeouts({implicit: 300});\nawait driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('tenant1@gmail.com');\nawait driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('password');\nawait driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait driver.manage().setTimeouts({implicit: 800});\n// In Tenant Dashboard\nlet result =  await driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/div[3]\")).isDisplayed();\nassert.equal(true, result)",
              "err": {},
              "uuid": "d5132d8d-7ce4-4461-8ab5-78b70574d0a5",
              "parentUUID": "89d4370a-cf6e-42e9-b3b9-63b66d785507",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6941d05-48c9-4366-a54b-43a91f692654",
            "d5132d8d-7ce4-4461-8ab5-78b70574d0a5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1724,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "30b96d50-65ce-432c-a195-661bfb2ba339",
          "title": "Service Tickets",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\tenant_test.spec.js",
          "file": "\\test\\tenant_test.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Service Tickets\"",
              "fullTitle": "Service Tickets \"before all\" hook in \"Service Tickets\"",
              "timedOut": false,
              "duration": 1648,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "d2c5fd43-ce11-4199-8f34-b452929d55dc",
              "parentUUID": "30b96d50-65ce-432c-a195-661bfb2ba339",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Service Tickets\"",
              "fullTitle": "Service Tickets \"after all\" hook in \"Service Tickets\"",
              "timedOut": false,
              "duration": 28,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "ec3def13-a7e8-402f-8f0f-5f0eed28a3aa",
              "parentUUID": "30b96d50-65ce-432c-a195-661bfb2ba339",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Tenant View Service Tickets",
              "fullTitle": "Service Tickets Tenant View Service Tickets",
              "timedOut": false,
              "duration": 1891,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/pages/Dashboard/');\nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\nawait driver.manage().setTimeouts({implicit: 300});\n\n//TODO - tenant can view tickets",
              "err": {},
              "uuid": "9078d100-aebf-421a-8fa8-03b5f5282c93",
              "parentUUID": "30b96d50-65ce-432c-a195-661bfb2ba339",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Service Tickets Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 281,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/pages/CreateTicketPage/');\nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\nawait driver.manage().setTimeouts({implicit: 1000});\n //TODO - tenant can create tickets\n// // Location\n// await driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/form/div/div[1]/div[1]/textarea')).sendKeys(\"Next to escalator 2A\");\n// // Request Type\n// await driver.findElement(By.xpath(\"//*[@id='root']/div/div/form/div/div[1]/div[1]/div/div/svg\")).click();\n// await driver.manage().setTimeouts({implicit: 200});\n// await driver.findElement(By.xpath(\"//*[@id='root']/div/div/form/div/div[1]/div[1]/div/select/option[2]\")).click();\n// // Request Description\n// await driver.findElement(By.xpath(\"//*[@id='root']/div/div/form/div/div[1]/div[2]/textarea\")).sendKeys(\"Aircon is leaking\");\n// await driver.manage().setTimeouts({implicit: 200});\n// // Submit Button\n// await driver.findElement(By.xpath(\"//*[@id='root']/div/div/form/div/div[2]/button\")).click();\n\n// // await driver.manage().setTimeouts({implicit: 500});\n// // // In Ticket Creation\n// // let result =  await driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/div[3]\")).isDisplayed();\n// // assert.equal(true, result)\n// // awai",
              "err": {},
              "uuid": "c726aa7b-a99d-4e3d-b085-839810b4cb7f",
              "parentUUID": "30b96d50-65ce-432c-a195-661bfb2ba339",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9078d100-aebf-421a-8fa8-03b5f5282c93",
            "c726aa7b-a99d-4e3d-b085-839810b4cb7f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2172,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c9182741-36f1-495a-9fa0-07cb0ee30064",
          "title": "Successful/Usual Service Ticket Workflow",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\ticket_workflow.spec.js",
          "file": "\\test\\ticket_workflow.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"before all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 3893,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "ef56e318-0a99-46d0-ba51-62923d331b55",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "fullTitle": "Successful/Usual Service Ticket Workflow \"after all\" hook in \"Successful/Usual Service Ticket Workflow\"",
              "timedOut": false,
              "duration": 172,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "e3d3b575-e741-4f3e-bb25-228a33faa969",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Tenant Option",
              "timedOut": false,
              "duration": 1415,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n// In first page\nawait tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n// In Tenant Login Page\nlet result = await tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "86742e91-b2fb-41f1-9b17-a095d3d6e9ed",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Login",
              "timedOut": false,
              "duration": 713,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to landing page first\n// Reason is because we need to click the button to set user type\nawait tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n// In first page\nawait tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nawait tenant_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('tenant1@gmail.com');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('password');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"loginButton\"]')).click();\n\nawait tenant_driver.manage().setTimeouts({implicit: 800});\n// In Tenant Dashboard\nlet result =  await tenant_driver.findElement(By.xpath(\"//*[@id='emailText']\")).isDisplayed();\nassert.equal(true, result)",
              "err": {},
              "uuid": "ffb07dc9-d5c7-489c-8055-cd4850cec861",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Successful/Usual Service Ticket Workflow Select Landlord Option",
              "timedOut": false,
              "duration": 1308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to landing page\nawait landlord_driver.get('http://localhost:3000/');\n// Initial check\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 500 });\n// In Landlord Login Page\nlet result = await landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "371ff409-a8ee-4c6c-9098-f8dfae530188",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Login",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Login",
              "timedOut": false,
              "duration": 686,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to landing page first\n// Reason is because we need to click the button to set user type\nawait landlord_driver.get('http://localhost:3000/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n    \nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n    \n// In first page\nawait landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\nawait landlord_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('landlord1@gmail.com');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('password');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 800 });\n// In Landlord Dashboard\nlet result = await landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "9f92894a-4b37-4348-88b7-041c140afb22",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Service Tickets",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View Service Tickets",
              "timedOut": false,
              "duration": 383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst result = await tenant_driver.findElement(By.css('#ticketTable')).isDisplayed();\nassert.equal(true, result);",
              "err": {},
              "uuid": "2fad9097-3066-4e7a-b5e3-31ff47f7de03",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1592,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/CreateTicketPage/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n// Find the dropdown element by its CSS selector\nconst dropdownElement = await tenant_driver.findElement(By.css('select[name=\"requestType\"]'));\n// Click on the dropdown element to open the options list\nawait dropdownElement.click();\n// Find the desired option by its text and click on it\nconst optionLocator = By.xpath(`//select[@name=\"requestType\"]/option[text()=\"Aircon\"]`);\nawait tenant_driver.findElement(optionLocator).click();\nawait tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]')).sendKeys('Dummy Request Description');\n// Find the \"Submit\" button by its CSS selector\nconst submitButton = await tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'));\n// Click on the \"Submit\" button\nawait submitButton.click();\nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n// Check that we get redirected to dashboard\nawait tenant_driver.sleep(1000)\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "e8b47047-1e27-419d-9a5e-6c0a754f5469",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Created Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View Created Service Ticket",
              "timedOut": false,
              "duration": 3380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nawait tenant_driver.sleep(3000);\n    \n// Can find element but not visible\nconst result = await tenant_driver.findElement(By.xpath(\"//div[text()='Dummy Request Description']\")).isDisplayed();\nassert.equal(false, result);",
              "err": {},
              "uuid": "cea1d454-e575-4afe-b46a-354e648abed9",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Service Tickets",
              "timedOut": false,
              "duration": 507,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n\nawait landlord_driver.manage().setTimeouts({implicit: 300});\n//TODO - tenant can view tickets\nconst result = await landlord_driver.findElement(By.css('#ticketTable')).isDisplayed();\nassert.equal(true, result);",
              "err": {},
              "uuid": "9999b3cc-649c-41f7-bb07-67c4e088661c",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Created Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Created Service Ticket",
              "timedOut": false,
              "duration": 405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\n    \n// Can find element but not visible\nconst result = await landlord_driver.findElement(By.xpath(\"//div[text()='Dummy Request Description']\")).isDisplayed();\nassert.equal(false, result);",
              "err": {},
              "uuid": "578435a5-4aa3-41ff-80e0-abc27646daed",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 3301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)\nawait landlord_driver.sleep(2000)\nconst quotationCheckbox = landlord_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nconst approveButton = landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait landlord_driver.sleep(100)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)\nawait landlord_driver.sleep(300)",
              "err": {},
              "uuid": "f5d6545a-0108-4874-bd07-4836bc4b9115",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Upload Quotation",
              "timedOut": false,
              "duration": 3541,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.sleep(3000)\nawait landlord_driver.manage().setTimeouts({implicit: 300});\nconst goToQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", goToQuotationButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL)\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"))\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"))\nawait uploadButton.click()\nawait landlord_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "a3b45d21-e9ad-4e13-8d5c-38f1d3c339f2",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View & Approve Quotation",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant View & Approve Quotation",
              "timedOut": false,
              "duration": 813,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst goToQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", goToQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL)\nconst quotationCheckbox = tenant_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nconst approveButton = tenant_driver.findElement(By.xpath(\"//button[text()='Approve']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait tenant_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "7419505e-65ce-4b9b-8b54-03ca587605b3",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Start Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord Start Work",
              "timedOut": false,
              "duration": 1049,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "388d36cd-e79e-4a3e-9a1c-fb55a3e459fa",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord End Work",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord End Work",
              "timedOut": false,
              "duration": 954,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "0b0686dc-9d54-48b3-a76f-742f582ed790",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Tenant Give Feedback",
              "timedOut": false,
              "duration": 1396,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\nawait tenant_driver.sleep(200)\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\nawait tenant_driver.sleep(200);\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', currentURL)",
              "err": {},
              "uuid": "ff279a31-d495-455d-8e2e-afdde2ff66d4",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Successful/Usual Service Ticket Workflow Landlord View Feedback",
              "timedOut": false,
              "duration": 308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n\nconst result = await landlord_driver.findElement(By.xpath(\"//*[text()='Dummy Feedback Comment']\")).isDisplayed()\nassert.equal(true, result)",
              "err": {},
              "uuid": "6f2b0d1e-26ca-498f-b744-854dedb11349",
              "parentUUID": "c9182741-36f1-495a-9fa0-07cb0ee30064",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86742e91-b2fb-41f1-9b17-a095d3d6e9ed",
            "ffb07dc9-d5c7-489c-8055-cd4850cec861",
            "371ff409-a8ee-4c6c-9098-f8dfae530188",
            "9f92894a-4b37-4348-88b7-041c140afb22",
            "2fad9097-3066-4e7a-b5e3-31ff47f7de03",
            "e8b47047-1e27-419d-9a5e-6c0a754f5469",
            "cea1d454-e575-4afe-b46a-354e648abed9",
            "9999b3cc-649c-41f7-bb07-67c4e088661c",
            "578435a5-4aa3-41ff-80e0-abc27646daed",
            "f5d6545a-0108-4874-bd07-4836bc4b9115",
            "a3b45d21-e9ad-4e13-8d5c-38f1d3c339f2",
            "7419505e-65ce-4b9b-8b54-03ca587605b3",
            "388d36cd-e79e-4a3e-9a1c-fb55a3e459fa",
            "0b0686dc-9d54-48b3-a76f-742f582ed790",
            "ff279a31-d495-455d-8e2e-afdde2ff66d4",
            "6f2b0d1e-26ca-498f-b744-854dedb11349"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21751,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}