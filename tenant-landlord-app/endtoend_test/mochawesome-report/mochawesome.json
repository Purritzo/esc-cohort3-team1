{
  "stats": {
    "suites": 11,
    "tests": 106,
    "passes": 95,
    "pending": 0,
    "failures": 11,
    "start": "2023-08-10T09:13:27.891Z",
    "end": "2023-08-10T09:16:11.587Z",
    "duration": 163696,
    "testsRegistered": 106,
    "passPercent": 89.62264150943396,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1dd4c075-3367-49ed-832f-846be24aa756",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
          "title": "Successful Service Ticket Workflow (with quotation)",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\happy_wf_1.spec.js",
          "file": "\\test\\happy_wf_1.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful Service Ticket Workflow (with quotation)\"",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) \"before all\" hook in \"Successful Service Ticket Workflow (with quotation)\"",
              "timedOut": false,
              "duration": 4988,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "66c5182a-4e0c-4546-8c31-ba3c41aec487",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful Service Ticket Workflow (with quotation)\"",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) \"after all\" hook in \"Successful Service Ticket Workflow (with quotation)\"",
              "timedOut": false,
              "duration": 63,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "eb70ef3d-c3a7-4d15-aa15-b140f02c154e",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Select Tenant Option",
              "timedOut": false,
              "duration": 1103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "0a7282c2-1000-41bf-b11f-7b3ba6138275",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Tenant login",
              "timedOut": false,
              "duration": 463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n\n      let pw_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await tenant_driver.manage().setTimeouts({implicit: 1000});\n\n      // In Tenant Dashboard\n      let next_pg = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "c87fd39d-ff9a-4faa-b2af-c852b8c93a7a",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1581,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon is not cold\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "bb3603a8-b0c2-4d44-85e8-9f751dc519e6",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Select Landlord Option",
              "timedOut": false,
              "duration": 1130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "4fd5efa2-98ab-42f8-bbb7-7def5ed6e25d",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord login",
              "timedOut": false,
              "duration": 463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n  let email_in = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n  await email_in.sendKeys('landlord1@gmail.com');\n    \n  let pw_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n  await pw_in.sendKeys('password');\n\n  let submit_button = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n  await submit_button.click();\n\n  await landlord_driver.manage().setTimeouts({implicit: 1000});\n\n  // In Landlord Dashboard\n  let next_pg = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n  let result = await next_pg.getText();\n  assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "969dead5-b16a-4aa4-bd50-7fa08fcc1989",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord View Service Tickets",
              "timedOut": false,
              "duration": 267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await landlord_driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "4be3416d-ad6f-4a56-a0bb-8529a4d0e738",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket (Dropdown)",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord Select Service Ticket (Dropdown)",
              "timedOut": false,
              "duration": 1024,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Find ticket\nawait landlord_driver.manage().setTimeouts({implicit: 3000});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]/div/button\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);",
              "err": {},
              "uuid": "04b89ede-0261-4a69-a020-159b6d304201",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Self Assign Service Ticket",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord Self Assign Service Ticket",
              "timedOut": false,
              "duration": 6188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.manage().setTimeouts({implicit: 1000});\n//await landlord_driver.sleep(2000)\n// Click self assign button\nconst self_assign_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]/div/div/div/div/button'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", self_assign_button);\nawait landlord_driver.manage().setTimeouts({implicit: 2000});\n\n// Click landlord\nconst landlord_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"landlord1@gmail.com\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", landlord_button);\nawait landlord_driver.sleep(2000)\n// Click confirm assignment\nconst cfm_assignment = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"Confirm Assignment\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", cfm_assignment);\nawait landlord_driver.manage().setTimeouts({implicit: 1000});\nawait landlord_driver.sleep(2000)\n// Click view details and action\nconst view_details = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"View Details & Actions\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", view_details);\nawait landlord_driver.sleep(2000)\n// Enter new page\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "0b95069d-c1f3-4f37-a575-38e1fe4fc86b",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\nlet quotationCheckbox = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\n));\nlet approveButton = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\n));\nawait landlord_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait landlord_driver.sleep(100)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "e8947862-d82c-4a54-b6e5-6518b1763943",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord Upload Quotation",
              "timedOut": false,
              "duration": 1129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\nconst addQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", addQuotationButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL)\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"))\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"))\nawait uploadButton.click()\nawait landlord_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "ec9106b7-b413-433e-98fa-c8bb720e63bd",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Quotation",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Tenant View Quotation",
              "timedOut": false,
              "duration": 681,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst viewQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", viewQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL)",
              "err": {},
              "uuid": "920e53cc-c0ed-4e9f-8cf3-f2c82c54afa1",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Approve Quotation",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Tenant Approve Quotation",
              "timedOut": false,
              "duration": 292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\nconst quotationCheckbox = tenant_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nconst approveButton = tenant_driver.findElement(By.xpath(\"//button[text()='Approve']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait tenant_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "78fd77ec-3e55-4ec4-944d-a427fb99b79e",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Starts Work",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord Starts Work",
              "timedOut": false,
              "duration": 488,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 600});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='chakra-accordion css-0']/div[last()]\"}\n  (Session info: chrome=115.0.5790.171)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='chakra-accordion css-0']/div[last()]\"}\n  (Session info: chrome=115.0.5790.171)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\happy_wf_1.spec.js:284:5)",
                "diff": null
              },
              "uuid": "bdfedaaf-be9c-4b66-9ba9-09b4eead6f5a",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Ends Work",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord Ends Work",
              "timedOut": false,
              "duration": 484,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='chakra-accordion css-0']/div[last()]\"}\n  (Session info: chrome=115.0.5790.171)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='chakra-accordion css-0']/div[last()]\"}\n  (Session info: chrome=115.0.5790.171)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\happy_wf_1.spec.js:302:5)",
                "diff": null
              },
              "uuid": "3e87a2a4-5c23-4b11-af9e-220b2b015909",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Tenant Give Feedback",
              "timedOut": false,
              "duration": 1027,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\nawait tenant_driver.manage().setTimeouts({implicit: 200});\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\nawait tenant_driver.manage().setTimeouts({implicit: 200});\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', currentURL)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='Close Ticket & Give Feedback']\"}\n  (Session info: chrome=115.0.5790.171)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='Close Ticket & Give Feedback']\"}\n  (Session info: chrome=115.0.5790.171)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\happy_wf_1.spec.js:325:5)",
                "diff": null
              },
              "uuid": "e2208133-6681-41bf-a4e5-bed2b6d30222",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord View Feedback",
              "timedOut": false,
              "duration": 498,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]/div/button\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet result = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/div/div[1]/textarea'))\n  ));\nlet feedback = await result.getText();\nassert.equal(\"Dummy Feedback Comment\", feedback)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"root\"]/div/div/div[3]/div/div/div[1]/textarea\"}\n  (Session info: chrome=115.0.5790.171)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"root\"]/div/div/div[3]/div/div/div[1]/textarea\"}\n  (Session info: chrome=115.0.5790.171)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)",
                "diff": null
              },
              "uuid": "98a91cc6-76d0-43cb-a330-6985498f04fa",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Landlord Sign Out",
              "timedOut": false,
              "duration": 49,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n    let signout = await landlord_driver.wait(until.elementIsVisible(\n      landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n    ))\n    await signout.click();\n    await landlord_driver.manage().setTimeouts({implicit: 500});\n    // Check if ticket portal is shown\n    const currentURL = await landlord_driver.getCurrentUrl();\n    assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "72365840-c051-4c47-8b1c-c37bba5e5288",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Successful Service Ticket Workflow (with quotation) Tenant Sign Out",
              "timedOut": false,
              "duration": 49,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "5e39589a-7349-44e7-b99c-e8b22eb48561",
              "parentUUID": "2fe9b2f8-a237-4446-9faa-22c68bc2a85a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a7282c2-1000-41bf-b11f-7b3ba6138275",
            "c87fd39d-ff9a-4faa-b2af-c852b8c93a7a",
            "bb3603a8-b0c2-4d44-85e8-9f751dc519e6",
            "4fd5efa2-98ab-42f8-bbb7-7def5ed6e25d",
            "969dead5-b16a-4aa4-bd50-7fa08fcc1989",
            "4be3416d-ad6f-4a56-a0bb-8529a4d0e738",
            "04b89ede-0261-4a69-a020-159b6d304201",
            "0b95069d-c1f3-4f37-a575-38e1fe4fc86b",
            "e8947862-d82c-4a54-b6e5-6518b1763943",
            "ec9106b7-b413-433e-98fa-c8bb720e63bd",
            "920e53cc-c0ed-4e9f-8cf3-f2c82c54afa1",
            "78fd77ec-3e55-4ec4-944d-a427fb99b79e",
            "72365840-c051-4c47-8b1c-c37bba5e5288",
            "5e39589a-7349-44e7-b99c-e8b22eb48561"
          ],
          "failures": [
            "bdfedaaf-be9c-4b66-9ba9-09b4eead6f5a",
            "3e87a2a4-5c23-4b11-af9e-220b2b015909",
            "e2208133-6681-41bf-a4e5-bed2b6d30222",
            "98a91cc6-76d0-43cb-a330-6985498f04fa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 17104,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f5acf942-1436-43ff-980a-beb5c12988ad",
          "title": "Successful Service Ticket Workflow (without quotation)",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\happy_wf_2.spec.js",
          "file": "\\test\\happy_wf_2.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Successful Service Ticket Workflow (without quotation)\"",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) \"before all\" hook in \"Successful Service Ticket Workflow (without quotation)\"",
              "timedOut": false,
              "duration": 5178,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "d46c9078-ee05-49d1-a999-0b70f3856fe6",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Successful Service Ticket Workflow (without quotation)\"",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) \"after all\" hook in \"Successful Service Ticket Workflow (without quotation)\"",
              "timedOut": false,
              "duration": 62,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "dde36663-d293-4da3-b975-c649e710abaf",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Select Tenant Option",
              "timedOut": false,
              "duration": 1116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "688c52d5-c1d0-4184-80de-f1dac7e6024c",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Tenant login",
              "timedOut": false,
              "duration": 452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n\n      let pw_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await tenant_driver.manage().setTimeouts({implicit: 1000});\n\n      // In Tenant Dashboard\n      let next_pg = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "f6760378-ae2b-44fb-a9df-2c9f2cfc6a3e",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1557,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon is freezing\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "cd7913b4-f5e1-4d6e-964d-2fed3b553470",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Select Landlord Option",
              "timedOut": false,
              "duration": 1132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "7b834671-c803-43a5-a5d6-c0e18ea111ce",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord login",
              "timedOut": false,
              "duration": 468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\nlet email_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait email_in.sendKeys('landlord1@gmail.com');\n    \nlet pw_in = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\nawait pw_in.sendKeys('password');\n      \nlet submit_button = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\nawait submit_button.click();\n      \nawait landlord_driver.manage().setTimeouts({implicit: 1000});\n      \n// In Landlord Dashboard\nlet next_pg = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\nlet result = await next_pg.getText();\nassert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "57addebb-db19-4144-8c60-a29675698162",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord View Service Tickets",
              "timedOut": false,
              "duration": 262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n))\nawait ticket_list.click();\n  \n      // Check if ticket portal is shown\nconst currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "5f2f9009-15c2-4a85-b711-3600131d30bc",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket (Dropdown)",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord Select Service Ticket (Dropdown)",
              "timedOut": false,
              "duration": 1055,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Find ticket\nawait landlord_driver.manage().setTimeouts({implicit: 3000});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]/div/button\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);",
              "err": {},
              "uuid": "20010283-c62e-4617-bc16-8fda0622e109",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Self Assign Service Ticket",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord Self Assign Service Ticket",
              "timedOut": false,
              "duration": 6197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.manage().setTimeouts({implicit: 1000});\n//await landlord_driver.sleep(2000)\n// Click self assign button\nconst self_assign_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]/div/div/div/div/button'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", self_assign_button);\nawait landlord_driver.manage().setTimeouts({implicit: 2000});\n\n// Click landlord\nconst landlord_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"landlord1@gmail.com\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", landlord_button);\nawait landlord_driver.sleep(2000)\n// Click confirm assignment\nconst cfm_assignment = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"Confirm Assignment\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", cfm_assignment);\nawait landlord_driver.manage().setTimeouts({implicit: 1000});\nawait landlord_driver.sleep(2000)\n// Click view details and action\nconst view_details = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"View Details & Actions\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", view_details);\nawait landlord_driver.sleep(2000)\n// Enter new page\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "b0b18847-5a74-4264-ac5c-11c451214d8d",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\n  \nlet approveButton = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\n));\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\n  \nawait landlord_driver.sleep(100)\n  \ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "92d61202-c3a6-41cf-aa99-2a01cf0045d3",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Starts Work",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord Starts Work",
              "timedOut": false,
              "duration": 1446,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\n    \nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "2dcdfde4-0951-4feb-8737-dc0407790ec4",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Ends Work",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord Ends Work",
              "timedOut": false,
              "duration": 1531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\n    \nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "8542d5e9-1737-4e1f-b817-ab807722367a",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Tenant Give Feedback",
              "timedOut": false,
              "duration": 1332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\n    \nawait tenant_driver.sleep(200)\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\n    \nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\n    \nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\n    \nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\n    \nawait tenant_driver.sleep(200);\n    \ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', currentURL)",
              "err": {},
              "uuid": "514a435b-ec06-4aed-bbc3-a14d1dc39642",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord View Feedback",
              "timedOut": false,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nlet result = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/div/div[1]/textarea'))\n  ));\nlet feedback = await result.getText();\nassert.equal(\"Dummy Feedback Comment\", feedback)",
              "err": {},
              "uuid": "c9d7f355-6e63-4661-9052-def35fc57a70",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Landlord Sign Out",
              "timedOut": false,
              "duration": 49,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n    let signout = await landlord_driver.wait(until.elementIsVisible(\n      landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n    ))\n    await signout.click();\n    await landlord_driver.manage().setTimeouts({implicit: 500});\n\n    // Check if ticket portal is shown\n    const currentURL = await landlord_driver.getCurrentUrl();\n    assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "1b643228-5b3f-4d44-8003-b76a9dc9a440",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Successful Service Ticket Workflow (without quotation) Tenant Sign Out",
              "timedOut": false,
              "duration": 53,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n    \n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "78c85cb1-a473-4d2e-b3fc-7ecfd3068703",
              "parentUUID": "f5acf942-1436-43ff-980a-beb5c12988ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "688c52d5-c1d0-4184-80de-f1dac7e6024c",
            "f6760378-ae2b-44fb-a9df-2c9f2cfc6a3e",
            "cd7913b4-f5e1-4d6e-964d-2fed3b553470",
            "7b834671-c803-43a5-a5d6-c0e18ea111ce",
            "57addebb-db19-4144-8c60-a29675698162",
            "5f2f9009-15c2-4a85-b711-3600131d30bc",
            "20010283-c62e-4617-bc16-8fda0622e109",
            "b0b18847-5a74-4264-ac5c-11c451214d8d",
            "92d61202-c3a6-41cf-aa99-2a01cf0045d3",
            "2dcdfde4-0951-4feb-8737-dc0407790ec4",
            "8542d5e9-1737-4e1f-b817-ab807722367a",
            "514a435b-ec06-4aed-bbc3-a14d1dc39642",
            "c9d7f355-6e63-4661-9052-def35fc57a70",
            "1b643228-5b3f-4d44-8003-b76a9dc9a440",
            "78c85cb1-a473-4d2e-b3fc-7ecfd3068703"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16904,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "458d6d18-21a2-486a-b8e0-71186d3b0910",
          "title": "Landlord Lease",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\LAN_alt_lease.spec.js",
          "file": "\\test\\LAN_alt_lease.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"before all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 2602,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "ce6f1b78-bac6-4d7f-85ae-66dea41bdb15",
              "parentUUID": "458d6d18-21a2-486a-b8e0-71186d3b0910",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"after all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 23,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "9e01d940-7777-4e4a-96a1-1de5f103019a",
              "parentUUID": "458d6d18-21a2-486a-b8e0-71186d3b0910",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Landlord Lease Select Landlord Option",
              "timedOut": false,
              "duration": 1082,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\n  \nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet landlordButton = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n  \n// In Landlord Login Page\nlet loginText = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "1d9a54e8-58ec-48c2-805e-7abbb4847a50",
              "parentUUID": "458d6d18-21a2-486a-b8e0-71186d3b0910",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Landlord Lease Landlord login",
              "timedOut": false,
              "duration": 446,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('landlord1@gmail.com');\n\n      let pw_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await driver.manage().setTimeouts({implicit: 1000});\n\n      // In Landlord Dashboard\n      let next_pg = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "a910ea4d-1cef-4f33-9fa5-34d81c73f6b6",
              "parentUUID": "458d6d18-21a2-486a-b8e0-71186d3b0910",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord views Account Management",
              "fullTitle": "Landlord Lease Landlord views Account Management",
              "timedOut": false,
              "duration": 321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"Account MAnagement\"\nlet account_management = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n));\nawait account_management.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement\", currentURL);",
              "err": {},
              "uuid": "bb3d3b2b-2c80-425c-ad74-300b521ba659",
              "parentUUID": "458d6d18-21a2-486a-b8e0-71186d3b0910",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter create new tenant page",
              "fullTitle": "Landlord Lease Enter create new tenant page",
              "timedOut": false,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"create tenant\" button\nlet create_tenant_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div[1]/button'))\n));\nawait create_tenant_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "92e29c15-ff85-418b-b78b-b6d0d677c642",
              "parentUUID": "458d6d18-21a2-486a-b8e0-71186d3b0910",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create new tenant -- with same email as existing tenant",
              "fullTitle": "Landlord Lease Create new tenant -- with same email as existing tenant",
              "timedOut": false,
              "duration": 331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// input email and password\nlet email = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"email\"]'))\n));\nawait email.sendKeys(\"tenant1@gmail.com\");\nlet password = await driver.wait(until.elementIsVisible(\ndriver.findElement(By.xpath('//*[@id=\"password\"]'))\n));\nawait password.sendKeys(\"password\");\nlet create_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"loginButton\"]'))\n));\nawait create_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "9673ffae-2198-4b1c-8593-bdd1f93c8580",
              "parentUUID": "458d6d18-21a2-486a-b8e0-71186d3b0910",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d9a54e8-58ec-48c2-805e-7abbb4847a50",
            "a910ea4d-1cef-4f33-9fa5-34d81c73f6b6",
            "bb3d3b2b-2c80-425c-ad74-300b521ba659",
            "92e29c15-ff85-418b-b78b-b6d0d677c642",
            "9673ffae-2198-4b1c-8593-bdd1f93c8580"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2258,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c4bf172d-2bb2-4562-a0cd-7b336f37fc5e",
          "title": "Unusual Login --Landlord",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\LAN_alt_login.spec.js",
          "file": "\\test\\LAN_alt_login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Unusual Login --Landlord\"",
              "fullTitle": "Unusual Login --Landlord \"before all\" hook in \"Unusual Login --Landlord\"",
              "timedOut": false,
              "duration": 2627,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "landlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "acee835b-1bde-4afa-a4d4-4cbd0448cb32",
              "parentUUID": "c4bf172d-2bb2-4562-a0cd-7b336f37fc5e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unusual Login --Landlord\"",
              "fullTitle": "Unusual Login --Landlord \"after all\" hook in \"Unusual Login --Landlord\"",
              "timedOut": false,
              "duration": 23,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.quit()",
              "err": {},
              "uuid": "e05f8ffc-3aac-4cbf-ade6-e8515481487c",
              "parentUUID": "c4bf172d-2bb2-4562-a0cd-7b336f37fc5e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Unusual Login --Landlord Select Landlord Option",
              "timedOut": false,
              "duration": 1074,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\")).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 500 });\n// In Landlord Login Page\nlet result = await landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "40af82af-805d-4d1f-92cb-a6aa3eaaf5d5",
              "parentUUID": "c4bf172d-2bb2-4562-a0cd-7b336f37fc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Wrong login input --> Invalid email",
              "fullTitle": "Unusual Login --Landlord Wrong login input --> Invalid email",
              "timedOut": false,
              "duration": 475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\nawait landlord_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('fake value');\nawait landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 100 });\n// invalid input warning\nlet result = await landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[1]/div')).getText();\nassert.equal(\"Invalid email\", result);",
              "err": {},
              "uuid": "7bff8442-fbfb-4028-89de-501cb15a666c",
              "parentUUID": "c4bf172d-2bb2-4562-a0cd-7b336f37fc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Empty login input --> Password Required",
              "fullTitle": "Unusual Login --Landlord Empty login input --> Password Required",
              "timedOut": false,
              "duration": 285,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\nawait landlord_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait landlord_driver.manage().setTimeouts({ implicit: 500 });\n// Required warning\nlet result = await landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[2]/div[2]')).getText();\nassert.equal(\"Required\", result);",
              "err": {},
              "uuid": "09714993-daa5-4139-bbc5-6143218afd86",
              "parentUUID": "c4bf172d-2bb2-4562-a0cd-7b336f37fc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Forget password",
              "fullTitle": "Unusual Login --Landlord Forget password",
              "timedOut": false,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\nawait landlord_driver.manage().setTimeouts({ implicit: 300 });\n// click forget password\nawait landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[4]/a')).click();\nawait landlord_driver.manage().setTimeouts({ implicit: 100 });\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ForgotPasswordPage', currentURL)",
              "err": {},
              "uuid": "db285174-11e9-4ab5-9238-e955db2152d7",
              "parentUUID": "c4bf172d-2bb2-4562-a0cd-7b336f37fc5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40af82af-805d-4d1f-92cb-a6aa3eaaf5d5",
            "7bff8442-fbfb-4028-89de-501cb15a666c",
            "09714993-daa5-4139-bbc5-6143218afd86",
            "db285174-11e9-4ab5-9238-e955db2152d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2026,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5cdb7ec5-284c-40b8-8db7-82dec69c9156",
          "title": "Landlord filter ticket",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\LAN_filter_tickets.spec.js",
          "file": "\\test\\LAN_filter_tickets.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Landlord filter ticket\"",
              "fullTitle": "Landlord filter ticket \"before all\" hook in \"Landlord filter ticket\"",
              "timedOut": false,
              "duration": 5419,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();\ntenant_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "fc5e97bf-c95e-4372-a137-3ea28df25948",
              "parentUUID": "5cdb7ec5-284c-40b8-8db7-82dec69c9156",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Landlord filter ticket\"",
              "fullTitle": "Landlord filter ticket \"after all\" hook in \"Landlord filter ticket\"",
              "timedOut": false,
              "duration": 95,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await driver.quit()",
              "err": {},
              "uuid": "2f2094a6-5dc1-463c-88f0-958b346fbbfb",
              "parentUUID": "5cdb7ec5-284c-40b8-8db7-82dec69c9156",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Set up for testing -- tenant1@gmail.com",
              "fullTitle": "Landlord filter ticket Set up for testing -- tenant1@gmail.com",
              "timedOut": false,
              "duration": 3148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\n// Sign in details: email, password, button\nlet email_in = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait email_in.sendKeys('tenant1@gmail.com');\n    \nlet pw_in = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\nawait pw_in.sendKeys('password');\n    \nlet submit_button = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\nawait submit_button.click();\n    \nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n\n// Click on \"Create Service Ticket\"\nlet create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n));\nawait create_service_ticket.click();\n    \n    \nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n    \n// Request Type\nlet req_type = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n));\nawait req_type.click();\nlet sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n));\nawait sel_dropdown.click();\n    \n// Request Description\nlet description= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n));\nawait description.sendKeys(\"Aircon is leaking\");\nawait tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n    \n// Submit Button\nlet submit= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n));\nawait submit.click();\n    \nawait tenant_driver.sleep(1000)\nawait tenant_driver.manage().setTimeouts({implicit: 2000});\n    \n// Check if it enters dashboard again\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/Dashboard', currentURL);\n// Sign out\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});",
              "err": {},
              "uuid": "0e4c96bd-5107-4be4-b62b-1f9af3abb19d",
              "parentUUID": "5cdb7ec5-284c-40b8-8db7-82dec69c9156",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Set up for testing -- tenant2@gmail.com",
              "fullTitle": "Landlord filter ticket Set up for testing -- tenant2@gmail.com",
              "timedOut": false,
              "duration": 2072,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\n// Sign in details: email, password, button\nlet email_in = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait email_in.sendKeys('tenant2@gmail.com');\n    \nlet pw_in = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\nawait pw_in.sendKeys('password');\n    \nlet submit_button = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\nawait submit_button.click();\n    \nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n\n// Click on \"Create Service Ticket\"\nlet create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n));\nawait create_service_ticket.click();\n    \n    \nawait tenant_driver.manage().setTimeouts({implicit: 1000});\n    \n// Request Type\nlet req_type = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n));\nawait req_type.click();\nlet sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n));\nawait sel_dropdown.click();\n    \n// Request Description\nlet description= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n));\nawait description.sendKeys(\"Aircon is not cold\");\nawait tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n    \n// Submit Button\nlet submit= await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n));\nawait submit.click();\n    \nawait tenant_driver.sleep(1000)\nawait tenant_driver.manage().setTimeouts({implicit: 2000});\n    \n// Check if it enters dashboard again\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/Dashboard', currentURL);\n// Sign out\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});",
              "err": {},
              "uuid": "99ef3a7e-50bb-4149-b4af-48fe2b751f8c",
              "parentUUID": "5cdb7ec5-284c-40b8-8db7-82dec69c9156",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Landlord filter ticket Select Landlord Option",
              "timedOut": false,
              "duration": 1079,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\n  \nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet landlordButton = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n  \n// In Landlord Login Page\nlet loginText = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "f0cbaee9-09d7-4e4f-9c2d-20fc521ad23e",
              "parentUUID": "5cdb7ec5-284c-40b8-8db7-82dec69c9156",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Landlord filter ticket Landlord login",
              "timedOut": false,
              "duration": 446,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('landlord1@gmail.com');\n\n      let pw_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await driver.manage().setTimeouts({implicit: 1000});\n\n      // In Landlord Dashboard\n      let next_pg = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "3b886fda-4ba1-497b-8c6f-01a0c0730e99",
              "parentUUID": "5cdb7ec5-284c-40b8-8db7-82dec69c9156",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Landlord filter ticket Landlord View Service Tickets",
              "timedOut": false,
              "duration": 259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n))\nawait ticket_list.click();\n  \n// Check if ticket portal is shown\nconst currentURL = await driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "b4744e4b-c4dd-49c1-a709-dd52f41041e0",
              "parentUUID": "5cdb7ec5-284c-40b8-8db7-82dec69c9156",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter by Requester",
              "fullTitle": "Landlord filter ticket Filter by Requester",
              "timedOut": false,
              "duration": 5586,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let search_requester = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div/input'))\n));\nawait driver.sleep(1000)\nawait search_requester.sendKeys(\"tenant1@gmail.com\")\nawait driver.sleep(1000)\nawait driver.manage().setTimeouts({ implicit: 500 });\n// Find ticket\nconst lastTicket = driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"));\nawait driver.executeScript(\"arguments[0].click();\", lastTicket);\nawait driver.manage().setTimeouts({ implicit: 500 });\nconst last_requester = driver.findElement(By.xpath('//*[@id=\"accordion-button-:r0:\"]/div/div[2]'))\nawait driver.sleep(2000)\nawait driver.wait(until.elementIsVisible(last_requester))\nconst text = await last_requester.getText();\nassert.equal('tenant1@gmail.com', text);\n// Return back to normal\nlet clear_button =  await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div/div/button'))));\nawait clear_button.click();",
              "err": {},
              "uuid": "57942071-c162-4f9e-8a1d-2d1d53774981",
              "parentUUID": "5cdb7ec5-284c-40b8-8db7-82dec69c9156",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter by Status (Created)",
              "fullTitle": "Landlord filter ticket Filter by Status (Created)",
              "timedOut": false,
              "duration": 6598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let search_requester = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[4]/div/select'))\n));\nawait driver.sleep(1000)\nawait search_requester.click();\nawait driver.sleep(1000)\nlet click_status = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[4]/div/select/option[2]'))\n));\nawait click_status.click();\nawait driver.sleep(2000)\nconst last_requester = driver.findElement(By.xpath('//*[@id=\"accordion-button-:r0:\"]/div/div[4]'))\n\nawait driver.wait(until.elementIsVisible(last_requester))\nconst text = await last_requester.getText();\nassert.equal('Created', text);\n// Return back to normal\nlet search_requester_return = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[4]/div/select'))\n));\nawait driver.sleep(1000)\nawait search_requester_return.click();\nawait driver.sleep(1000)\nlet click_status_return = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[4]/div/select/option[1]'))\n));\nawait click_status_return.click();",
              "err": {},
              "uuid": "5c49a15c-c25a-4c19-aa29-b042d18aa49d",
              "parentUUID": "5cdb7ec5-284c-40b8-8db7-82dec69c9156",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Landlord filter ticket Landlord Sign Out",
              "timedOut": false,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n      let signout = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n      ))\n      await signout.click();\n      await driver.manage().setTimeouts({implicit: 500});\n      // Check if ticket portal is shown\n      const currentURL = await driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "a7c1bee0-8043-4491-9f4a-b4b6230ca060",
              "parentUUID": "5cdb7ec5-284c-40b8-8db7-82dec69c9156",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e4c96bd-5107-4be4-b62b-1f9af3abb19d",
            "99ef3a7e-50bb-4149-b4af-48fe2b751f8c",
            "f0cbaee9-09d7-4e4f-9c2d-20fc521ad23e",
            "3b886fda-4ba1-497b-8c6f-01a0c0730e99",
            "b4744e4b-c4dd-49c1-a709-dd52f41041e0",
            "57942071-c162-4f9e-8a1d-2d1d53774981",
            "5c49a15c-c25a-4c19-aa29-b042d18aa49d",
            "a7c1bee0-8043-4491-9f4a-b4b6230ca060"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19274,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f8ec3b73-ee38-43c5-98d6-51a27694d934",
          "title": "Landlord Lease",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\LAN_lease.spec.js",
          "file": "\\test\\LAN_lease.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"before all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 2601,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "c869f4fd-23b5-4175-84e8-752ae07fdc30",
              "parentUUID": "f8ec3b73-ee38-43c5-98d6-51a27694d934",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Landlord Lease\"",
              "fullTitle": "Landlord Lease \"after all\" hook in \"Landlord Lease\"",
              "timedOut": false,
              "duration": 44,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "c905f508-c1e3-4ece-8567-306c1cab17a1",
              "parentUUID": "f8ec3b73-ee38-43c5-98d6-51a27694d934",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Landlord Option",
              "fullTitle": "Landlord Lease Select Landlord Option",
              "timedOut": false,
              "duration": 1072,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\n  \nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet landlordButton = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n  \n// In Landlord Login Page\nlet loginText = await driver.wait(until.elementIsVisible(\n    driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "b7315d25-49c8-44a6-a27f-afe2cffab40e",
              "parentUUID": "f8ec3b73-ee38-43c5-98d6-51a27694d934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Landlord Lease Landlord login",
              "timedOut": false,
              "duration": 453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('landlord1@gmail.com');\n\n      let pw_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await driver.manage().setTimeouts({implicit: 1000});\n\n      // In Landlord Dashboard\n      let next_pg = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "065345f4-e7e3-40b1-9db8-2d53adeeffa0",
              "parentUUID": "f8ec3b73-ee38-43c5-98d6-51a27694d934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord views Account Management",
              "fullTitle": "Landlord Lease Landlord views Account Management",
              "timedOut": false,
              "duration": 331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"Account MAnagement\"\nlet account_management = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n));\nawait account_management.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement\", currentURL);",
              "err": {},
              "uuid": "b55d5a58-c348-4ce7-8434-a8657a9128d6",
              "parentUUID": "f8ec3b73-ee38-43c5-98d6-51a27694d934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter create new tenant page",
              "fullTitle": "Landlord Lease Enter create new tenant page",
              "timedOut": false,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click \"create tenant\" button\nlet create_tenant_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div[1]/button'))\n));\nawait create_tenant_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "e0666316-0f8e-4a45-941b-ba57fdc6afb1",
              "parentUUID": "f8ec3b73-ee38-43c5-98d6-51a27694d934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create new tenant",
              "fullTitle": "Landlord Lease Create new tenant",
              "timedOut": false,
              "duration": 352,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// input email and password\nlet email = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"email\"]'))\n));\nawait email.sendKeys(\"newtenant2@gmail.com\");\nlet password = await driver.wait(until.elementIsVisible(\ndriver.findElement(By.xpath('//*[@id=\"password\"]'))\n));\nawait password.sendKeys(\"password\");\nlet create_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"loginButton\"]'))\n));\nawait create_button.click();\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/TenantCreationPage\", currentURL);",
              "err": {},
              "uuid": "01c5e10d-6b6e-488c-9df0-f60c6d8436aa",
              "parentUUID": "f8ec3b73-ee38-43c5-98d6-51a27694d934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Find new tenant in Tenant Details table",
              "fullTitle": "Landlord Lease Find new tenant in Tenant Details table",
              "timedOut": false,
              "duration": 2125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1000)\nlet new_tenant = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[contains(text(), \"newtenant2@gmail.com\")]'))\n));\nawait driver.executeScript(\"arguments[0].click();\", new_tenant);\nawait driver.sleep(1000)\nlet new_lease = await driver.findElement(By.xpath('//*[contains(text(), \"New Lease\")]'))\nawait driver.executeScript(\"arguments[0].click();\", new_lease);\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/LeaseUploadPage/\", currentURL);",
              "err": {},
              "uuid": "014a6cd1-6e73-443b-838a-330a4713a3a5",
              "parentUUID": "f8ec3b73-ee38-43c5-98d6-51a27694d934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Lease upload",
              "fullTitle": "Landlord Lease Lease upload",
              "timedOut": false,
              "duration": 1357,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Add floor, unit number, file\nlet floor = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"floor\"]'))\n));\nawait floor.sendKeys(\"01\");\nlet unit_number = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"unit_number\"]'))\n));\nawait unit_number.sendKeys(\"123\");\nlet chooseFileButton = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"files\"]'))\n));\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nlet upalod_lease_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"UploadButton\"]'))\n));\nawait upalod_lease_button.click();\nawait driver.manage().setTimeouts({implicit: 500});\nawait driver.sleep(1000)\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/ViewLeasePage/\", currentURL);\n\n// Click next button\nlet next_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div/div/button[2]'))\n));\nawait driver.executeScript(\"arguments[0].click();\", next_button);\nconst nextURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement/\", nextURL);",
              "err": {},
              "uuid": "ee8bc0b8-37ae-4127-a56e-77548b4afc38",
              "parentUUID": "f8ec3b73-ee38-43c5-98d6-51a27694d934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "View lease",
              "fullTitle": "Landlord Lease View lease",
              "timedOut": false,
              "duration": 1208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1000)\nlet new_tenant = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[contains(text(), \"newtenant2@gmail.com\")]'))\n));\nlet view_lease = await driver.findElement(By.xpath('//*[contains(text(), \"View Lease\")]'));\n\nawait driver.executeScript(\"arguments[0].click();\", new_tenant);\nawait driver.executeScript(\"arguments[0].click();\", view_lease);\nconst currentURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/ViewLeasePage/\", currentURL);\n// Click next button\nlet next_button = await driver.wait(until.elementIsVisible(\n  driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[2]/div/div/button[2]'))\n));\nawait driver.executeScript(\"arguments[0].click();\", next_button);\nconst nextURL = await driver.getCurrentUrl();\nassert.equal(\"http://localhost:3000/pages/AccountManagement/\", nextURL);",
              "err": {},
              "uuid": "3c9aef7a-eefd-4c5d-a158-205b842132d3",
              "parentUUID": "f8ec3b73-ee38-43c5-98d6-51a27694d934",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7315d25-49c8-44a6-a27f-afe2cffab40e",
            "065345f4-e7e3-40b1-9db8-2d53adeeffa0",
            "b55d5a58-c348-4ce7-8434-a8657a9128d6",
            "e0666316-0f8e-4a45-941b-ba57fdc6afb1",
            "01c5e10d-6b6e-488c-9df0-f60c6d8436aa",
            "014a6cd1-6e73-443b-838a-330a4713a3a5",
            "ee8bc0b8-37ae-4127-a56e-77548b4afc38",
            "3c9aef7a-eefd-4c5d-a158-205b842132d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6974,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2729c671-2b8d-451f-a9b6-95e439c13bd2",
          "title": "Unusual Login --Tenant",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\TEN_alt_login.spec.js",
          "file": "\\test\\TEN_alt_login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Unusual Login --Tenant\"",
              "fullTitle": "Unusual Login --Tenant \"before all\" hook in \"Unusual Login --Tenant\"",
              "timedOut": false,
              "duration": 5425,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nchrome_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "68460bdb-a88e-48c2-bebd-1a5e4f1251f1",
              "parentUUID": "2729c671-2b8d-451f-a9b6-95e439c13bd2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unusual Login --Tenant\"",
              "fullTitle": "Unusual Login --Tenant \"after all\" hook in \"Unusual Login --Tenant\"",
              "timedOut": false,
              "duration": 84,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await chrome_driver.quit()",
              "err": {},
              "uuid": "72738c09-b3cc-454f-94fb-1e6a9828fa0d",
              "parentUUID": "2729c671-2b8d-451f-a9b6-95e439c13bd2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Unusual Login --Tenant Select Tenant Option",
              "timedOut": false,
              "duration": 1247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\n// In first page\nawait tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[1]\")).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 500 });\n// In Tenant Login Page\nlet result = await tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\")).getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "0af9db3b-31d8-467b-8041-e846e4fa7cb1",
              "parentUUID": "2729c671-2b8d-451f-a9b6-95e439c13bd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Wrong login input --> Invalid email",
              "fullTitle": "Unusual Login --Tenant Wrong login input --> Invalid email",
              "timedOut": false,
              "duration": 620,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\nawait tenant_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"password\"]')).sendKeys('fake value');\nawait tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[3]')).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 100 });\n// invalid input warning\nlet result = await tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[1]/div')).getText();\nassert.equal(\"Invalid email\", result);",
              "err": {},
              "uuid": "23b3aad7-488c-48c7-9bda-7d0aa6b77f25",
              "parentUUID": "2729c671-2b8d-451f-a9b6-95e439c13bd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Empty login input --> Password Required",
              "fullTitle": "Unusual Login --Tenant Empty login input --> Password Required",
              "timedOut": false,
              "duration": 411,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\nawait tenant_driver.findElement(By.xpath('//*[@id=\"email\"]')).sendKeys('fake value');\nawait tenant_driver.manage().setTimeouts({ implicit: 500 });\n// Required warning\nlet result = await tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[2]/div[2]')).getText();\nassert.equal(\"Required\", result);",
              "err": {},
              "uuid": "74ba3077-4a60-4d56-b161-a50fc9a0b4ee",
              "parentUUID": "2729c671-2b8d-451f-a9b6-95e439c13bd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Forget password page",
              "fullTitle": "Unusual Login --Tenant Forget password page",
              "timedOut": false,
              "duration": 283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/LoginPage');\nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\nawait tenant_driver.manage().setTimeouts({ implicit: 300 });\n// click forget password\nawait tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/div[4]/a')).click();\nawait tenant_driver.manage().setTimeouts({ implicit: 100 });\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ForgotPasswordPage', currentURL)",
              "err": {},
              "uuid": "a5863ef9-1897-4647-b77e-6aa0ed129dc9",
              "parentUUID": "2729c671-2b8d-451f-a9b6-95e439c13bd2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0af9db3b-31d8-467b-8041-e846e4fa7cb1",
            "23b3aad7-488c-48c7-9bda-7d0aa6b77f25",
            "74ba3077-4a60-4d56-b161-a50fc9a0b4ee",
            "a5863ef9-1897-4647-b77e-6aa0ed129dc9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2561,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "130aff4c-efa2-419b-8bc9-0c083258bbf6",
          "title": "Login",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\TEN_create_ticket.spec.js",
          "file": "\\test\\TEN_create_ticket.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login\"",
              "fullTitle": "Login \"before all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 2904,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "d307b573-f36d-4781-aa24-01bec88b27f9",
              "parentUUID": "130aff4c-efa2-419b-8bc9-0c083258bbf6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login\"",
              "fullTitle": "Login \"after all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 21,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "19387ed9-1120-4ac7-b002-ee1a36692777",
              "parentUUID": "130aff4c-efa2-419b-8bc9-0c083258bbf6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Login Select Tenant Option",
              "timedOut": false,
              "duration": 1189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/');\nlet title = await driver.getTitle();\nassert.equal(\"React App\", title);\n// In first page\nlet tenantButton = await driver.wait(until.elementIsVisible(driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n// In Tenant Login Page\nlet loginText = await driver.wait(until.elementIsVisible(driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "f288f1a0-8cbf-4758-9103-4442ba80fae8",
              "parentUUID": "130aff4c-efa2-419b-8bc9-0c083258bbf6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Login Tenant login",
              "timedOut": false,
              "duration": 581,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n      let pw_in = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n      let submit_button = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n       await driver.manage().setTimeouts({implicit: 1000});\n      // In Tenant Dashboard\n      let next_pg = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "3ba6da16-75ea-4781-9fda-a10eae5ce783",
              "parentUUID": "130aff4c-efa2-419b-8bc9-0c083258bbf6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Service Tickets",
              "fullTitle": "Login Tenant View Service Tickets",
              "timedOut": false,
              "duration": 802,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n      let ticket_list = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "fe55a00d-76f7-4540-aaf7-a632493fb2ef",
              "parentUUID": "130aff4c-efa2-419b-8bc9-0c083258bbf6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Login Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1628,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n      let create_service_ticket = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n      ))\n      await create_service_ticket.click();\n      await driver.manage().setTimeouts({implicit: 1000});\n      // Request Type\n      let req_type = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n      ));\n      await req_type.click();\n      let sel_dropdown= await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n      ));\n      await sel_dropdown.click();\n      // Request Description\n      let description= await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n      ));\n      await description.sendKeys(\"Aircon is leaking\");\n      await driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n      // Submit Button\n      let submit= await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n      ));\n      await submit.click();\n        \n      await driver.sleep(1000)\n      await driver.manage().setTimeouts({implicit: 2000});\n      // Check if it enters dashboard again\n      const currentURL = await driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "4a640e85-53af-4bda-99a4-6ee46e914f83",
              "parentUUID": "130aff4c-efa2-419b-8bc9-0c083258bbf6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sign Out",
              "fullTitle": "Login Sign Out",
              "timedOut": false,
              "duration": 50,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n      let signout = await driver.wait(until.elementIsVisible(\n        driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n      ))\n      await signout.click();\n      await driver.manage().setTimeouts({implicit: 500});\n  \n      // Check if ticket portal is shown\n      const currentURL = await driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "3806bb90-baee-41b3-bde4-87e0b051d50e",
              "parentUUID": "130aff4c-efa2-419b-8bc9-0c083258bbf6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f288f1a0-8cbf-4758-9103-4442ba80fae8",
            "3ba6da16-75ea-4781-9fda-a10eae5ce783",
            "fe55a00d-76f7-4540-aaf7-a632493fb2ef",
            "4a640e85-53af-4bda-99a4-6ee46e914f83",
            "3806bb90-baee-41b3-bde4-87e0b051d50e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4250,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "553d1a21-b6d3-4632-9e4a-a61a2dce8253",
          "title": "Tenant Filter Tickets",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\TEN_filter.spec.js",
          "file": "\\test\\TEN_filter.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Tenant Filter Tickets\"",
              "fullTitle": "Tenant Filter Tickets \"before all\" hook in \"Tenant Filter Tickets\"",
              "timedOut": false,
              "duration": 2787,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "47f285a6-5f92-43eb-a549-0f9243c39741",
              "parentUUID": "553d1a21-b6d3-4632-9e4a-a61a2dce8253",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Tenant Filter Tickets\"",
              "fullTitle": "Tenant Filter Tickets \"after all\" hook in \"Tenant Filter Tickets\"",
              "timedOut": false,
              "duration": 26,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit();",
              "err": {},
              "uuid": "b55805fa-8815-4099-a665-ca662b9a3834",
              "parentUUID": "553d1a21-b6d3-4632-9e4a-a61a2dce8253",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Tenant Filter Tickets Select Tenant Option",
              "timedOut": false,
              "duration": 1232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "38566316-e368-4973-b126-d2958a6964d3",
              "parentUUID": "553d1a21-b6d3-4632-9e4a-a61a2dce8253",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Tenant Filter Tickets Tenant login",
              "timedOut": false,
              "duration": 558,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n\n      let pw_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await tenant_driver.manage().setTimeouts({implicit: 1000});\n\n      // In Tenant Dashboard\n      let next_pg = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "b29e9b32-5475-4f7e-95de-aa6323998842",
              "parentUUID": "553d1a21-b6d3-4632-9e4a-a61a2dce8253",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket -- Aircon",
              "fullTitle": "Tenant Filter Tickets Tenant Create Service Ticket -- Aircon",
              "timedOut": false,
              "duration": 1692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon is freezing\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "e6650c4c-0562-41b3-a887-08f76161a0af",
              "parentUUID": "553d1a21-b6d3-4632-9e4a-a61a2dce8253",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket -- Cleanliness",
              "fullTitle": "Tenant Filter Tickets Tenant Create Service Ticket -- Cleanliness",
              "timedOut": false,
              "duration": 1491,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[3]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"The area is quite dirty\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "d9d84f6b-7bb1-4477-9ad3-14279f6464a5",
              "parentUUID": "553d1a21-b6d3-4632-9e4a-a61a2dce8253",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ticket type filter",
              "fullTitle": "Tenant Filter Tickets check ticket type filter",
              "timedOut": false,
              "duration": 1601,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// await tenant_driver.sleep(1000);\nawait tenant_driver.get('http://localhost:3000/pages/TicketList');\n  \nlet search_requester = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/input'))\n));\nawait search_requester.sendKeys(\"Cleanliness\");\nlet last_requester = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"accordion-button-:r0:\"]/div/div[3]'))\n  ));\nlet text = await last_requester.getText();\nassert.equal('Cleanliness', text);\n// Return back to normal\nlet clear_button =  await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/div/button'))));\nawait clear_button.click();",
              "err": {},
              "uuid": "60b5e634-5b33-4feb-a4bb-0967ac382dfd",
              "parentUUID": "553d1a21-b6d3-4632-9e4a-a61a2dce8253",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Tenant Filter Tickets Tenant Sign Out",
              "timedOut": false,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n  \n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "0cde3d6a-ac9d-4141-89cb-90c0da451f73",
              "parentUUID": "553d1a21-b6d3-4632-9e4a-a61a2dce8253",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38566316-e368-4973-b126-d2958a6964d3",
            "b29e9b32-5475-4f7e-95de-aa6323998842",
            "e6650c4c-0562-41b3-a887-08f76161a0af",
            "d9d84f6b-7bb1-4477-9ad3-14279f6464a5",
            "60b5e634-5b33-4feb-a4bb-0967ac382dfd",
            "0cde3d6a-ac9d-4141-89cb-90c0da451f73"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6652,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "34820eb1-a4cc-43dd-8da8-98651778d766",
          "title": "Service Ticket Workflow -- Landlord Rejects Ticket",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\wf_1.spec.js",
          "file": "\\test\\wf_1.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket \"before all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "timedOut": false,
              "duration": 6200,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "60e36eda-b0be-41aa-b576-ffb1e2ee1f34",
              "parentUUID": "34820eb1-a4cc-43dd-8da8-98651778d766",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket \"after all\" hook in \"Service Ticket Workflow -- Landlord Rejects Ticket\"",
              "timedOut": false,
              "duration": 75,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "47c75f31-bbf2-470c-827d-c547891f2cb7",
              "parentUUID": "34820eb1-a4cc-43dd-8da8-98651778d766",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Select Tenant Option",
              "timedOut": false,
              "duration": 1352,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "d00a5d8a-4e12-4097-8baa-ea9c1efc334b",
              "parentUUID": "34820eb1-a4cc-43dd-8da8-98651778d766",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant login",
              "timedOut": false,
              "duration": 665,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\nlet email_in = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\nawait email_in.sendKeys('tenant1@gmail.com');\n  \nlet pw_in = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\nawait pw_in.sendKeys('password');\n  \nlet submit_button = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\nawait submit_button.click();\n  \n await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n// In Tenant Dashboard\nlet next_pg = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\nlet result = await next_pg.getText();\nassert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "9d658ea4-5024-4237-95ce-5634c4d1ab9f",
              "parentUUID": "34820eb1-a4cc-43dd-8da8-98651778d766",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 2091,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon not clean, I demand a cleaning robot\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "670b8d1d-3258-44d4-9ed3-a647de7b1ffb",
              "parentUUID": "34820eb1-a4cc-43dd-8da8-98651778d766",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Select Landlord Option",
              "timedOut": false,
              "duration": 1453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "26a8730c-b9ef-468c-8238-564e2922d7b6",
              "parentUUID": "34820eb1-a4cc-43dd-8da8-98651778d766",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord login",
              "timedOut": false,
              "duration": 669,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n  let email_in = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n  await email_in.sendKeys('landlord1@gmail.com');\n    \n  let pw_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n  await pw_in.sendKeys('password');\n\n  let submit_button = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n  await submit_button.click();\n\n  await landlord_driver.manage().setTimeouts({implicit: 1000});\n\n  // In Landlord Dashboard\n  let next_pg = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n  let result = await next_pg.getText();\n  assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "eb2822aa-9dda-4741-84c5-94be728a5099",
              "parentUUID": "34820eb1-a4cc-43dd-8da8-98651778d766",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord View Service Tickets",
              "timedOut": false,
              "duration": 397,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await landlord_driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "5bb4f825-9402-46eb-bb82-c2e6184cf3e2",
              "parentUUID": "34820eb1-a4cc-43dd-8da8-98651778d766",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket (Dropdown)",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord Select Service Ticket (Dropdown)",
              "timedOut": false,
              "duration": 1609,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Find ticket\nawait landlord_driver.manage().setTimeouts({implicit: 3000});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]/div/button\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);",
              "err": {},
              "uuid": "4c85bd9e-6c90-4a70-8094-a2b72d402050",
              "parentUUID": "34820eb1-a4cc-43dd-8da8-98651778d766",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Self Assign Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord Self Assign Service Ticket",
              "timedOut": false,
              "duration": 6232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.manage().setTimeouts({implicit: 1000});\n//await landlord_driver.sleep(2000)\n// Click self assign button\nconst self_assign_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]/div/div/div/div/button'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", self_assign_button);\nawait landlord_driver.manage().setTimeouts({implicit: 2000});\n\n// Click landlord\nconst landlord_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"landlord1@gmail.com\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", landlord_button);\nawait landlord_driver.sleep(2000)\n// Click confirm assignment\nconst cfm_assignment = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"Confirm Assignment\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", cfm_assignment);\nawait landlord_driver.manage().setTimeouts({implicit: 1000});\nawait landlord_driver.sleep(2000)\n// Click view details and action\nconst view_details = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"View Details & Actions\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", view_details);\nawait landlord_driver.sleep(2000)\n// Enter new page\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "ef90dbb4-6f16-4e28-b61a-418fa1ad3ed1",
              "parentUUID": "34820eb1-a4cc-43dd-8da8-98651778d766",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Reject Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord Reject Service Ticket",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const rejectButton = landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div[3]/button[2]\"));\nawait landlord_driver.executeScript(\"arguments[0].click();\", rejectButton);\n  \ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "74f43e2a-88a9-40db-af6b-e42451b7526a",
              "parentUUID": "34820eb1-a4cc-43dd-8da8-98651778d766",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Ticket",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant View Ticket",
              "timedOut": false,
              "duration": 912,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\n    \nawait tenant_driver.manage().setTimeouts({implicit: 300});\n    \nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\n    \nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "f10d78ce-8075-415c-8263-784913136272",
              "parentUUID": "34820eb1-a4cc-43dd-8da8-98651778d766",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Landlord Sign Out",
              "timedOut": false,
              "duration": 528,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\n        let signout = await landlord_driver.wait(until.elementIsVisible(\n          landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n        ));\n        await signout.click();\n        await landlord_driver.manage().setTimeouts({implicit: 500});\n    \n        // Check if ticket portal is shown\n        const currentURL = await landlord_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "d15c8931-3ee8-42d7-b23f-4c3766b17202",
              "parentUUID": "34820eb1-a4cc-43dd-8da8-98651778d766",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Service Ticket Workflow -- Landlord Rejects Ticket Tenant Sign Out",
              "timedOut": false,
              "duration": 65,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n));\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n    \n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "f34ae847-d105-438e-b154-17984ed2cf1e",
              "parentUUID": "34820eb1-a4cc-43dd-8da8-98651778d766",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d00a5d8a-4e12-4097-8baa-ea9c1efc334b",
            "9d658ea4-5024-4237-95ce-5634c4d1ab9f",
            "670b8d1d-3258-44d4-9ed3-a647de7b1ffb",
            "26a8730c-b9ef-468c-8238-564e2922d7b6",
            "eb2822aa-9dda-4741-84c5-94be728a5099",
            "5bb4f825-9402-46eb-bb82-c2e6184cf3e2",
            "4c85bd9e-6c90-4a70-8094-a2b72d402050",
            "ef90dbb4-6f16-4e28-b61a-418fa1ad3ed1",
            "74f43e2a-88a9-40db-af6b-e42451b7526a",
            "f10d78ce-8075-415c-8263-784913136272",
            "d15c8931-3ee8-42d7-b23f-4c3766b17202",
            "f34ae847-d105-438e-b154-17984ed2cf1e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16012,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
          "title": "Service Ticket Workflow -- Tenant Rejects Quotation",
          "fullFile": "C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\test\\wf_2.spec.js",
          "file": "\\test\\wf_2.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Service Ticket Workflow -- Tenant Rejects Quotation\"",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation \"before all\" hook in \"Service Ticket Workflow -- Tenant Rejects Quotation\"",
              "timedOut": false,
              "duration": 6095,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tenant_driver = await new Builder().forBrowser('chrome').build();\nlandlord_driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "5378b812-32c5-46a8-b729-9f3eb10030cf",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Service Ticket Workflow -- Tenant Rejects Quotation\"",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation \"after all\" hook in \"Service Ticket Workflow -- Tenant Rejects Quotation\"",
              "timedOut": false,
              "duration": 82,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.quit(); await landlord_driver.quit()",
              "err": {},
              "uuid": "25ab3230-9afb-4b36-bd4a-39f398567011",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Select Tenant Option",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Select Tenant Option",
              "timedOut": false,
              "duration": 1415,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/');\n  \nlet title = await tenant_driver.getTitle();\nassert.equal(\"React App\", title);\n  \n// In first page\nlet tenantButton = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/div/button[1]'))));\nawait tenantButton.click();\n  \n// In Tenant Login Page\nlet loginText = await tenant_driver.wait(until.elementIsVisible(\n    tenant_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/form/div/h2\"))));\nlet result = await loginText.getText();\nassert.equal(\"Welcome tenant!\", result);",
              "err": {},
              "uuid": "6db08a92-7a13-489a-835c-b46e4bbfad0d",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant login",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant login",
              "timedOut": false,
              "duration": 651,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n      let email_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n      await email_in.sendKeys('tenant1@gmail.com');\n\n      let pw_in = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n      await pw_in.sendKeys('password');\n\n      let submit_button = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n      await submit_button.click();\n\n       await tenant_driver.manage().setTimeouts({implicit: 1000});\n\n      // In Tenant Dashboard\n      let next_pg = await tenant_driver.wait(until.elementIsVisible(\n        tenant_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n      let result = await next_pg.getText();\n      assert.equal(\"Welcome, tenant1@gmail.com\", result);",
              "err": {},
              "uuid": "43c759b0-400c-4edd-a1d8-878f35d81409",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Create Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant Create Service Ticket",
              "timedOut": false,
              "duration": 1962,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Create Service Ticket\"\n        let create_service_ticket = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[4]/a'))\n        ))\n        await create_service_ticket.click();\n  \n  \n        await tenant_driver.manage().setTimeouts({implicit: 1000});\n  \n        // Request Type\n        let req_type = await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"requestType\"]'))\n        ));\n        await req_type.click();\n        let sel_dropdown= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath(`//select[@name=\"requestType\"]/option[2]`))\n        ));\n        await sel_dropdown.click();\n  \n        // Request Description\n        let description= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@id=\"tenantComment\"]'))\n        ));\n        await description.sendKeys(\"Aircon is making unsettling noises\");\n  \n        await tenant_driver.executeScript(\"window.scrollBy(0,250)\", \"\");\n  \n        // Submit Button\n        let submit= await tenant_driver.wait(until.elementIsVisible(\n          tenant_driver.findElement(By.xpath('//*[@name=\"submitButton\"]'))\n        ));\n        await submit.click();\n          \n        await tenant_driver.sleep(1000)\n        await tenant_driver.manage().setTimeouts({implicit: 2000});\n  \n        // Check if it enters dashboard again\n        const currentURL = await tenant_driver.getCurrentUrl();\n        assert.equal('http://localhost:3000/pages/Dashboard', currentURL)",
              "err": {},
              "uuid": "72a7d61a-b051-466e-b875-219fc3dee1fe",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select Landlord Option",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Select Landlord Option",
              "timedOut": false,
              "duration": 1448,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/');\n      \nlet title = await landlord_driver.getTitle();\nassert.equal(\"React App\", title);\n      \n// In first page\nlet landlordButton = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath(\"//*[@id='root']/div/div/div/div/div/button[2]\"))));\nawait landlordButton.click();\n      \n // In Landlord Login Page\n let loginText = await landlord_driver.wait(until.elementIsVisible(\n     landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div/div/form/div/h2'))));\n let result = await loginText.getText();\n assert.equal(\"Welcome landlord!\", result);",
              "err": {},
              "uuid": "ee6bd99a-53d2-4ad5-a0c5-0794e0de2228",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord login",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord login",
              "timedOut": false,
              "duration": 690,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Sign in details: email, password, button\n  let email_in = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"email\"]'))));\n  await email_in.sendKeys('landlord1@gmail.com');\n    \n  let pw_in = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@type=\"password\"]'))));\n  await pw_in.sendKeys('password');\n\n  let submit_button = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@type=\"submit\"]'))));\n  await submit_button.click();\n\n  await landlord_driver.manage().setTimeouts({implicit: 1000});\n\n  // In Landlord Dashboard\n  let next_pg = await landlord_driver.wait(until.elementIsVisible(\n    landlord_driver.findElement(By.xpath('//*[@id=\"emailText\"]'))));\n  let result = await next_pg.getText();\n  assert.equal(\"Welcome, landlord1@gmail.com\", result);",
              "err": {},
              "uuid": "cc112d96-7785-4d65-835c-bcd26a1c0268",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Service Tickets",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord View Service Tickets",
              "timedOut": false,
              "duration": 370,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet ticket_list = await landlord_driver.wait(until.elementIsVisible(\nlandlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[1]/div[3]/a'))\n      ))\n      await ticket_list.click();\n  \n      // Check if ticket portal is shown\n      const currentURL = await landlord_driver.getCurrentUrl();\n      assert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "e613da47-aab4-4eca-b0c3-bb37eae882c0",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Select Service Ticket (Dropdown)",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Select Service Ticket (Dropdown)",
              "timedOut": false,
              "duration": 1583,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Find ticket\nawait landlord_driver.manage().setTimeouts({implicit: 3000});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]/div/button\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);",
              "err": {},
              "uuid": "e64cfe4c-2ec0-45ea-bcb2-3af174d24e26",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Self Assign Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Self Assign Service Ticket",
              "timedOut": false,
              "duration": 6227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.manage().setTimeouts({implicit: 1000});\n//await landlord_driver.sleep(2000)\n// Click self assign button\nconst self_assign_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]/div/div/div/div/button'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", self_assign_button);\nawait landlord_driver.manage().setTimeouts({implicit: 2000});\n\n// Click landlord\nconst landlord_button = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"landlord1@gmail.com\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", landlord_button);\nawait landlord_driver.sleep(2000)\n// Click confirm assignment\nconst cfm_assignment = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"Confirm Assignment\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", cfm_assignment);\nawait landlord_driver.manage().setTimeouts({implicit: 1000});\nawait landlord_driver.sleep(2000)\n// Click view details and action\nconst view_details = landlord_driver.findElement(By.xpath('//*[@class=\"chakra-accordion css-0\"]/div[last()]//button[text()=\"View Details & Actions\"]'))\nawait landlord_driver.executeScript(\"arguments[0].click();\", view_details);\nawait landlord_driver.sleep(2000)\n// Enter new page\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "6b8753e6-05e9-4293-a624-ba7a7bebdf3a",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Approve Service Ticket",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Approve Service Ticket",
              "timedOut": false,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\nlet quotationCheckbox = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\n));\nlet approveButton = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath(\"//button[text()='Approve Ticket']\"))\n));\nawait landlord_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nawait landlord_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait landlord_driver.sleep(100)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {},
              "uuid": "ebb46ba1-4d57-4853-a038-0f1a240c2cb5",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Upload Quotation",
              "timedOut": false,
              "duration": 1469,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 200});\n\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\nconst addQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", addQuotationButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL)\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"))\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf')\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"))\nawait uploadButton.click()\nawait landlord_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "f4f5fa5d-1d19-41e0-b5f1-8e3d9245e14c",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Quotation",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant View Quotation",
              "timedOut": false,
              "duration": 828,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst viewQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", viewQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL)",
              "err": {},
              "uuid": "68205d79-6239-4bac-aa73-ba8c26fa6935",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Reject Quotation",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant Reject Quotation",
              "timedOut": false,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});     \nconst rejectButton = tenant_driver.findElement(By.xpath(\"//button[text()='Reject']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", rejectButton); \nawait tenant_driver.manage().setTimeouts({implicit: 200});\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {},
              "uuid": "b8f0e9d6-78fc-4018-af87-c8d2d1d2045a",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Upload Quotation",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Upload Quotation",
              "timedOut": false,
              "duration": 548,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList');\nawait tenant_driver.manage().setTimeouts({implicit: 200});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nawait landlord_driver.manage().setTimeouts({implicit: 300});\nconst addQuotationButton = landlord_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", addQuotationButton);\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationUploadPage/', currentURL);\nconst chooseFileButton = landlord_driver.findElement(By.xpath(\"//input[@id='files']\"));\nawait chooseFileButton.sendKeys('C:/public/uploads/test.pdf');\nconst uploadButton = landlord_driver.findElement(By.xpath(\"//button[text()='Upload Quotation']\"));\nawait uploadButton.click();\nawait landlord_driver.sleep(200);\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL);",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='chakra-accordion css-0']/div[last()]\"}\n  (Session info: chrome=115.0.5790.171)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='chakra-accordion css-0']/div[last()]\"}\n  (Session info: chrome=115.0.5790.171)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\wf_2.spec.js:285:7)",
                "diff": null
              },
              "uuid": "9ead5d17-a584-4b52-b182-f89c9914778d",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant View Quotation",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant View Quotation",
              "timedOut": false,
              "duration": 1497,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst viewQuotationButton = tenant_driver.findElement(By.xpath(\"//button[text()='View/Add Quotation']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", viewQuotationButton);\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/QuotationPage/', currentURL);",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='View/Add Quotation']\"}\n  (Session info: chrome=115.0.5790.171)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='View/Add Quotation']\"}\n  (Session info: chrome=115.0.5790.171)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\wf_2.spec.js:320:5)",
                "diff": null
              },
              "uuid": "ea0024a4-4c92-4469-b923-53ec4c032c22",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Approve Quotation",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant Approve Quotation",
              "timedOut": false,
              "duration": 324,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.manage().setTimeouts({implicit: 300});\nconst quotationCheckbox = tenant_driver.findElement(By.xpath(\"//*[@id='quotationCheckbox']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", quotationCheckbox);\nconst approveButton = tenant_driver.findElement(By.xpath(\"//button[text()='Approve']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", approveButton);\nawait tenant_driver.sleep(200)\ncurrentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/ViewTicketPage/', currentURL)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id='quotationCheckbox']\"}\n  (Session info: chrome=115.0.5790.171)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id='quotationCheckbox']\"}\n  (Session info: chrome=115.0.5790.171)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\wf_2.spec.js:330:5)",
                "diff": null
              },
              "uuid": "838dd97b-25e8-4e14-b177-da9200cfdffc",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Starts Work",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Starts Work",
              "timedOut": false,
              "duration": 483,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='Start Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='chakra-accordion css-0']/div[last()]\"}\n  (Session info: chrome=115.0.5790.171)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='chakra-accordion css-0']/div[last()]\"}\n  (Session info: chrome=115.0.5790.171)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\wf_2.spec.js:347:5)",
                "diff": null
              },
              "uuid": "a376ebfb-99ae-4c32-bff0-988d85471495",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Ends Work",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Ends Work",
              "timedOut": false,
              "duration": 513,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await landlord_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\nconst lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst startWorkButton = landlord_driver.findElement(By.xpath(\"//button[text()='End Work']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", startWorkButton);\nawait landlord_driver.sleep(200)\nlet currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/TicketList', currentURL)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='chakra-accordion css-0']/div[last()]\"}\n  (Session info: chrome=115.0.5790.171)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='chakra-accordion css-0']/div[last()]\"}\n  (Session info: chrome=115.0.5790.171)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\wf_2.spec.js:365:5)",
                "diff": null
              },
              "uuid": "f9f7ee91-b926-4b5a-9e01-0e8a3fe9f61b",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Give Feedback",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant Give Feedback",
              "timedOut": false,
              "duration": 1376,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await tenant_driver.get('http://localhost:3000/pages/TicketList/');\nawait tenant_driver.manage().setTimeouts({implicit: 300});\n\nconst lastTicket = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", detailsButton);\nconst feedbackButton = tenant_driver.findElement(By.xpath(\"//button[text()='Close Ticket & Give Feedback']\"))\nawait tenant_driver.executeScript(\"arguments[0].click();\", feedbackButton);\nawait tenant_driver.manage().setTimeouts({implicit: 3000});\nlet currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/FeedbackForm/', currentURL)\nconst feedbackText = tenant_driver.findElement(By.name('comment'))\nawait feedbackText.sendKeys('Dummy Feedback Comment');\nconst feedbackRating = tenant_driver.findElement(By.xpath(\"//*[@class='chakra-icon css-11w35xc']\"))\nawait feedbackRating.click();\nconst submitButton = tenant_driver.findElement(By.xpath(\"//button[text()='Submit']\"))\nawait submitButton.click()\nawait tenant_driver.manage().setTimeouts({implicit: 2000});\ncurrentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/pages/dashboard', currentURL)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='Close Ticket & Give Feedback']\"}\n  (Session info: chrome=115.0.5790.171)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='Close Ticket & Give Feedback']\"}\n  (Session info: chrome=115.0.5790.171)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)\n    at async Context.<anonymous> (test\\wf_2.spec.js:388:5)",
                "diff": null
              },
              "uuid": "a1a31f73-95c2-4c35-a8c3-0cd6fad0a31c",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord View Feedback",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord View Feedback",
              "timedOut": false,
              "duration": 419,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const lastTicket = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", lastTicket);\nconst detailsButton = landlord_driver.findElement(By.xpath(\"//*[@class='chakra-accordion css-0']/div[last()]//button[text()='View Details & Actions']\"))\nawait landlord_driver.executeScript(\"arguments[0].click();\", detailsButton);\nlet result = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[3]/div/div/div[1]/textarea'))\n  ));\nlet feedback = await result.getText();\nassert.equal(\"Dummy Feedback Comment\", feedback)",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"root\"]/div/div/div[3]/div/div/div[1]/textarea\"}\n  (Session info: chrome=115.0.5790.171)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"root\"]/div/div/div[3]/div/div/div[1]/textarea\"}\n  (Session info: chrome=115.0.5790.171)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\65961\\Documents\\Term 5\\Software_Construction\\esc-cohort3-team1\\tenant-landlord-app\\endtoend_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)",
                "diff": null
              },
              "uuid": "7e6931e5-7c92-49b2-bcd6-e3aa27c5ef62",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Landlord Sign Out",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Landlord Sign Out",
              "timedOut": false,
              "duration": 57,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await landlord_driver.wait(until.elementIsVisible(\n  landlord_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait landlord_driver.manage().setTimeouts({implicit: 500});\n// Check if ticket portal is shown\nconst currentURL = await landlord_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "864c213d-c72f-4b93-82d3-f211a0888c94",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tenant Sign Out",
              "fullTitle": "Service Ticket Workflow -- Tenant Rejects Quotation Tenant Sign Out",
              "timedOut": false,
              "duration": 58,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on \"Service Ticket List\"\nlet signout = await tenant_driver.wait(until.elementIsVisible(\n  tenant_driver.findElement(By.xpath('//*[@id=\"root\"]/div/div/div[1]/div[3]/button'))\n))\nawait signout.click();\nawait tenant_driver.manage().setTimeouts({implicit: 500});\n// Check if ticket portal is shown\nconst currentURL = await tenant_driver.getCurrentUrl();\nassert.equal('http://localhost:3000/', currentURL)",
              "err": {},
              "uuid": "332d6306-2dfd-4e1e-8f90-38afd5d03931",
              "parentUUID": "d7741c6a-02b6-4982-a594-5eabc33cf12a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6db08a92-7a13-489a-835c-b46e4bbfad0d",
            "43c759b0-400c-4edd-a1d8-878f35d81409",
            "72a7d61a-b051-466e-b875-219fc3dee1fe",
            "ee6bd99a-53d2-4ad5-a0c5-0794e0de2228",
            "cc112d96-7785-4d65-835c-bcd26a1c0268",
            "e613da47-aab4-4eca-b0c3-bb37eae882c0",
            "e64cfe4c-2ec0-45ea-bcb2-3af174d24e26",
            "6b8753e6-05e9-4293-a624-ba7a7bebdf3a",
            "ebb46ba1-4d57-4853-a038-0f1a240c2cb5",
            "f4f5fa5d-1d19-41e0-b5f1-8e3d9245e14c",
            "68205d79-6239-4bac-aa73-ba8c26fa6935",
            "b8f0e9d6-78fc-4018-af87-c8d2d1d2045a",
            "864c213d-c72f-4b93-82d3-f211a0888c94",
            "332d6306-2dfd-4e1e-8f90-38afd5d03931"
          ],
          "failures": [
            "9ead5d17-a584-4b52-b182-f89c9914778d",
            "ea0024a4-4c92-4469-b923-53ec4c032c22",
            "838dd97b-25e8-4e14-b177-da9200cfdffc",
            "a376ebfb-99ae-4c32-bff0-988d85471495",
            "f9f7ee91-b926-4b5a-9e01-0e8a3fe9f61b",
            "a1a31f73-95c2-4c35-a8c3-0cd6fad0a31c",
            "7e6931e5-7c92-49b2-bcd6-e3aa27c5ef62"
          ],
          "pending": [],
          "skipped": [],
          "duration": 22186,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}